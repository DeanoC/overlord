description = "A53 Performance Monitor Unit profiler"
[[register]]
  name = "EVCNTR0_EL0"
  type = "rw"
  width = 32
  description = "Performance Monitors Event Count Registers"
  default = "0x00000000"
  offset = "0x00000000"
  [[register.field]]
    name = "EVCNTR0_EL0"
    bits = "31:0"
    type = "rw"
    shortdesc = '''Event counter n.'''
    longdesc = '''Value of event counter n, where n is the number of this register and is a number from 0 to 30.'''
[[register]]
  name = "EVCNTR1_EL0"
  type = "rw"
  width = 32
  description = "Performance Monitors Event Count Registers"
  default = "0x00000000"
  offset = "0x00000008"
  [[register.field]]
    name = "EVCNTR1_EL0"
    bits = "31:0"
    type = "rw"
    shortdesc = '''Event counter n.'''
    longdesc = '''Value of event counter n, where n is the number of this register and is a number from 0 to 30.'''
[[register]]
  name = "EVCNTR2_EL0"
  type = "rw"
  width = 32
  description = "Performance Monitors Event Count Registers"
  default = "0x00000000"
  offset = "0x00000010"
  [[register.field]]
    name = "EVCNTR2_EL0"
    bits = "31:0"
    type = "rw"
    shortdesc = '''Event counter n.'''
    longdesc = '''Value of event counter n, where n is the number of this register and is a number from 0 to 30.'''
[[register]]
  name = "EVCNTR3_EL0"
  type = "rw"
  width = 32
  description = "Performance Monitors Event Count Registers"
  default = "0x00000000"
  offset = "0x00000018"
  [[register.field]]
    name = "EVCNTR3_EL0"
    bits = "31:0"
    type = "rw"
    shortdesc = '''Event counter n.'''
    longdesc = '''Value of event counter n, where n is the number of this register and is a number from 0 to 30.'''
[[register]]
  name = "EVCNTR4_EL0"
  type = "rw"
  width = 32
  description = "Performance Monitors Event Count Registers"
  default = "0x00000000"
  offset = "0x00000020"
  [[register.field]]
    name = "EVCNTR4_EL0"
    bits = "31:0"
    type = "rw"
    shortdesc = '''Event counter n.'''
    longdesc = '''Value of event counter n, where n is the number of this register and is a number from 0 to 30.'''
[[register]]
  name = "EVCNTR5_EL0"
  type = "rw"
  width = 32
  description = "Performance Monitors Event Count Registers"
  default = "0x00000000"
  offset = "0x00000028"
  [[register.field]]
    name = "EVCNTR5_EL0"
    bits = "31:0"
    type = "rw"
    shortdesc = '''Event counter n.'''
    longdesc = '''Value of event counter n, where n is the number of this register and is a number from 0 to 30.'''
[[register]]
  name = "CCNTR_EL0_31TO0"
  type = "rw"
  width = 32
  description = "Performance Monitors Cycle Counter (low word)"
  default = "0x00000000"
  offset = "0x000000F8"
  [[register.field]]
    name = "CCNT"
    bits = "31:0"
    type = "rw"
    shortdesc = '''Cycle count.'''
    longdesc = '''Depending on the values of PMCR_EL0.{LC,D}, the cycle count increments in one of the following ways:Every processor clock cycle.Every 64th processor clock cycle.The cycle count can be reset to zero by writing 1 to PMCR_EL0.C.'''
[[register]]
  name = "CCNTR_EL0_63TO32"
  type = "rw"
  width = 32
  description = "Performance Monitors Cycle Counter (high word)"
  default = "0x00000000"
  offset = "0x000000FC"
  [[register.field]]
    name = "CCNT"
    bits = "31:0"
    type = "rw"
    shortdesc = '''Cycle count.'''
    longdesc = '''Depending on the values of PMCR_EL0.{LC,D}, the cycle count increments in one of the following ways:Every processor clock cycle.Every 64th processor clock cycle.The cycle count can be reset to zero by writing 1 to PMCR_EL0.C.'''
[[register]]
  name = "EVTYPER0_EL0"
  type = "rw"
  width = 32
  description = "Performance Monitors Event Type Registers"
  default = "0x00000000"
  offset = "0x00000400"
  [[register.field]]
    name = "P"
    bits = "31"
    type = "rw"
    shortdesc = '''EL1 modes filtering bit.'''
    longdesc = '''Controls counting in EL1. If EL3 is implemented, then counting in Non-secure EL1 is further controlled by the NSK bit.'''
  [[register.field]]
    name = "U"
    bits = "30"
    type = "rw"
    shortdesc = '''EL0 filtering bit.'''
    longdesc = '''Controls counting in EL0. If EL3 is implemented, then counting in Non-secure EL0 is further controlled by the NSU bit.'''
  [[register.field]]
    name = "NSK"
    bits = "29"
    type = "rw"
    shortdesc = '''Non-secure kernel modes filtering bit.'''
    longdesc = '''Controls counting in Non-secure EL1. If EL3 is not implemented, this bit is RES0.If the value of this bit is equal to the value of P, events in Non-secure EL1 are counted.Otherwise, events in Non-secure EL1 are not counted.'''
  [[register.field]]
    name = "NSU"
    bits = "28"
    type = "rw"
    shortdesc = '''Non-secure user modes filtering bit.'''
    longdesc = '''Controls counting in Non-secure EL0. If EL3 is not implemented, this bit is RES0.If the value of this bit is equal to the value of U, events in Non-secure EL0 are counted.Otherwise, events in Non-secure EL0 are not counted.'''
  [[register.field]]
    name = "NSH"
    bits = "27"
    type = "rw"
    shortdesc = '''Non-secure Hyp modes filtering bit.'''
    longdesc = '''Controls counting in Non-secure EL2. If EL2 is not implemented, this bit is RES0.'''
  [[register.field]]
    name = "M"
    bits = "26"
    type = "rw"
    shortdesc = '''Secure EL3 filtering bit.'''
    longdesc = '''Most applications can ignore this bit and set the value to zero. If EL3 is not implemented, this bit is RES0.If the value of this bit is equal to the value of P, events in Secure EL3 are counted.Otherwise, events in Secure EL3 are not counted.'''
  [[register.field]]
    name = "EVTCOUNT"
    bits = "9:0"
    type = "rw"
    shortdesc = '''Event to count.'''
    longdesc = '''The event number of the event that is counted by event counter EVCNTR<n>_EL0.Software must program this field with an event defined by the processor or a common event defined by the architecture.If evtCount is programmed to an event that is reserved or not implemented, the behavior depends on the event type.For common architectural and microarchitectural events:No events are counted.The value read back on evtCount is the value written.For IMPLEMENTATION DEFINED events:It is UNPREDICTABLE what event, if any, is counted. UNPREDICTABLE in this case means the event must not expose privileged information.The value read back on evtCount is an UNKNOWN value with the same effect.ARM recommends that the behavior across a family of implementations is defined such that if a given implementation does not include an event from a set of common IMPLEMENTATION DEFINED events, then no event is counted and the value read back on evtCount is the value written.'''
[[register]]
  name = "EVTYPER1_EL0"
  type = "rw"
  width = 32
  description = "Performance Monitors Event Type Registers"
  default = "0x00000000"
  offset = "0x00000404"
  [[register.field]]
    name = "P"
    bits = "31"
    type = "rw"
    shortdesc = '''EL1 modes filtering bit.'''
    longdesc = '''Controls counting in EL1. If EL3 is implemented, then counting in Non-secure EL1 is further controlled by the NSK bit.'''
  [[register.field]]
    name = "U"
    bits = "30"
    type = "rw"
    shortdesc = '''EL0 filtering bit.'''
    longdesc = '''Controls counting in EL0. If EL3 is implemented, then counting in Non-secure EL0 is further controlled by the NSU bit.'''
  [[register.field]]
    name = "NSK"
    bits = "29"
    type = "rw"
    shortdesc = '''Non-secure kernel modes filtering bit.'''
    longdesc = '''Controls counting in Non-secure EL1. If EL3 is not implemented, this bit is RES0.If the value of this bit is equal to the value of P, events in Non-secure EL1 are counted.Otherwise, events in Non-secure EL1 are not counted.'''
  [[register.field]]
    name = "NSU"
    bits = "28"
    type = "rw"
    shortdesc = '''Non-secure user modes filtering bit.'''
    longdesc = '''Controls counting in Non-secure EL0. If EL3 is not implemented, this bit is RES0.If the value of this bit is equal to the value of U, events in Non-secure EL0 are counted.Otherwise, events in Non-secure EL0 are not counted.'''
  [[register.field]]
    name = "NSH"
    bits = "27"
    type = "rw"
    shortdesc = '''Non-secure Hyp modes filtering bit.'''
    longdesc = '''Controls counting in Non-secure EL2. If EL2 is not implemented, this bit is RES0.'''
  [[register.field]]
    name = "M"
    bits = "26"
    type = "rw"
    shortdesc = '''Secure EL3 filtering bit.'''
    longdesc = '''Most applications can ignore this bit and set the value to zero. If EL3 is not implemented, this bit is RES0.If the value of this bit is equal to the value of P, events in Secure EL3 are counted.Otherwise, events in Secure EL3 are not counted.'''
  [[register.field]]
    name = "EVTCOUNT"
    bits = "9:0"
    type = "rw"
    shortdesc = '''Event to count.'''
    longdesc = '''The event number of the event that is counted by event counter EVCNTR<n>_EL0.Software must program this field with an event defined by the processor or a common event defined by the architecture.If evtCount is programmed to an event that is reserved or not implemented, the behavior depends on the event type.For common architectural and microarchitectural events:No events are counted.The value read back on evtCount is the value written.For IMPLEMENTATION DEFINED events:It is UNPREDICTABLE what event, if any, is counted. UNPREDICTABLE in this case means the event must not expose privileged information.The value read back on evtCount is an UNKNOWN value with the same effect.ARM recommends that the behavior across a family of implementations is defined such that if a given implementation does not include an event from a set of common IMPLEMENTATION DEFINED events, then no event is counted and the value read back on evtCount is the value written.'''
[[register]]
  name = "EVTYPER2_EL0"
  type = "rw"
  width = 32
  description = "Performance Monitors Event Type Registers"
  default = "0x00000000"
  offset = "0x00000408"
  [[register.field]]
    name = "P"
    bits = "31"
    type = "rw"
    shortdesc = '''EL1 modes filtering bit.'''
    longdesc = '''Controls counting in EL1. If EL3 is implemented, then counting in Non-secure EL1 is further controlled by the NSK bit.'''
  [[register.field]]
    name = "U"
    bits = "30"
    type = "rw"
    shortdesc = '''EL0 filtering bit.'''
    longdesc = '''Controls counting in EL0. If EL3 is implemented, then counting in Non-secure EL0 is further controlled by the NSU bit.'''
  [[register.field]]
    name = "NSK"
    bits = "29"
    type = "rw"
    shortdesc = '''Non-secure kernel modes filtering bit.'''
    longdesc = '''Controls counting in Non-secure EL1. If EL3 is not implemented, this bit is RES0.If the value of this bit is equal to the value of P, events in Non-secure EL1 are counted.Otherwise, events in Non-secure EL1 are not counted.'''
  [[register.field]]
    name = "NSU"
    bits = "28"
    type = "rw"
    shortdesc = '''Non-secure user modes filtering bit.'''
    longdesc = '''Controls counting in Non-secure EL0. If EL3 is not implemented, this bit is RES0.If the value of this bit is equal to the value of U, events in Non-secure EL0 are counted.Otherwise, events in Non-secure EL0 are not counted.'''
  [[register.field]]
    name = "NSH"
    bits = "27"
    type = "rw"
    shortdesc = '''Non-secure Hyp modes filtering bit.'''
    longdesc = '''Controls counting in Non-secure EL2. If EL2 is not implemented, this bit is RES0.'''
  [[register.field]]
    name = "M"
    bits = "26"
    type = "rw"
    shortdesc = '''Secure EL3 filtering bit.'''
    longdesc = '''Most applications can ignore this bit and set the value to zero. If EL3 is not implemented, this bit is RES0.If the value of this bit is equal to the value of P, events in Secure EL3 are counted.Otherwise, events in Secure EL3 are not counted.'''
  [[register.field]]
    name = "EVTCOUNT"
    bits = "9:0"
    type = "rw"
    shortdesc = '''Event to count.'''
    longdesc = '''The event number of the event that is counted by event counter EVCNTR<n>_EL0.Software must program this field with an event defined by the processor or a common event defined by the architecture.If evtCount is programmed to an event that is reserved or not implemented, the behavior depends on the event type.For common architectural and microarchitectural events:No events are counted.The value read back on evtCount is the value written.For IMPLEMENTATION DEFINED events:It is UNPREDICTABLE what event, if any, is counted. UNPREDICTABLE in this case means the event must not expose privileged information.The value read back on evtCount is an UNKNOWN value with the same effect.ARM recommends that the behavior across a family of implementations is defined such that if a given implementation does not include an event from a set of common IMPLEMENTATION DEFINED events, then no event is counted and the value read back on evtCount is the value written.'''
[[register]]
  name = "EVTYPER3_EL0"
  type = "rw"
  width = 32
  description = "Performance Monitors Event Type Registers"
  default = "0x00000000"
  offset = "0x0000040C"
  [[register.field]]
    name = "P"
    bits = "31"
    type = "rw"
    shortdesc = '''EL1 modes filtering bit.'''
    longdesc = '''Controls counting in EL1. If EL3 is implemented, then counting in Non-secure EL1 is further controlled by the NSK bit.'''
  [[register.field]]
    name = "U"
    bits = "30"
    type = "rw"
    shortdesc = '''EL0 filtering bit.'''
    longdesc = '''Controls counting in EL0. If EL3 is implemented, then counting in Non-secure EL0 is further controlled by the NSU bit.'''
  [[register.field]]
    name = "NSK"
    bits = "29"
    type = "rw"
    shortdesc = '''Non-secure kernel modes filtering bit.'''
    longdesc = '''Controls counting in Non-secure EL1. If EL3 is not implemented, this bit is RES0.If the value of this bit is equal to the value of P, events in Non-secure EL1 are counted.Otherwise, events in Non-secure EL1 are not counted.'''
  [[register.field]]
    name = "NSU"
    bits = "28"
    type = "rw"
    shortdesc = '''Non-secure user modes filtering bit.'''
    longdesc = '''Controls counting in Non-secure EL0. If EL3 is not implemented, this bit is RES0.If the value of this bit is equal to the value of U, events in Non-secure EL0 are counted.Otherwise, events in Non-secure EL0 are not counted.'''
  [[register.field]]
    name = "NSH"
    bits = "27"
    type = "rw"
    shortdesc = '''Non-secure Hyp modes filtering bit.'''
    longdesc = '''Controls counting in Non-secure EL2. If EL2 is not implemented, this bit is RES0.'''
  [[register.field]]
    name = "M"
    bits = "26"
    type = "rw"
    shortdesc = '''Secure EL3 filtering bit.'''
    longdesc = '''Most applications can ignore this bit and set the value to zero. If EL3 is not implemented, this bit is RES0.If the value of this bit is equal to the value of P, events in Secure EL3 are counted.Otherwise, events in Secure EL3 are not counted.'''
  [[register.field]]
    name = "EVTCOUNT"
    bits = "9:0"
    type = "rw"
    shortdesc = '''Event to count.'''
    longdesc = '''The event number of the event that is counted by event counter EVCNTR<n>_EL0.Software must program this field with an event defined by the processor or a common event defined by the architecture.If evtCount is programmed to an event that is reserved or not implemented, the behavior depends on the event type.For common architectural and microarchitectural events:No events are counted.The value read back on evtCount is the value written.For IMPLEMENTATION DEFINED events:It is UNPREDICTABLE what event, if any, is counted. UNPREDICTABLE in this case means the event must not expose privileged information.The value read back on evtCount is an UNKNOWN value with the same effect.ARM recommends that the behavior across a family of implementations is defined such that if a given implementation does not include an event from a set of common IMPLEMENTATION DEFINED events, then no event is counted and the value read back on evtCount is the value written.'''
[[register]]
  name = "EVTYPER4_EL0"
  type = "rw"
  width = 32
  description = "Performance Monitors Event Type Registers"
  default = "0x00000000"
  offset = "0x00000410"
  [[register.field]]
    name = "P"
    bits = "31"
    type = "rw"
    shortdesc = '''EL1 modes filtering bit.'''
    longdesc = '''Controls counting in EL1. If EL3 is implemented, then counting in Non-secure EL1 is further controlled by the NSK bit.'''
  [[register.field]]
    name = "U"
    bits = "30"
    type = "rw"
    shortdesc = '''EL0 filtering bit.'''
    longdesc = '''Controls counting in EL0. If EL3 is implemented, then counting in Non-secure EL0 is further controlled by the NSU bit.'''
  [[register.field]]
    name = "NSK"
    bits = "29"
    type = "rw"
    shortdesc = '''Non-secure kernel modes filtering bit.'''
    longdesc = '''Controls counting in Non-secure EL1. If EL3 is not implemented, this bit is RES0.If the value of this bit is equal to the value of P, events in Non-secure EL1 are counted.Otherwise, events in Non-secure EL1 are not counted.'''
  [[register.field]]
    name = "NSU"
    bits = "28"
    type = "rw"
    shortdesc = '''Non-secure user modes filtering bit.'''
    longdesc = '''Controls counting in Non-secure EL0. If EL3 is not implemented, this bit is RES0.If the value of this bit is equal to the value of U, events in Non-secure EL0 are counted.Otherwise, events in Non-secure EL0 are not counted.'''
  [[register.field]]
    name = "NSH"
    bits = "27"
    type = "rw"
    shortdesc = '''Non-secure Hyp modes filtering bit.'''
    longdesc = '''Controls counting in Non-secure EL2. If EL2 is not implemented, this bit is RES0.'''
  [[register.field]]
    name = "M"
    bits = "26"
    type = "rw"
    shortdesc = '''Secure EL3 filtering bit.'''
    longdesc = '''Most applications can ignore this bit and set the value to zero. If EL3 is not implemented, this bit is RES0.If the value of this bit is equal to the value of P, events in Secure EL3 are counted.Otherwise, events in Secure EL3 are not counted.'''
  [[register.field]]
    name = "EVTCOUNT"
    bits = "9:0"
    type = "rw"
    shortdesc = '''Event to count.'''
    longdesc = '''The event number of the event that is counted by event counter EVCNTR<n>_EL0.Software must program this field with an event defined by the processor or a common event defined by the architecture.If evtCount is programmed to an event that is reserved or not implemented, the behavior depends on the event type.For common architectural and microarchitectural events:No events are counted.The value read back on evtCount is the value written.For IMPLEMENTATION DEFINED events:It is UNPREDICTABLE what event, if any, is counted. UNPREDICTABLE in this case means the event must not expose privileged information.The value read back on evtCount is an UNKNOWN value with the same effect.ARM recommends that the behavior across a family of implementations is defined such that if a given implementation does not include an event from a set of common IMPLEMENTATION DEFINED events, then no event is counted and the value read back on evtCount is the value written.'''
[[register]]
  name = "EVTYPER5_EL0"
  type = "rw"
  width = 32
  description = "Performance Monitors Event Type Registers"
  default = "0x00000000"
  offset = "0x00000414"
  [[register.field]]
    name = "P"
    bits = "31"
    type = "rw"
    shortdesc = '''EL1 modes filtering bit.'''
    longdesc = '''Controls counting in EL1. If EL3 is implemented, then counting in Non-secure EL1 is further controlled by the NSK bit.'''
  [[register.field]]
    name = "U"
    bits = "30"
    type = "rw"
    shortdesc = '''EL0 filtering bit.'''
    longdesc = '''Controls counting in EL0. If EL3 is implemented, then counting in Non-secure EL0 is further controlled by the NSU bit.'''
  [[register.field]]
    name = "NSK"
    bits = "29"
    type = "rw"
    shortdesc = '''Non-secure kernel modes filtering bit.'''
    longdesc = '''Controls counting in Non-secure EL1. If EL3 is not implemented, this bit is RES0.If the value of this bit is equal to the value of P, events in Non-secure EL1 are counted.Otherwise, events in Non-secure EL1 are not counted.'''
  [[register.field]]
    name = "NSU"
    bits = "28"
    type = "rw"
    shortdesc = '''Non-secure user modes filtering bit.'''
    longdesc = '''Controls counting in Non-secure EL0. If EL3 is not implemented, this bit is RES0.If the value of this bit is equal to the value of U, events in Non-secure EL0 are counted.Otherwise, events in Non-secure EL0 are not counted.'''
  [[register.field]]
    name = "NSH"
    bits = "27"
    type = "rw"
    shortdesc = '''Non-secure Hyp modes filtering bit.'''
    longdesc = '''Controls counting in Non-secure EL2. If EL2 is not implemented, this bit is RES0.'''
  [[register.field]]
    name = "M"
    bits = "26"
    type = "rw"
    shortdesc = '''Secure EL3 filtering bit.'''
    longdesc = '''Most applications can ignore this bit and set the value to zero. If EL3 is not implemented, this bit is RES0.If the value of this bit is equal to the value of P, events in Secure EL3 are counted.Otherwise, events in Secure EL3 are not counted.'''
  [[register.field]]
    name = "EVTCOUNT"
    bits = "9:0"
    type = "rw"
    shortdesc = '''Event to count.'''
    longdesc = '''The event number of the event that is counted by event counter EVCNTR<n>_EL0.Software must program this field with an event defined by the processor or a common event defined by the architecture.If evtCount is programmed to an event that is reserved or not implemented, the behavior depends on the event type.For common architectural and microarchitectural events:No events are counted.The value read back on evtCount is the value written.For IMPLEMENTATION DEFINED events:It is UNPREDICTABLE what event, if any, is counted. UNPREDICTABLE in this case means the event must not expose privileged information.The value read back on evtCount is an UNKNOWN value with the same effect.ARM recommends that the behavior across a family of implementations is defined such that if a given implementation does not include an event from a set of common IMPLEMENTATION DEFINED events, then no event is counted and the value read back on evtCount is the value written.'''
[[register]]
  name = "CCFILTR_EL0"
  type = "rw"
  width = 32
  description = "Performance Monitors Cycle Counter Filter Register"
  default = "0x00000000"
  offset = "0x0000047C"
  [[register.field]]
    name = "P"
    bits = "31"
    type = "rw"
    shortdesc = '''EL1 modes filtering bit.'''
    longdesc = '''Controls counting in EL1. If EL3 is implemented, then counting in Non-secure EL1 is further controlled by the NSK bit.'''
  [[register.field]]
    name = "U"
    bits = "30"
    type = "rw"
    shortdesc = '''EL0 filtering bit.'''
    longdesc = '''Controls counting in EL0. If EL3 is implemented, then counting in Non-secure EL0 is further controlled by the NSU bit.'''
  [[register.field]]
    name = "NSK"
    bits = "29"
    type = "rw"
    shortdesc = '''Non-secure kernel modes filtering bit.'''
    longdesc = '''Controls counting in Non-secure EL1. If EL3 is not implemented, this bit is RES0.If the value of this bit is equal to the value of P, cycles in Non-secure EL1 are counted.Otherwise, cycles in Non-secure EL1 are not counted.'''
  [[register.field]]
    name = "NSU"
    bits = "28"
    type = "rw"
    shortdesc = '''Non-secure user modes filtering bit.'''
    longdesc = '''Controls counting in Non-secure EL0. If EL3 is not implemented, this bit is RES0.If the value of this bit is equal to the value of U, cycles in Non-secure EL0 are counted.Otherwise, cycles in Non-secure EL0 are not counted.'''
  [[register.field]]
    name = "NSH"
    bits = "27"
    type = "rw"
    shortdesc = '''Non-secure Hyp modes filtering bit.'''
    longdesc = '''Controls counting in Non-secure EL2. If EL2 is not implemented, this bit is RES0.'''
  [[register.field]]
    name = "M"
    bits = "26"
    type = "rw"
    shortdesc = '''Secure EL3 filtering bit.'''
    longdesc = '''Most applications can ignore this bit and set the value to zero. If EL3 is not implemented, this bit is RES0.If the value of this bit is equal to the value of P, cycles in Secure EL3 are counted.Otherwise, cycles in Secure EL3 are not counted.'''
[[register]]
  name = "CNTENSET_EL0"
  type = "rw"
  width = 32
  description = "Performance Monitors Count Enable Set Register"
  default = "0x00000000"
  offset = "0x00000C00"
  [[register.field]]
    name = "C"
    bits = "31"
    type = "rw"
    shortdesc = '''PMCCNTR_EL0 enable bit.'''
    longdesc = '''Enables the cycle counter register.'''
  [[register.field]]
    name = "P"
    bits = "30:0"
    type = "rw"
    shortdesc = '''Event counter enable bit for EVCNTR<x>.'''
    longdesc = '''N is the value in PMCR_EL0.N. Bits [30:N] are RAZ/WI.Possible values of each bit are:'''
[[register]]
  name = "CNTENCLR_EL0"
  type = "rw"
  width = 32
  description = "Performance Monitors Count Enable Clear Register"
  default = "0x00000000"
  offset = "0x00000C20"
  [[register.field]]
    name = "C"
    bits = "31"
    type = "rw"
    shortdesc = '''PMCCNTR_EL0 disable bit.'''
    longdesc = '''Disables the cycle counter register.'''
  [[register.field]]
    name = "P"
    bits = "30:0"
    type = "rw"
    shortdesc = '''Event counter disable bit for EVCNTR<x>.'''
    longdesc = '''N is the value in PMCR_EL0.N. Bits [30:N] are RAZ/WI.Possible values of each bit are:'''
[[register]]
  name = "INTENSET_EL1"
  type = "rw"
  width = 32
  description = "Performance Monitors Interrupt Enable Set Register"
  default = "0x00000000"
  offset = "0x00000C40"
  [[register.field]]
    name = "C"
    bits = "31"
    type = "rw"
  [[register.field]]
    name = "P"
    bits = "30:0"
    type = "rw"
    shortdesc = '''Event counter overflow interrupt request enable bit for EVCNTR<x>_EL0.'''
    longdesc = '''N is the value in PMCR_EL0.N. Bits [30:N] are RAZ/WI.Possible values are:'''
[[register]]
  name = "INTENCLR_EL1"
  type = "rw"
  width = 32
  description = "Performance Monitors Interrupt Enable Clear Register"
  default = "0x00000000"
  offset = "0x00000C60"
  [[register.field]]
    name = "C"
    bits = "31"
    type = "rw"
  [[register.field]]
    name = "P"
    bits = "30:0"
    type = "rw"
    shortdesc = '''Event counter overflow interrupt request disable bit for EVCNTR<x>_EL0.'''
    longdesc = '''N is the value in PMCR_EL0.N. Bits [30:N] are RAZ/WI.Possible values are:'''
[[register]]
  name = "OVSCLR_EL0"
  type = "rw"
  width = 32
  description = "Performance Monitors Overflow Flag Status Clear Register"
  default = "0x00000000"
  offset = "0x00000C80"
  [[register.field]]
    name = "C"
    bits = "31"
    type = "rw"
    shortdesc = '''PMCCNTR_EL0 overflow bit.'''
    longdesc = '''Possible values are:PMCR_EL0.LC is used to control from which bit of PMCCNTR_EL0 (bit 31 or bit 63) an overflow is detected.'''
  [[register.field]]
    name = "P"
    bits = "30:0"
    type = "rw"
    shortdesc = '''Event counter overflow clear bit for EVCNTR<x>.'''
    longdesc = '''N is the value in PMCR_EL0.N. Bits [30:N] are RAZ/WI.Possible values of each bit are:'''
[[register]]
  name = "SWINC_EL0"
  type = "wo"
  width = 32
  description = "Performance Monitors Software Increment Register"
  default = "0x00000000"
  offset = "0x00000CA0"
  [[register.field]]
    name = "P"
    bits = "30:0"
    type = "wo"
    shortdesc = '''Event counter software increment bit for EVCNTR<x>.'''
    longdesc = '''P<x> is WI if x >= PMCR_EL0.N, the number of implemented counters.Otherwise, the effects of writing to this bit are:'''
[[register]]
  name = "OVSSET_EL0"
  type = "rw"
  width = 32
  description = "Performance Monitors Overflow Flag Status Set Register"
  default = "0x00000000"
  offset = "0x00000CC0"
  [[register.field]]
    name = "C"
    bits = "31"
    type = "rw"
  [[register.field]]
    name = "P"
    bits = "30:0"
    type = "rw"
    shortdesc = '''Event counter overflow set bit for EVCNTR<x>.'''
    longdesc = '''N is the value in PMCR_EL0.N. Bits [30:N] are RAZ/WI.Possible values are:'''
[[register]]
  name = "CFGR"
  type = "ro"
  width = 32
  description = "Performance Monitors Configuration Register"
  default = "0x0001FF06"
  offset = "0x00000E00"
  [[register.field]]
    name = "UEN"
    bits = "19"
    type = "ro"
    shortdesc = '''User-mode Enable Register supported.'''
    longdesc = '''PMUSERENR_EL0 is not visible in the external debug interface, so this bit is RES0.'''
  [[register.field]]
    name = "WT"
    bits = "18"
    type = "ro"
  [[register.field]]
    name = "NA"
    bits = "17"
    type = "ro"
  [[register.field]]
    name = "EX"
    bits = "16"
    type = "ro"
    shortdesc = '''Export supported.'''
    longdesc = '''Value is IMPLEMENTATION DEFINED.'''
  [[register.field]]
    name = "CCD"
    bits = "15"
    type = "ro"
    shortdesc = '''Cycle counter has prescale.'''
    longdesc = '''This is RES1 if AArch32 is supported at any EL, and RES0 otherwise.'''
  [[register.field]]
    name = "CC"
    bits = "14"
    type = "ro"
    shortdesc = '''Dedicated cycle counter (counter 31) supported.'''
    longdesc = '''This bit is RES1.'''
  [[register.field]]
    name = "SIZE"
    bits = "13:8"
    type = "ro"
    shortdesc = '''Size of counters.'''
    longdesc = '''This field determines the spacing of counters in the memory-map.In v8-A the counters are at doubleword-aligned addresses, and the largest counter is 64-bits, so this field is 0b111111.'''
  [[register.field]]
    name = "N"
    bits = "7:0"
    type = "ro"
    shortdesc = '''Number of counters implemented in addition to the cycle counter, PMCCNTR_EL0.'''
    longdesc = '''The maximum number of event counters is 31, so bits[7:5] are always RES0.and so on up to 0b00011111, which indicates PMCCNTR_EL0 and 31 event counters implemented.'''
[[register]]
  name = "CR_EL0"
  type = "rw"
  width = 32
  description = "Performance Monitors Control Register"
  default = "0x00000000"
  offset = "0x00000E04"
  [[register.field]]
    name = "LC"
    bits = "6"
    type = "rw"
    shortdesc = '''Long cycle counter enable.'''
    longdesc = '''Determines which PMCCNTR_EL0 bit generates an overflow recorded by PMOVSR[31].ARM deprecates use of PMCR_EL0.LC = 0.'''
  [[register.field]]
    name = "DP"
    bits = "5"
    type = "rw"
  [[register.field]]
    name = "X"
    bits = "4"
    type = "rw"
  [[register.field]]
    name = "D"
    bits = "3"
    type = "rw"
  [[register.field]]
    name = "C"
    bits = "2"
    type = "rw"
    shortdesc = '''Cycle counter reset.'''
    longdesc = '''This bit is WO. The effects of writing to this bit are:This bit is always RAZ.Resetting PMCCNTR_EL0 does not clear the PMCCNTR_EL0 overflow bit to 0.'''
  [[register.field]]
    name = "P"
    bits = "1"
    type = "rw"
    shortdesc = '''Event counter reset.'''
    longdesc = '''This bit is WO. The effects of writing to this bit are:This bit is always RAZ.Resetting the event counters does not clear any overflow bits to 0.'''
  [[register.field]]
    name = "E"
    bits = "0"
    type = "rw"
[[register]]
  name = "CEID0_EL0"
  type = "ro"
  width = 32
  description = "Performance Monitors Common Event Identification Register 0"
  default = "0x63FFFFFF"
  offset = "0x00000E20"
  [[register.field]]
    name = "CE_31TO0"
    bits = "31:0"
    type = "ro"
    shortdesc = '''Common architectural and microarchitectural feature events that can be counted by the PMU event counters.'''
    longdesc = '''For each bit described in the following table, the event is implemented if the bit is set to 1, or not implemented if the bit is set to 0.BitEvent numberEvent mnemonic310x01FL1D_CACHE_ALLOCATE300x01ECHAIN290x01DBUS_CYCLES280x01CTTBR_WRITE_RETIRED270x01BINST_SPEC260x01AMEMORY_ERROR250x019BUS_ACCESS240x018L2D_CACHE_WB230x017L2D_CACHE_REFILL220x016L2D_CACHE210x015L1D_CACHE_WB200x014L1I_CACHE190x013MEM_ACCESS180x012BR_PRED170x011CPU_CYCLES160x010BR_MIS_PRED150x00FUNALIGNED_LDST_RETIRED140x00EBR_RETURN_RETIRED130x00DBR_IMMED_RETIRED120x00CPC_WRITE_RETIRED110x00BCID_WRITE_RETIRED100x00AEXC_RETURN90x009EXC_TAKEN80x008INST_RETIRED70x007ST_RETIRED60x006LD_RETIRED50x005L1D_TLB_REFILL40x004L1D_CACHE30x003L1D_CACHE_REFILL20x002L1I_TLB_REFILL10x001L1I_CACHE_REFILL00x000SW_INCR'''
[[register]]
  name = "CEID1_EL0"
  type = "ro"
  width = 32
  description = "Performance Monitors Common Event Identification Register 1"
  default = "0x00000001"
  offset = "0x00000E24"
  [[register.field]]
    name = "CE_32"
    bits = "0"
    type = "ro"
    shortdesc = '''Common architectural and microarchitectural feature events that can be counted by the PMU event counters.'''
    longdesc = '''For the bit described in the following table, the event is implemented if the bit is set to 1, or not implemented if the bit is set to 0.BitEvent numberEvent mnemonic00x020L2D_CACHE_ALLOCATE'''
[[register]]
  name = "ITCTRL"
  type = "rw"
  width = 32
  description = "Performance Monitors Integration mode Control Register"
  default = "0x00000000"
  offset = "0x00000F00"
  [[register.field]]
    name = "IME"
    bits = "0"
    type = "rw"
    shortdesc = '''Integration mode enable.'''
    longdesc = '''When IME == 1, the device reverts to an integration mode to enable integration testing or topology detection. The integration mode behavior is IMPLEMENTATION DEFINED.'''
[[register]]
  name = "DEVAFF0"
  type = "ro"
  width = 32
  description = "Performance Monitors Device Affinity Register 0"
  default = "0x80000000"
  offset = "0x00000FA8"
  [[register.field]]
    name = "PMDEVAFF0"
    bits = "31:0"
    type = "ro"
    shortdesc = '''MPIDR_EL1 low half.'''
    longdesc = '''Read-only copy of the low half of MPIDR_EL1, as seen from the highest implemented exception level.'''
[[register]]
  name = "DEVAFF1"
  type = "ro"
  width = 32
  description = "Performance Monitors Device Affinity Register 1"
  default = "0x00000000"
  offset = "0x00000FAC"
  [[register.field]]
    name = "PMDEVAFF1"
    bits = "31:0"
    type = "ro"
    shortdesc = '''MPIDR_EL1 high half.'''
    longdesc = '''Read-only copy of the high half of MPIDR_EL1, as seen from the highest implemented exception level.'''
[[register]]
  name = "LAR"
  type = "wo"
  width = 32
  description = "Performance Monitors Lock Access Register"
  default = "0x00000000"
  offset = "0x00000FB0"
  [[register.field]]
    name = "KEY"
    bits = "31:0"
    type = "wo"
    shortdesc = '''Lock Access control.'''
    longdesc = '''Writing the key value 0xC5ACCE55 to this field unlocks the lock, enabling write accesses to this component's registers through a memory-mapped interface.Writing any other value to this register locks the lock, disabling write accesses to this component's registers through a memory mapped interface.'''
[[register]]
  name = "LSR"
  type = "ro"
  width = 32
  description = "Performance Monitors Lock Status Register"
  default = "0x00000003"
  offset = "0x00000FB4"
  [[register.field]]
    name = "NTT"
    bits = "2"
    type = "ro"
    shortdesc = '''Not thirty-two bit access required.'''
    longdesc = '''RAZ.'''
  [[register.field]]
    name = "SLK"
    bits = "1"
    type = "ro"
  [[register.field]]
    name = "SLI"
    bits = "0"
    type = "ro"
[[register]]
  name = "AUTHSTATUS"
  type = "ro"
  width = 32
  description = "Performance Monitors Authentication Status Register"
  default = "0x00000088"
  offset = "0x00000FB8"
  [[register.field]]
    name = "SNID"
    bits = "7:6"
    type = "ro"
    shortdesc = '''Holds the same value as DBGAUTHSTATUS_EL1.'''
    longdesc = '''SNID.'''
  [[register.field]]
    name = "NSNID"
    bits = "3:2"
    type = "ro"
    shortdesc = '''Holds the same value as DBGAUTHSTATUS_EL1.'''
    longdesc = '''NSNID.'''
[[register]]
  name = "DEVARCH"
  type = "ro"
  width = 32
  description = "Performance Monitors Device Architecture Register"
  default = "0x47702A16"
  offset = "0x00000FBC"
  [[register.field]]
    name = "ARCHITECT"
    bits = "31:21"
    type = "ro"
    shortdesc = '''Defines the architecture of the component.'''
    longdesc = '''For Performance Monitors, this is ARM Limited.Bits [31:28] are the JEP 106 continuation code, 0x4.Bits [27:21] are the JEP 106 ID code, 0x3B.'''
  [[register.field]]
    name = "PRESENT"
    bits = "20"
    type = "ro"
    shortdesc = '''When set to 1, indicates that the DEVARCH is present.'''
    longdesc = '''This field is 1 in v8-A.'''
  [[register.field]]
    name = "REVISION"
    bits = "19:16"
    type = "ro"
    shortdesc = '''Defines the architecture revision.'''
    longdesc = '''For architectures defined by ARM this is the minor revision.For Performance Monitors, the revision defined by v8-A is 0x0.All other values are reserved.'''
  [[register.field]]
    name = "ARCHID"
    bits = "15:0"
    type = "ro"
    shortdesc = '''Defines this part to be a v8-A debug component.'''
    longdesc = '''For architectures defined by ARM this is further subdivided.For Performance Monitors:Bits [15:12] are the architecture version, 0x2.Bits [11:0] are the architecture part number, 0xA16.This corresponds to Performance Monitors architecture version PMUv3.'''
[[register]]
  name = "DEVID"
  type = "ro"
  width = 32
  description = "Device ID Register"
  default = "0x00000000"
  offset = "0x00000FC8"
  [[register.field]]
    name = "DEVID"
    bits = "31:0"
    type = "ro"
[[register]]
  name = "DEVTYPE"
  type = "ro"
  width = 32
  description = "Performance Monitors Device Type Register"
  default = "0x00000016"
  offset = "0x00000FCC"
  [[register.field]]
    name = "SUB"
    bits = "7:4"
    type = "ro"
    shortdesc = '''Subtype.'''
    longdesc = '''Must read as 0x1 to indicate this is a processor component.'''
  [[register.field]]
    name = "MAJOR"
    bits = "3:0"
    type = "ro"
    shortdesc = '''Major type.'''
    longdesc = '''Must read as 0x6 to indicate this is a performance monitor component.'''
[[register]]
  name = "PIDR4"
  type = "ro"
  width = 32
  description = "Performance Monitors Peripheral Identification Register 4"
  default = "0x00000004"
  offset = "0x00000FD0"
  [[register.field]]
    name = "SIZE"
    bits = "7:4"
    type = "ro"
    shortdesc = '''Size of the component.'''
    longdesc = '''RAZ. Log2 of the number of 4KB pages from the start of the component to the end of the component ID registers.'''
  [[register.field]]
    name = "DES_2"
    bits = "3:0"
    type = "ro"
    shortdesc = '''Designer, JEP106 continuation code, least significant nibble.'''
    longdesc = '''For ARM Limited, this field is 0b0100.'''
[[register]]
  name = "PIDR5"
  type = "ro"
  width = 32
  description = "Performance Monitors Peripheral Identification Register 4"
  default = "0x00000000"
  offset = "0x00000FD4"
  [[register.field]]
    name = "RESERVED"
    bits = "31:0"
    type = "ro"
[[register]]
  name = "PIDR6"
  type = "ro"
  width = 32
  description = "Performance Monitors Peripheral Identification Register 4"
  default = "0x00000000"
  offset = "0x00000FD8"
  [[register.field]]
    name = "RESERVED"
    bits = "31:0"
    type = "ro"
[[register]]
  name = "PIDR7"
  type = "ro"
  width = 32
  description = "Performance Monitors Peripheral Identification Register 4"
  default = "0x00000000"
  offset = "0x00000FDC"
  [[register.field]]
    name = "RESERVED"
    bits = "31:0"
    type = "ro"
[[register]]
  name = "PIDR0"
  type = "ro"
  width = 32
  description = "Performance Monitors Peripheral Identification Register 0"
  default = "0x000000D3"
  offset = "0x00000FE0"
  [[register.field]]
    name = "PART_0"
    bits = "7:0"
    type = "ro"
[[register]]
  name = "PIDR1"
  type = "ro"
  width = 32
  description = "Performance Monitors Peripheral Identification Register 1"
  default = "0x000000B9"
  offset = "0x00000FE4"
  [[register.field]]
    name = "DES_0"
    bits = "7:4"
    type = "ro"
    shortdesc = '''Designer, least significant nibble of JEP106 ID code.'''
    longdesc = '''For ARM Limited, this field is 0b1011.'''
  [[register.field]]
    name = "PART_1"
    bits = "3:0"
    type = "ro"
[[register]]
  name = "PIDR2"
  type = "ro"
  width = 32
  description = "Performance Monitors Peripheral Identification Register 2"
  default = "0x0000004B"
  offset = "0x00000FE8"
  [[register.field]]
    name = "REVISION"
    bits = "7:4"
    type = "ro"
    shortdesc = '''Part major revision.'''
    longdesc = '''Parts can also use this field to extend Part number to 16-bits.'''
  [[register.field]]
    name = "JEDEC"
    bits = "3"
    type = "ro"
    shortdesc = '''RAO.'''
    longdesc = '''Indicates a JEP106 identity code is used.'''
  [[register.field]]
    name = "DES_1"
    bits = "2:0"
    type = "ro"
    shortdesc = '''Designer, most significant bits of JEP106 ID code.'''
    longdesc = '''For ARM Limited, this field is 0b011.'''
[[register]]
  name = "PIDR3"
  type = "ro"
  width = 32
  description = "Performance Monitors Peripheral Identification Register 3"
  default = "0x00000000"
  offset = "0x00000FEC"
  [[register.field]]
    name = "REVAND"
    bits = "7:4"
    type = "ro"
    shortdesc = '''Part minor revision.'''
    longdesc = '''Parts using PMPIDR2.REVISION as an extension to the Part number must use this field as a major revision number.'''
  [[register.field]]
    name = "CMOD"
    bits = "3:0"
    type = "ro"
    shortdesc = '''Customer modified.'''
    longdesc = '''Indicates someone other than the Designer has modified the component.'''
[[register]]
  name = "CIDR0"
  type = "ro"
  width = 32
  description = "Performance Monitors Component Identification Register 0"
  default = "0x0000000D"
  offset = "0x00000FF0"
  [[register.field]]
    name = "PRMBL_0"
    bits = "7:0"
    type = "ro"
    shortdesc = '''Preamble.'''
    longdesc = '''Must read as 0x0D.'''
[[register]]
  name = "CIDR1"
  type = "ro"
  width = 32
  description = "Performance Monitors Component Identification Register 1"
  default = "0x00000090"
  offset = "0x00000FF4"
  [[register.field]]
    name = "CLASS"
    bits = "7:4"
    type = "ro"
    shortdesc = '''Component class.'''
    longdesc = '''Reads as 0x9, debug component.'''
  [[register.field]]
    name = "PRMBL_1"
    bits = "3:0"
    type = "ro"
    shortdesc = '''Preamble.'''
    longdesc = '''RAZ.'''
[[register]]
  name = "CIDR2"
  type = "ro"
  width = 32
  description = "Performance Monitors Component Identification Register 2"
  default = "0x00000005"
  offset = "0x00000FF8"
  [[register.field]]
    name = "PRMBL_2"
    bits = "7:0"
    type = "ro"
    shortdesc = '''Preamble.'''
    longdesc = '''Must read as 0x05.'''
[[register]]
  name = "CIDR3"
  type = "ro"
  width = 32
  description = "Performance Monitors Component Identification Register 3"
  default = "0x000000B1"
  offset = "0x00000FFC"
  [[register.field]]
    name = "PRMBL_3"
    bits = "7:0"
    type = "ro"
    shortdesc = '''Preamble.'''
    longdesc = '''Must read as 0xB1.'''
