description = "NAND ONFI Control"
[[bank]]
  name = "NAND"
  address = "0xff100000"
[[register]]
  name = "PACKET_REGISTER"
  type = "mixed"
  width = 32
  description = "Packet Configuration."
  default = "0x00000200"
  offset = "0x00000000"
  [[register.field]]
    name = "RESERVED"
    bits = "31:24"
    type = "raz"
  [[register.field]]
    name = "PACKET_COUNT"
    bits = "23:12"
    type = "rw"
    shortdesc = '''Packet count: 12'h001: 1 12'h002: 2 .'''
    longdesc = '''. 12'h7FF: 2047 12'h800: 2048. Note: Change this value only when controller is not communicating with the memory device.'''
  [[register.field]]
    name = "RESERVED"
    bits = "11"
    type = "raz"
  [[register.field]]
    name = "PACKET_SIZE"
    bits = "10:0"
    type = "rw"
    shortdesc = '''Size of the packet.'''
    longdesc = '''Typical packet size is 11'h200bytes or 0x80 Dwords for BCH 4bit, 8bit, and 12bit Error correction. Typical packet size is 11'h400bytes or 0x100 Dwords for BCH 24bit Error correction. Note: Change this value only when controller is not communicating with the memory device.'''
[[register]]
  name = "MEMORY_ADDRESS_REGISTER1"
  type = "rw"
  width = 32
  description = "Memory Address, reg 1."
  default = "0x00000000"
  offset = "0x00000004"
  [[register.field]]
    name = "MEMORY_ADDRESS"
    bits = "31:0"
    type = "rw"
    shortdesc = '''Consider page size 4k, 4plane, 2Lun flash device.'''
    longdesc = '''bit[12:0] indicates column address. bit[15:13] set = 0. bit[22:16] page address. bit[24:23] interleaved address bits: 00: Interleaved address 0 selected (plane 0). 01: Interleaved address 1 selected (plane 1). 10: Interleaved address 2 selected (plane 2). 11: Interleaved address 3 selected (plane 3). bit[31:25] block address. Remaining block address bits are programmed in Memory address Register2.'''
[[register]]
  name = "MEMORY_ADDRESS_REGISTER2"
  type = "mixed"
  width = 32
  description = "Memory Address, reg 2."
  default = "0x00000000"
  offset = "0x00000008"
  [[register.field]]
    name = "CHIP_SELECT"
    bits = "31:30"
    type = "rw"
    shortdesc = '''00: Chip 0 will be selected.'''
    longdesc = '''01: Chip 1 will be selected. 10: reserved 11: reserved'''
  [[register.field]]
    name = "NFC_BCH_MODE"
    bits = "27:25"
    type = "rw"
  [[register.field]]
    name = "RESERVED"
    bits = "23:8"
    type = "raz"
  [[register.field]]
    name = "MEMORY_ADDRESS"
    bits = "7:0"
    type = "rw"
    shortdesc = '''Consider page size 4k, 4plane, 2Lun flash device bit[1:0] - Remaining block address bits.'''
    longdesc = '''bit [2] - Lun select bit: 0: Lun 0 selected. 1: Lun 1 selected. bit [7:3] - Should be zero.'''
[[register]]
  name = "COMMAND_REGISTER"
  type = "mixed"
  width = 32
  description = "Command and Configuration."
  default = "0x01000000"
  offset = "0x0000000C"
  [[register.field]]
    name = "ECC_ON_OFF"
    bits = "31"
    type = "rw"
    shortdesc = '''1: ECC On.'''
    longdesc = '''0: ECC Off. Note: Change this value only when controller is not communicating with the memory device.'''
  [[register.field]]
    name = "NUMBER_OF_ADDRESS_CYCELS"
    bits = "30:28"
    type = "rw"
    shortdesc = '''000: reserved 001: One Address cycle.'''
    longdesc = '''010: Two Address cycles. 110: Three Address cycles. .. 111:Seven Address cycles. Note: Change this value only when controller is not communicating with the memory device.'''
  [[register.field]]
    name = "DMA_ENABLE"
    bits = "27:26"
    type = "rw"
    shortdesc = '''00: PIO Mode.'''
    longdesc = '''10: MDMA Mode. Others: reserved Note: Change this value only when controller is not communicating with the memory device.'''
  [[register.field]]
    name = "PAGE_SIZE"
    bits = "25:23"
    type = "rw"
    shortdesc = '''000: 512-byte Page size.'''
    longdesc = '''001: 2KB Page size. 010: 4KB Page size. 011: 8KB Page size. 100: 16KB Page size. Others: reserved Note: Change this value only when controller is not communicating with the memory device.'''
  [[register.field]]
    name = "RESERVED"
    bits = "22:16"
    type = "raz"
  [[register.field]]
    name = "COMMAND2"
    bits = "15:8"
    type = "rw"
  [[register.field]]
    name = "COMMAND1"
    bits = "7:0"
    type = "rw"
    shortdesc = '''Opcode value for 1st cycle command.'''
    longdesc = '''Note: Change this value only when controller is not communicating with the memory device.'''
[[register]]
  name = "PROGRAM_REGISTER"
  type = "mixed"
  width = 32
  description = "Initiate Controller Operations."
  default = "0x00000000"
  offset = "0x00000010"
  [[register.field]]
    name = "RESERVED"
    bits = "31:27"
    type = "raz"
  [[register.field]]
    name = "ODT_CONFIGURE"
    bits = "26"
    type = "rw"
  [[register.field]]
    name = "VOLUME_SELECT"
    bits = "25"
    type = "rw"
  [[register.field]]
    name = "PGM_PG_REG_CLR"
    bits = "24"
    type = "rw"
  [[register.field]]
    name = "RESET_LUN"
    bits = "23"
    type = "rw"
  [[register.field]]
    name = "CHANGE_ROW_ADDR_END"
    bits = "22"
    type = "rw"
  [[register.field]]
    name = "CHANGE_ROW_ADDR"
    bits = "21"
    type = "rw"
  [[register.field]]
    name = "SMALL_DATA_MOVE"
    bits = "20"
    type = "rw"
  [[register.field]]
    name = "READ_CACHE_END"
    bits = "19"
    type = "rw"
  [[register.field]]
    name = "READ_CACHE_RANDOM"
    bits = "18"
    type = "rw"
  [[register.field]]
    name = "READ_CACHE_SEQUENTIAL"
    bits = "17"
    type = "rw"
  [[register.field]]
    name = "READ_CACHE_START"
    bits = "16"
    type = "rw"
  [[register.field]]
    name = "COPY_BACK_INTERLEAVED"
    bits = "15"
    type = "rw"
  [[register.field]]
    name = "CHANGE_READ_COLUMN_ENHANCED"
    bits = "14"
    type = "rw"
  [[register.field]]
    name = "READ_INTERLEAVED"
    bits = "13"
    type = "rw"
  [[register.field]]
    name = "READ_STATUS_ENHANCED"
    bits = "12"
    type = "rw"
  [[register.field]]
    name = "READ_UNIQUE_ID"
    bits = "11"
    type = "rw"
  [[register.field]]
    name = "SET_FEATURES"
    bits = "10"
    type = "rw"
  [[register.field]]
    name = "GET_FEATURES"
    bits = "9"
    type = "rw"
  [[register.field]]
    name = "RESET"
    bits = "8"
    type = "rw"
  [[register.field]]
    name = "READ_PARAMETER_PAGE"
    bits = "7"
    type = "rw"
  [[register.field]]
    name = "READ_ID"
    bits = "6"
    type = "rw"
  [[register.field]]
    name = "MULTI_DIE_RD"
    bits = "5"
    type = "rw"
  [[register.field]]
    name = "PAGE_PROGRAM"
    bits = "4"
    type = "rw"
  [[register.field]]
    name = "READ_STATUS"
    bits = "3"
    type = "rw"
  [[register.field]]
    name = "BLOCK_ERASE"
    bits = "2"
    type = "rw"
  [[register.field]]
    name = "MULTI_DIE"
    bits = "1"
    type = "rw"
  [[register.field]]
    name = "READ"
    bits = "0"
    type = "rw"
[[register]]
  name = "INTERRUPT_STATUS_ENABLE_REGISTER"
  type = "mixed"
  width = 32
  description = "Interrupt Status Enable."
  default = "0x00000000"
  offset = "0x00000014"
  [[register.field]]
    name = "RESERVED"
    bits = "31:8"
    type = "raz"
  [[register.field]]
    name = "ERROR_AHB_STS_EN"
    bits = "7"
    type = "rw"
    shortdesc = '''AHB Error Interrupt.'''
    longdesc = '''This is applicable only during MDMA mode of transfer.'''
  [[register.field]]
    name = "DMA_INT_STS_EN"
    bits = "6"
    type = "rw"
    shortdesc = '''DMA Interrupt.'''
    longdesc = '''This is applicable only during MDMA mode of transfer.'''
  [[register.field]]
    name = "ECC_ERR_INTRPT_STS_EN"
    bits = "5"
    type = "rw"
  [[register.field]]
    name = "ERR_INTRPT_STS_EN"
    bits = "4"
    type = "rw"
  [[register.field]]
    name = "MUL_BIT_ERR_STS_EN"
    bits = "3"
    type = "rw"
    shortdesc = '''Multi-bit error Interrupt.'''
    longdesc = '''This field is used during Hamming (SLC) Error correction else treated as 0.'''
  [[register.field]]
    name = "TRANS_COMP_STS_EN"
    bits = "2"
    type = "rw"
  [[register.field]]
    name = "BUFF_RD_RDY_STS_EN"
    bits = "1"
    type = "rw"
  [[register.field]]
    name = "BUFF_WR_RDY_STS_EN"
    bits = "0"
    type = "rw"
[[register]]
  name = "INTERRUPT_SIGNAL_ENABLE_REGISTER"
  type = "mixed"
  width = 32
  description = "Interrupt Signal Enable."
  default = "0x00000000"
  offset = "0x00000018"
  [[register.field]]
    name = "RESERVED"
    bits = "31:8"
    type = "raz"
  [[register.field]]
    name = "ERROR_AHB_SIG_EN"
    bits = "7"
    type = "rw"
    shortdesc = '''AHB Error Interrupt.'''
    longdesc = '''This is applicable only during MDMA mode of transfer.'''
  [[register.field]]
    name = "DMA_INT_SIG_EN"
    bits = "6"
    type = "rw"
    shortdesc = '''DMA Interrupt.'''
    longdesc = '''This is applicable only during MDMA mode of transfer.'''
  [[register.field]]
    name = "ECC_ERR_INTRPT_SIG_EN"
    bits = "5"
    type = "rw"
  [[register.field]]
    name = "ERR_INTRPT_SIG_EN"
    bits = "4"
    type = "rw"
  [[register.field]]
    name = "MUL_BIT_ERR_SIG_EN"
    bits = "3"
    type = "rw"
    shortdesc = '''Multi-bit error Interrupt.'''
    longdesc = '''This field is used during Hamming (SLC) Error correction else treated as 0.'''
  [[register.field]]
    name = "TRANS_COMP_SIG_EN"
    bits = "2"
    type = "rw"
  [[register.field]]
    name = "BUFF_RD_RDY_SIG_EN"
    bits = "1"
    type = "rw"
  [[register.field]]
    name = "BUFF_WR_RDY_SIG_EN"
    bits = "0"
    type = "rw"
[[register]]
  name = "INTERRUPT_STATUS_REGISTER"
  type = "mixed"
  width = 32
  description = "Interrupt Status."
  default = "0x00000000"
  offset = "0x0000001C"
  [[register.field]]
    name = "RESERVED"
    bits = "31:8"
    type = "raz"
  [[register.field]]
    name = "ERROR_AHB_REG"
    bits = "7"
    type = "rw"
    shortdesc = '''This bit is set if the AXI Slave sends error response in AXI Bus.'''
    longdesc = '''This bit field is used only during MDMA mode of transfer.'''
  [[register.field]]
    name = "DMA_INT_REG"
    bits = "6"
    type = "rw"
    shortdesc = '''This bit is set if the NFC detects the DMA Buffer Boundary is reached in DMA mode of transaction.'''
    longdesc = '''This bit field is used only during MDMA mode of transfer.'''
  [[register.field]]
    name = "ECC_ERR_INTRPT_REG"
    bits = "5"
    type = "rw"
  [[register.field]]
    name = "ERR_INTRPT_REG"
    bits = "4"
    type = "rw"
    shortdesc = '''MLC: This bit is set whenever bch detect error is asserted (for both correctable and non-correctable errors.'''
    longdesc = '''BCH can't detect uncorrectable errors.) SLC: This bit is set by hardware when single bit error is detected.'''
  [[register.field]]
    name = "MUL_BIT_ERR_REG"
    bits = "3"
    type = "rw"
    shortdesc = '''This bit is set whenever multi bit error is asserted.'''
    longdesc = '''This field is used during Hamming (SLC) Error correction else treated as 0.'''
  [[register.field]]
    name = "TRANS_COMP_REG"
    bits = "2"
    type = "rw"
  [[register.field]]
    name = "BUFF_RD_RDY_REG"
    bits = "1"
    type = "rw"
  [[register.field]]
    name = "BUFF_WR_RDY_REG"
    bits = "0"
    type = "rw"
[[register]]
  name = "READY_BUSY"
  type = "mixed"
  width = 32
  description = "Ready Busy Status."
  default = "0x00000003"
  offset = "0x00000020"
  [[register.field]]
    name = "RESERVED"
    bits = "31:2"
    type = "raz"
  [[register.field]]
    name = "RB_N1_STATUS"
    bits = "1"
    type = "ro"
  [[register.field]]
    name = "RB_N0_STATUS"
    bits = "0"
    type = "ro"
[[register]]
  name = "DMA_SYSTEM_ADDRESS1_REGISTER"
  type = "rw"
  width = 32
  description = "DMA System Address, reg 1."
  default = "0x00000000"
  offset = "0x00000024"
  [[register.field]]
    name = "DMA_SYSTEM_ADDRESS1_REGISTER"
    bits = "31:0"
    type = "rw"
    shortdesc = '''MSB of System memory address for a DMA transfer using 64-bit addressing.'''
    longdesc = '''Applicable to MDMA mode of transaction.'''
[[register]]
  name = "FLASH_STATUS_REGISTER"
  type = "mixed"
  width = 32
  description = "Flash Memory Status."
  default = "0x00000000"
  offset = "0x00000028"
  [[register.field]]
    name = "RESERVED"
    bits = "31:16"
    type = "raz"
  [[register.field]]
    name = "FLASH_STATUS"
    bits = "15:0"
    type = "ro"
[[register]]
  name = "TIMING_REGISTER"
  type = "mixed"
  width = 32
  description = "Interface Timing Control."
  default = "0x00000000"
  offset = "0x0000002C"
  [[register.field]]
    name = "RESERVED"
    bits = "31:19"
    type = "raz"
  [[register.field]]
    name = "DQS_BUFF_SEL_OUT"
    bits = "18:15"
    type = "rw"
    shortdesc = '''For write transaction program this value based on tDS value.'''
    longdesc = '''Write data transaction values NVDDR Mode 0 - 4'h6 NVDDR Mode 1 - 4'h5 NVDDR Mode 2 - 4'h4 NVDDR Mode 3 - 4'h3 NVDDR Mode 4 - 4'h2 NVDDR Mode 5 - 4'h2 Note: Change this value only when controller is not communicating with the memory device.'''
  [[register.field]]
    name = "TADL_TIME"
    bits = "14:7"
    type = "rw"
    shortdesc = '''Address Latch Enable to Data Loading time.'''
    longdesc = '''During write if pgm_pg_reg_clr bit is set then this value must be programmed. Note: Change this value only when controller is not communicating with the memory device.'''
  [[register.field]]
    name = "DQS_BUFF_SEL_IN"
    bits = "6:3"
    type = "rw"
    shortdesc = '''For read transaction program this value based on tDQSQ value.'''
    longdesc = '''Read data transaction values NVDDR Mode 0 - 4'h6 NVDDR Mode 1 - 4'h5 NVDDR Mode 2 - 4'h4 NVDDR Mode 3 - 4'h3 NVDDR Mode 4 - 4'h2 NVDDR Mode 5 - 4'h2 Note: Change this value only when controller is not communicating with the memory device.'''
  [[register.field]]
    name = "SLOW_FAST_TCAD"
    bits = "2"
    type = "rw"
    shortdesc = '''0: slow device (tCADs).'''
    longdesc = '''1: fast device (tCADf). Note: Change this value only when controller is not communicating with the memory device.'''
  [[register.field]]
    name = "TCCS_TIME"
    bits = "1:0"
    type = "rw"
    shortdesc = '''Change column setup time.'''
    longdesc = '''00: 500ns 01: 100ns 10: 200ns 11: 300ns Note: Change this value only when controller is not communicating with the memory device.'''
[[register]]
  name = "BUFFER_DATA_PORT_REGISTER"
  type = "rw"
  width = 32
  description = "Buffer Data Port."
  default = "0x00000000"
  offset = "0x00000030"
  [[register.field]]
    name = "DATA_PORT_REGISTER"
    bits = "31:0"
    type = "rw"
    shortdesc = '''Data access port to the internal buffer.'''
    longdesc = '''Nand flash controller buffer can be accessed through this register.'''
[[register]]
  name = "ECC_REGISTER"
  type = "mixed"
  width = 32
  description = "ECC Configuration."
  default = "0x00000000"
  offset = "0x00000034"
  [[register.field]]
    name = "RESERVED"
    bits = "31:28"
    type = "raz"
  [[register.field]]
    name = "SLC_MLC"
    bits = "27"
    type = "rw"
    shortdesc = '''Select the error correction method: 0: Hamming error correction.'''
    longdesc = '''1: BCH error correction. Note: Change this value only when controller is not communicating with the memory device.'''
  [[register.field]]
    name = "ECC_SIZE"
    bits = "26:16"
    type = "rw"
    shortdesc = '''Register used to program the ECC size for write and read data transaction.'''
    longdesc = '''For SLC use ECC size as: Page size 512B - 11'h 003 Page size 2KB - 11'h 00C Page size 4KB - 11'h 018 Page size 8KB - 11'h 030 Page size 16KB - 11'h 060 For MLC 4-bit error correction use ECC size as: Page size 512B - 11'h 007 Page size 2KB - 11'h 01A Page size 4KB - 11'h 034 Page size 8KB - 11'h 068 Page size 16KB - 11'h 0D0 For MLC 8-bit error correction use ECC size as: Page size 512B - 11'h 00D Page size 2KB - 11'h 034 Page size 4KB - 11'h 068 Page size 8KB - 11'h 0D0 Page size 16KB - 11'h 1A0 For MLC 12-bit error correction use ECC size as: Page size 2KB - 11'h 04E Page size 4KB - 11'h 09C Page size 8KB - 11'h 138 Page size 16KB - 11'h 270 For MLC 24-bit error correction use ECC size as: Page size 2KB - 11'h 054 Page size 4KB - 11'h 0A8 Page size 8KB - 11'h 150 Page size 16KB - 11'h 2A0 Note: Change this value only when controller is not communicating with the memory device.'''
  [[register.field]]
    name = "ECC_ADDR"
    bits = "15:0"
    type = "rw"
    shortdesc = '''Register required to issue ECC Address for change read column / change write column.'''
    longdesc = '''For SLC use ECC Address as: Page size 512 - 16'h 020D Page size 2k - 16'h 834 Page size 4k - 16'h 1068 Page size 8k - 16'h 20D0 Page size 16k - 16'h 4460 For MLC 4-bit error correction use ECC Addr as: Page size 512 - 16'h 0209 Page size 2k - 16'h 0826 Page size 4k - 16'h 104C Page size 8k - 16'h 2098 Page size 16k - 16'h 43f0 For MLC 8-bit error correction use ECC Addr as: Page size 512 - 16'h 0203 Page size 2k - 16'h 080C Page size 4k - 16'h 1018 Page size 8k - 16'h 2030 Page size 16k - 16'h 4320 For MLC 12-bit error correction use ECC Addr as: Page size 2k - 16'h 0822 Page size 4k - 16'h 1044 Page size 8k - 16'h 2088 Page size 16k - 16'h 4250 For MLC 24-bit error correction use ECC Addr as: Page size 2k - 16'h 081C Page size 4k - 16'h 1038 Page size 8k - 16'h 2070 Page size 16k - 16'h 4220 Note: Change this value only when controller is not communicating with the memory device.'''
[[register]]
  name = "ECC_ERROR_COUNT_REGISTER"
  type = "mixed"
  width = 32
  description = "ECC Error Count"
  default = "0x00000000"
  offset = "0x00000038"
  [[register.field]]
    name = "RESERVED"
    bits = "31:17"
    type = "raz"
  [[register.field]]
    name = "PAGE_BOUND_ERR_COUNT"
    bits = "16:8"
    type = "ro"
    shortdesc = '''Total error count for the entire page.'''
    longdesc = '''This register should be read after every page is read.'''
  [[register.field]]
    name = "PACKET_BOUND_ERR_COUNT"
    bits = "7:0"
    type = "ro"
    shortdesc = '''Error count during read for every packet count.'''
    longdesc = '''SW should read this register after every packet size amount of data is read.'''
[[register]]
  name = "ECC_SPARE_COMMAND_REGISTER"
  type = "mixed"
  width = 32
  description = "ECC Spare Command"
  default = "0x00000000"
  offset = "0x0000003C"
  [[register.field]]
    name = "RESERVED"
    bits = "31"
    type = "raz"
  [[register.field]]
    name = "NUMBER_OF_ECC_AND_SPARE_ADDRESS_CYCLES"
    bits = "30:28"
    type = "rw"
    shortdesc = '''000: Not Used 001: One Address Cycle 010: Two Address Cycle .'''
    longdesc = '''. 111: Seven Address Cycle Note: Change this value only when controller is not communicating with the memory device.'''
  [[register.field]]
    name = "RESERVED"
    bits = "27:16"
    type = "raz"
  [[register.field]]
    name = "ECC_SPARE_CMD"
    bits = "15:0"
    type = "rw"
    shortdesc = '''Register used to program the Spare /ECC opcode for change write column / change read column.'''
    longdesc = '''Note: Change this value only when controller is not communicating with the memory device.'''
[[register]]
  name = "ERROR_COUNT_1BIT_REGISTER"
  type = "rw"
  width = 32
  description = "Count of 1-bit Errors"
  default = "0x00000000"
  offset = "0x00000040"
  [[register.field]]
    name = "ERROR_COUNT_1BIT"
    bits = "31:0"
    type = "rw"
[[register]]
  name = "ERROR_COUNT_2BIT_REGISTER"
  type = "rw"
  width = 32
  description = "Count of 2-bit Errors"
  default = "0x00000000"
  offset = "0x00000044"
  [[register.field]]
    name = "ERROR_COUNT_2BIT"
    bits = "31:0"
    type = "rw"
[[register]]
  name = "ERROR_COUNT_3BIT_REGISTER"
  type = "rw"
  width = 32
  description = "Count of 3-bit Errors"
  default = "0x00000000"
  offset = "0x00000048"
  [[register.field]]
    name = "ERROR_COUNT_3BIT"
    bits = "31:0"
    type = "rw"
[[register]]
  name = "ERROR_COUNT_4BIT_REGISTER"
  type = "rw"
  width = 32
  description = "Count of 4-bit Errors"
  default = "0x00000000"
  offset = "0x0000004C"
  [[register.field]]
    name = "ERROR_COUNT_4BIT"
    bits = "31:0"
    type = "rw"
[[register]]
  name = "DMA_SYSTEM_ADDRESS0_REGISTER"
  type = "rw"
  width = 32
  description = "DMA System Address, reg2."
  default = "0x00000000"
  offset = "0x00000050"
  [[register.field]]
    name = "DMA_SYSTEM_ADDRESS0_REGISTER"
    bits = "31:0"
    type = "rw"
    shortdesc = '''System memory address for a DMA transfer.'''
    longdesc = '''Applicable to MDMA mode of transaction. Contains the LSB address when using 64-bit addressing with the DMA_system_address1_register. The driver initializes this register before starting a DMA transaction. The DMA transfer waits at every boundary specified by the DMA_buffer_boundary_register. The controller generates the DMA interrupt to request an update to the address register(s). The driver sets the next system address of the next data position.'''
[[register]]
  name = "DMA_BUFFER_BOUNDARY_REGISTER"
  type = "mixed"
  width = 32
  description = "DMA Buffer Boundary."
  default = "0x00000000"
  offset = "0x00000054"
  [[register.field]]
    name = "RESERVED"
    bits = "31:4"
    type = "raz"
  [[register.field]]
    name = "DMA_BOUND_INT_EN"
    bits = "3"
    type = "rw"
    shortdesc = '''DMA Buffer Boundary Interrupt enable: 0: disable, masked.'''
    longdesc = '''1: enable. Note: Change this value only when controller is not communicating with the memory device.'''
  [[register.field]]
    name = "DMA_BUFFER_BOUNDARY_REGISTER"
    bits = "2:0"
    type = "rw"
    shortdesc = '''To perform long DMA transfer, the System Address register is updated at every system boundary during the DMA transfer.'''
    longdesc = '''Program the size of the contiguous buffer in the system memory. The DMA transfer waits at every boundary specified by this bit field and generates the DMA Interrupt to request the driver to update the System Address register for the next buffer transfer. Buffer size: 000: 4 KB 001: 8 KB 010: 16 KB 011: 32 KB 100: 64 KB 101: 128 KB 110: 256 KB 111: 512 KB Note: Change this value only when controller is not communicating with the memory device.'''
[[register]]
  name = "CPU_RELEASE_REGISTER"
  type = "mixed"
  width = 32
  description = "CPU Release after Transferring Primary Boot Code."
  default = "0x00000000"
  offset = "0x00000058"
  [[register.field]]
    name = "RESERVED"
    bits = "31:1"
    type = "raz"
  [[register.field]]
    name = "RELEASE_RESET_TO_CPU"
    bits = "0"
    type = "rw"
    shortdesc = '''Hardware sets this bit to a 1 after transferring the Primary Boot Code.'''
    longdesc = '''0: boot code not transferred. 1: boot code was transferred.'''
[[register]]
  name = "ERROR_COUNT_5BIT_REGISTER"
  type = "rw"
  width = 32
  description = "Count of 5-bit Errors"
  default = "0x00000000"
  offset = "0x0000005C"
  [[register.field]]
    name = "ERROR_COUNT_5BIT"
    bits = "31:0"
    type = "rw"
[[register]]
  name = "ERROR_COUNT_6BIT_REGISTER"
  type = "rw"
  width = 32
  description = "Count of 6-bit Errors"
  default = "0x00000000"
  offset = "0x00000060"
  [[register.field]]
    name = "ERROR_COUNT_6BIT"
    bits = "31:0"
    type = "rw"
[[register]]
  name = "ERROR_COUNT_7BIT_REGISTER"
  type = "rw"
  width = 32
  description = "Count of 7-bit Errors"
  default = "0x00000000"
  offset = "0x00000064"
  [[register.field]]
    name = "ERROR_COUNT_7BIT"
    bits = "31:0"
    type = "rw"
[[register]]
  name = "ERROR_COUNT_8BIT_REGISTER"
  type = "rw"
  width = 32
  description = "Count of 8-bit Errors"
  default = "0x00000000"
  offset = "0x00000068"
  [[register.field]]
    name = "ERROR_COUNT_8BIT"
    bits = "31:0"
    type = "rw"
[[register]]
  name = "DATA_INTERFACE_REGISTER"
  type = "mixed"
  width = 32
  description = "Data Interface Configuration"
  default = "0x00000000"
  offset = "0x0000006C"
  [[register.field]]
    name = "RESERVED"
    bits = "31:11"
    type = "raz"
  [[register.field]]
    name = "DATA_INTF"
    bits = "10:9"
    type = "rw"
  [[register.field]]
    name = "NVDDR"
    bits = "5:3"
    type = "rw"
  [[register.field]]
    name = "SDR"
    bits = "2:0"
    type = "rw"
