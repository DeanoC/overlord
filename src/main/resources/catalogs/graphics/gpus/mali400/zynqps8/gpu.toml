description = "Mali 400 GPU with two pixel processors, Graphics Processing Unit"
[[register]]
  name = "GP_CONTR_REG_VSCL_START_ADDR"
  type = "rw"
  width = 32
  description = "GP ControlRegister VSCL Start Address"
  default = "0x00000000"
  offset = "0x00000000"
  [[register.field]]
    name = "GP_CONTR_REG_VSCL_START_ADDR"
    bits = "31:3"
    type = "rw"
  [[register.field]]
    name = "RESERVED"
    bits = "2:0"
    type = "rw"
[[register]]
  name = "GP_CONTR_REG_VSCL_END_ADDR"
  type = "rw"
  width = 32
  description = "GP Control Register VSCL End Address"
  default = "0x00000000"
  offset = "0x00000004"
  [[register.field]]
    name = "GP_CONTR_REG_VSCL_END_ADDR"
    bits = "31:3"
    type = "rw"
  [[register.field]]
    name = "RESERVED"
    bits = "2:0"
    type = "rw"
[[register]]
  name = "GP_CONTR_REG_PLBCL_START_ADDR"
  type = "rw"
  width = 32
  description = "GP Control Register PLBCL Start Address"
  default = "0x00000000"
  offset = "0x00000008"
  [[register.field]]
    name = "GP_CONTR_REG_PLBCL_START_ADDR"
    bits = "31:3"
    type = "rw"
  [[register.field]]
    name = "RESERVED"
    bits = "2:0"
    type = "rw"
[[register]]
  name = "GP_CONTR_REG_PLBCL_END_ADDR"
  type = "rw"
  width = 32
  description = "GP Control Register PLBCL End Address"
  default = "0x00000000"
  offset = "0x0000000C"
  [[register.field]]
    name = "GP_CONTR_REG_PLBCL_END_ADDR"
    bits = "31:3"
    type = "rw"
  [[register.field]]
    name = "RESERVED"
    bits = "2:0"
    type = "rw"
[[register]]
  name = "GP_CONTR_REG_PLB_ALLOC_START_ADDR"
  type = "rw"
  width = 32
  description = "GP Control Register PLB Allocate Start Address"
  default = "0x00000000"
  offset = "0x00000010"
  [[register.field]]
    name = "GP_CONTR_REG_PLB_ALLOC_START_ADDR"
    bits = "31:7"
    type = "rw"
  [[register.field]]
    name = "RESERVED"
    bits = "6:0"
    type = "rw"
[[register]]
  name = "GP_CONTR_REG_PLB_ALLOC_END_ADDR"
  type = "rw"
  width = 32
  description = "GP Control Register PLB Allocate End Address"
  default = "0x00000000"
  offset = "0x00000014"
  [[register.field]]
    name = "GP_CONTR_REG_PLB_ALLOC_END_ADDR"
    bits = "31:7"
    type = "rw"
  [[register.field]]
    name = "RESERVED"
    bits = "6:0"
    type = "rw"
[[register]]
  name = "GP_CONTR_REG_CMD"
  type = "wo"
  width = 32
  description = "GP Control Register Command"
  default = "0x00000000"
  offset = "0x00000020"
  [[register.field]]
    name = "RESERVED"
    bits = "31:12"
    type = "wo"
  [[register.field]]
    name = "GP_CMD_CLK_OVERRIDE"
    bits = "11"
    type = "wo"
    shortdesc = '''Disable block level clock gates.'''
    longdesc = '''Writing a 1 to this bit overrides all the architectural clock gates in the design so all clocks are always active'''
  [[register.field]]
    name = "GP_CMD_SOFT_RESET"
    bits = "10"
    type = "wo"
    shortdesc = '''Waits until all outstanding bus-transfers are completed, then resets the internal state of GP.'''
    longdesc = '''Use the GP_IRQ_RESET_COMPLETED interrupt bit to discover when the reset has actually completed'''
  [[register.field]]
    name = "GP_CMD_STOP_BUS"
    bits = "9"
    type = "wo"
  [[register.field]]
    name = "GP_CMD_START_BUS"
    bits = "8"
    type = "wo"
  [[register.field]]
    name = "RESERVED"
    bits = "7"
    type = "wo"
  [[register.field]]
    name = "GP_CMD_FORCE_HANG"
    bits = "6"
    type = "wo"
    shortdesc = '''Force hang.'''
    longdesc = '''This functionality depends on the watchdog timer'''
  [[register.field]]
    name = "GP_CMD_FORCE_RESET"
    bits = "5"
    type = "wo"
    shortdesc = '''Resets the internal state of GP immediately.'''
    longdesc = '''If GP_CMD_FORCE_RESET is asserted while there is a bus transaction in progress the AXI interconnect might operate at reduced efficiency or lockup. To ensure a safe reset: 1. Write 1 to GP_CMD_STOP_BUS. 2. Wait until all transactions have completed. The GP_IRQ_AXI_BUS_STOPPED interrupt is asserted when the bus is idle. 3. Write 1 to GP_CMD_FORCE_RESET. The use of GP_CMD_FORCE_RESET must be deprecated, unless you require backwards compatibility with Mali-200.'''
  [[register.field]]
    name = "GP_CMD_UPDATE_PLB_ALLOC"
    bits = "4"
    type = "wo"
  [[register.field]]
    name = "RESERVED"
    bits = "3:2"
    type = "wo"
  [[register.field]]
    name = "GP_CMD_START_PLB"
    bits = "1"
    type = "wo"
  [[register.field]]
    name = "GP_CMD_START_VS"
    bits = "0"
    type = "wo"
[[register]]
  name = "GP_CONTR_REG_INT_RAWSTAT"
  type = "rw"
  width = 32
  description = "GP Control Register Interrupt Rawstat"
  default = "0x00080000"
  offset = "0x00000024"
  [[register.field]]
    name = "RESERVED"
    bits = "31:23"
    type = "rw"
  [[register.field]]
    name = "GP_IRQ_PTR_OUT_OF_BOUNDS"
    bits = "22"
    type = "rw"
    shortdesc = '''The PLB tries to access a pointer with an index larger than the number of tiles specified.'''
    longdesc = '''This indicates an error in the setup of the data structures. Any additional processing is terminated.'''
  [[register.field]]
    name = "GP_IRQ_SEMAPHORE_OVERFLOW"
    bits = "21"
    type = "rw"
    shortdesc = '''Semaphore overflow interrupt.'''
    longdesc = '''It triggers if the previous semaphore was in use and not 0 when the PLB switched semaphore'''
  [[register.field]]
    name = "GP_IRQ_SEMAPHORE_UNDERFLOW"
    bits = "20"
    type = "rw"
    shortdesc = '''Semaphore underflow interrupt.'''
    longdesc = '''It triggers if the PLB waits for a semaphore that cannot come. For example the VS has already switched semaphore.'''
  [[register.field]]
    name = "GP_IRQ_RESET_COMPLETED"
    bits = "19"
    type = "rw"
    shortdesc = '''Reset completed interrupt.'''
    longdesc = '''It triggers whenever the geometry processor has been successfully reset. When outstanding transactions are completed, the AXI bus is stopped before a soft reset can take place.'''
  [[register.field]]
    name = "RESERVED"
    bits = "18:15"
    type = "rw"
  [[register.field]]
    name = "GP_IRQ_PLB_INVALID_CMD"
    bits = "14"
    type = "rw"
    shortdesc = '''Invalid command interrupt from the PLB.'''
    longdesc = '''It triggers whenever the PLB encounters a command it does not understand. Any additional processing is terminated.'''
  [[register.field]]
    name = "GP_IRQ_VS_INVALID_CMD"
    bits = "13"
    type = "rw"
    shortdesc = '''Invalid command interrupt from the Vertex shader.'''
    longdesc = '''It triggers whenever the vertex shader encounters a command it does not understand. Any additional processing is terminated.'''
  [[register.field]]
    name = "GP_IRQ_AXI_BUS_STOPPED"
    bits = "12"
    type = "rw"
    shortdesc = '''AXI bus stopped.'''
    longdesc = '''It triggers if the bus is stopped using the GP_CMD_STOP_BUS in the GP Control Register Command. Any additional processing is terminated.'''
  [[register.field]]
    name = "GP_IRQ_AXI_BUS_ERROR"
    bits = "11"
    type = "rw"
  [[register.field]]
    name = "RESERVED"
    bits = "10"
    type = "rw"
  [[register.field]]
    name = "GP_IRQ_WRITE_BOUND_ERR"
    bits = "9"
    type = "rw"
  [[register.field]]
    name = "GP_IRQ_PERF_CNT_1_LIMIT"
    bits = "8"
    type = "rw"
  [[register.field]]
    name = "GP_IRQ_PERF_CNT_0_LIMIT"
    bits = "7"
    type = "rw"
  [[register.field]]
    name = "GP_IRQ_FORCED_HANG"
    bits = "6"
    type = "rw"
  [[register.field]]
    name = "GP_IRQ_HANG"
    bits = "5"
    type = "rw"
    shortdesc = '''Watchdog timer limit reached.'''
    longdesc = '''This state can also be triggered under normal rendering if you are running a shader where it is near to a never-ending inner loop. From the software perspective, you can ignore this state, because this is merely a hint from the HW that something might be wrong. The SW then decides to either reset the processor, or continue to let it run.'''
  [[register.field]]
    name = "GP_IRQ_PLB_SEM"
    bits = "4"
    type = "rw"
  [[register.field]]
    name = "GP_IRQ_VS_SEM"
    bits = "3"
    type = "rw"
  [[register.field]]
    name = "GP_IRQ_PLB_OUT_OF_MEM"
    bits = "2"
    type = "rw"
  [[register.field]]
    name = "GP_IRQ_PLB_END_CMD_LIST"
    bits = "1"
    type = "rw"
  [[register.field]]
    name = "GP_IRQ_VS_END_CMD_LIST"
    bits = "0"
    type = "rw"
[[register]]
  name = "GP_CONTR_REG_INT_CLEAR"
  type = "wo"
  width = 32
  description = "GP Control Register Interrupt Clear"
  default = "0x00707BFF"
  offset = "0x00000028"
  [[register.field]]
    name = "RESERVED"
    bits = "31:23"
    type = "wo"
  [[register.field]]
    name = "GP_IRQ_PTR_OUT_OF_BOUNDS"
    bits = "22"
    type = "wo"
    shortdesc = '''The PLB tries to access a pointer with an index larger than the number of tiles specified.'''
    longdesc = '''This indicates an error in the setup of the data structures. Any additional processing is terminated.'''
  [[register.field]]
    name = "GP_IRQ_SEMAPHORE_OVERFLOW"
    bits = "21"
    type = "wo"
    shortdesc = '''Semaphore overflow interrupt.'''
    longdesc = '''It triggers if the previous semaphore was in use and not 0 when the PLB switched semaphore'''
  [[register.field]]
    name = "GP_IRQ_SEMAPHORE_UNDERFLOW"
    bits = "20"
    type = "wo"
    shortdesc = '''Semaphore underflow interrupt.'''
    longdesc = '''It triggers if the PLB waits for a semaphore that cannot come. For example the VS has already switched semaphore.'''
  [[register.field]]
    name = "GP_IRQ_RESET_COMPLETED"
    bits = "19"
    type = "wo"
    shortdesc = '''Reset completed interrupt.'''
    longdesc = '''It triggers whenever the geometry processor has been successfully reset. When outstanding transactions are completed, the AXI bus is stopped before a soft reset can take place.'''
  [[register.field]]
    name = "RESERVED"
    bits = "18:15"
    type = "wo"
  [[register.field]]
    name = "GP_IRQ_PLB_INVALID_CMD"
    bits = "14"
    type = "wo"
    shortdesc = '''Invalid command interrupt from the PLB.'''
    longdesc = '''It triggers whenever the PLB encounters a command it does not understand. Any additional processing is terminated.'''
  [[register.field]]
    name = "GP_IRQ_VS_INVALID_CMD"
    bits = "13"
    type = "wo"
    shortdesc = '''Invalid command interrupt from the Vertex shader.'''
    longdesc = '''It triggers whenever the vertex shader encounters a command it does not understand. Any additional processing is terminated.'''
  [[register.field]]
    name = "GP_IRQ_AXI_BUS_STOPPED"
    bits = "12"
    type = "wo"
    shortdesc = '''AXI bus stopped.'''
    longdesc = '''It triggers if the bus is stopped using the GP_CMD_STOP_BUS in the GP Control Register Command. Any additional processing is terminated.'''
  [[register.field]]
    name = "GP_IRQ_AXI_BUS_ERROR"
    bits = "11"
    type = "wo"
  [[register.field]]
    name = "RESERVED"
    bits = "10"
    type = "wo"
  [[register.field]]
    name = "GP_IRQ_WRITE_BOUND_ERR"
    bits = "9"
    type = "wo"
  [[register.field]]
    name = "GP_IRQ_PERF_CNT_1_LIMIT"
    bits = "8"
    type = "wo"
  [[register.field]]
    name = "GP_IRQ_PERF_CNT_0_LIMIT"
    bits = "7"
    type = "wo"
  [[register.field]]
    name = "GP_IRQ_FORCED_HANG"
    bits = "6"
    type = "wo"
  [[register.field]]
    name = "GP_IRQ_HANG"
    bits = "5"
    type = "wo"
    shortdesc = '''Watchdog timer limit reached.'''
    longdesc = '''This state can also be triggered under normal rendering if you are running a shader where it is near to a never-ending inner loop. From the software perspective, you can ignore this state, because this is merely a hint from the HW that something might be wrong. The SW then decides to either reset the processor, or continue to let it run.'''
  [[register.field]]
    name = "GP_IRQ_PLB_SEM"
    bits = "4"
    type = "wo"
  [[register.field]]
    name = "GP_IRQ_VS_SEM"
    bits = "3"
    type = "wo"
  [[register.field]]
    name = "GP_IRQ_PLB_OUT_OF_MEM"
    bits = "2"
    type = "wo"
  [[register.field]]
    name = "GP_IRQ_PLB_END_CMD_LIST"
    bits = "1"
    type = "wo"
  [[register.field]]
    name = "GP_IRQ_VS_END_CMD_LIST"
    bits = "0"
    type = "wo"
[[register]]
  name = "GP_CONTR_REG_INT_MASK"
  type = "wo"
  width = 32
  description = "GP Control Register Interrupt Mask"
  default = "0x00000000"
  offset = "0x0000002C"
  [[register.field]]
    name = "RESERVED"
    bits = "31:23"
    type = "wo"
  [[register.field]]
    name = "GP_IRQ_PTR_OUT_OF_BOUNDS"
    bits = "22"
    type = "wo"
    shortdesc = '''The PLB tries to access a pointer with an index larger than the number of tiles specified.'''
    longdesc = '''This indicates an error in the setup of the data structures. Any additional processing is terminated.'''
  [[register.field]]
    name = "GP_IRQ_SEMAPHORE_OVERFLOW"
    bits = "21"
    type = "wo"
    shortdesc = '''Semaphore overflow interrupt.'''
    longdesc = '''It triggers if the previous semaphore was in use and not 0 when the PLB switched semaphore'''
  [[register.field]]
    name = "GP_IRQ_SEMAPHORE_UNDERFLOW"
    bits = "20"
    type = "wo"
    shortdesc = '''Semaphore underflow interrupt.'''
    longdesc = '''It triggers if the PLB waits for a semaphore that cannot come. For example the VS has already switched semaphore.'''
  [[register.field]]
    name = "GP_IRQ_RESET_COMPLETED"
    bits = "19"
    type = "wo"
    shortdesc = '''Reset completed interrupt.'''
    longdesc = '''It triggers whenever the geometry processor has been successfully reset. When outstanding transactions are completed, the AXI bus is stopped before a soft reset can take place.'''
  [[register.field]]
    name = "GP_IRQ_PLB_INVALID_CMD"
    bits = "14"
    type = "wo"
    shortdesc = '''Invalid command interrupt from the PLB.'''
    longdesc = '''It triggers whenever the PLB encounters a command it does not understand. Any additional processing is terminated.'''
  [[register.field]]
    name = "GP_IRQ_VS_INVALID_CMD"
    bits = "13"
    type = "wo"
    shortdesc = '''Invalid command interrupt from the Vertex shader.'''
    longdesc = '''It triggers whenever the vertex shader encounters a command it does not understand. Any additional processing is terminated.'''
  [[register.field]]
    name = "GP_IRQ_AXI_BUS_STOPPED"
    bits = "12"
    type = "wo"
    shortdesc = '''AXI bus stopped.'''
    longdesc = '''It triggers if the bus is stopped using the GP_CMD_STOP_BUS in the GP Control Register Command. Any additional processing is terminated.'''
  [[register.field]]
    name = "GP_IRQ_AXI_BUS_ERROR"
    bits = "11"
    type = "wo"
  [[register.field]]
    name = "RESERVED"
    bits = "10"
    type = "wo"
  [[register.field]]
    name = "GP_IRQ_WRITE_BOUND_ERR"
    bits = "9"
    type = "wo"
  [[register.field]]
    name = "GP_IRQ_PERF_CNT_1_LIMIT"
    bits = "8"
    type = "wo"
  [[register.field]]
    name = "GP_IRQ_PERF_CNT_0_LIMIT"
    bits = "7"
    type = "wo"
  [[register.field]]
    name = "GP_IRQ_FORCED_HANG"
    bits = "6"
    type = "wo"
  [[register.field]]
    name = "GP_IRQ_HANG"
    bits = "5"
    type = "wo"
    shortdesc = '''Watchdog timer limit reached.'''
    longdesc = '''This state can also be triggered under normal rendering if you are running a shader where it is near to a never-ending inner loop. From the software perspective, you can ignore this state, because this is merely a hint from the HW that something might be wrong. The SW then decides to either reset the processor, or continue to let it run.'''
  [[register.field]]
    name = "GP_IRQ_PLB_SEM"
    bits = "4"
    type = "wo"
  [[register.field]]
    name = "GP_IRQ_VS_SEM"
    bits = "3"
    type = "wo"
  [[register.field]]
    name = "GP_IRQ_PLB_OUT_OF_MEM"
    bits = "2"
    type = "wo"
  [[register.field]]
    name = "GP_IRQ_PLB_END_CMD_LIST"
    bits = "1"
    type = "wo"
  [[register.field]]
    name = "GP_IRQ_VS_END_CMD_LIST"
    bits = "0"
    type = "wo"
[[register]]
  name = "GP_CONTR_REG_INT_STAT"
  type = "ro"
  width = 32
  description = "GP Control Register Interrupt Status"
  default = "0x00080000"
  offset = "0x00000030"
  [[register.field]]
    name = "RESERVED"
    bits = "31:23"
    type = "ro"
  [[register.field]]
    name = "GP_IRQ_PTR_OUT_OF_BOUNDS"
    bits = "22"
    type = "ro"
    shortdesc = '''The PLB tries to access a pointer with an index larger than the number of tiles specified.'''
    longdesc = '''This indicates an error in the setup of the data structures. Any additional processing is terminated.'''
  [[register.field]]
    name = "GP_IRQ_SEMAPHORE_OVERFLOW"
    bits = "21"
    type = "ro"
    shortdesc = '''Semaphore overflow interrupt.'''
    longdesc = '''It triggers if the previous semaphore was in use and not 0 when the PLB switched semaphore'''
  [[register.field]]
    name = "GP_IRQ_SEMAPHORE_UNDERFLOW"
    bits = "20"
    type = "ro"
    shortdesc = '''Semaphore underflow interrupt.'''
    longdesc = '''It triggers if the PLB waits for a semaphore that cannot come. For example the VS has already switched semaphore.'''
  [[register.field]]
    name = "GP_IRQ_RESET_COMPLETED"
    bits = "19"
    type = "ro"
    shortdesc = '''Reset completed interrupt.'''
    longdesc = '''It triggers whenever the geometry processor has been successfully reset. When outstanding transactions are completed, the AXI bus is stopped before a soft reset can take place.'''
  [[register.field]]
    name = "RESERVED"
    bits = "18:15"
    type = "ro"
  [[register.field]]
    name = "GP_IRQ_PLB_INVALID_CMD"
    bits = "14"
    type = "ro"
    shortdesc = '''Invalid command interrupt from the PLB.'''
    longdesc = '''It triggers whenever the PLB encounters a command it does not understand. Any additional processing is terminated.'''
  [[register.field]]
    name = "GP_IRQ_VS_INVALID_CMD"
    bits = "13"
    type = "ro"
    shortdesc = '''Invalid command interrupt from the Vertex shader.'''
    longdesc = '''It triggers whenever the vertex shader encounters a command it does not understand. Any additional processing is terminated.'''
  [[register.field]]
    name = "GP_IRQ_AXI_BUS_STOPPED"
    bits = "12"
    type = "ro"
    shortdesc = '''AXI bus stopped.'''
    longdesc = '''It triggers if the bus is stopped using the GP_CMD_STOP_BUS in the GP Control Register Command. Any additional processing is terminated.'''
  [[register.field]]
    name = "GP_IRQ_AXI_BUS_ERROR"
    bits = "11"
    type = "ro"
  [[register.field]]
    name = "RESERVED"
    bits = "10"
    type = "ro"
  [[register.field]]
    name = "GP_IRQ_WRITE_BOUND_ERR"
    bits = "9"
    type = "ro"
  [[register.field]]
    name = "GP_IRQ_PERF_CNT_1_LIMIT"
    bits = "8"
    type = "ro"
  [[register.field]]
    name = "GP_IRQ_PERF_CNT_0_LIMIT"
    bits = "7"
    type = "ro"
  [[register.field]]
    name = "GP_IRQ_FORCED_HANG"
    bits = "6"
    type = "ro"
  [[register.field]]
    name = "GP_IRQ_HANG"
    bits = "5"
    type = "ro"
    shortdesc = '''Watchdog timer limit reached.'''
    longdesc = '''This state can also be triggered under normal rendering if you are running a shader where it is near to a never-ending inner loop. From the software perspective, you can ignore this state, because this is merely a hint from the HW that something might be wrong. The SW then decides to either reset the processor, or continue to let it run.'''
  [[register.field]]
    name = "GP_IRQ_PLB_SEM"
    bits = "4"
    type = "ro"
  [[register.field]]
    name = "GP_IRQ_VS_SEM"
    bits = "3"
    type = "ro"
  [[register.field]]
    name = "GP_IRQ_PLB_OUT_OF_MEM"
    bits = "2"
    type = "ro"
  [[register.field]]
    name = "GP_IRQ_PLB_END_CMD_LIST"
    bits = "1"
    type = "ro"
  [[register.field]]
    name = "GP_IRQ_VS_END_CMD_LIST"
    bits = "0"
    type = "ro"
[[register]]
  name = "GP_CONTR_REG_WRITE_BOUND_LOW"
  type = "rw"
  width = 32
  description = "GP Control Register Write Boundary Low"
  default = "0x00000000"
  offset = "0x00000034"
  [[register.field]]
    name = "GP_CONTR_REG_WRITE_BOUND_LOW"
    bits = "31:8"
    type = "rw"
  [[register.field]]
    name = "RESERVED"
    bits = "7:0"
    type = "rw"
[[register]]
  name = "GP_CONTR_REG_WRITE_BOUND_HIGH"
  type = "rw"
  width = 32
  description = "GP Control Register Write Boundary High"
  default = "0xFFFFFF00"
  offset = "0x00000038"
  [[register.field]]
    name = "GP_CONTR_REG_WRITE_BOUND_HIGH"
    bits = "31:8"
    type = "rw"
  [[register.field]]
    name = "RESERVED"
    bits = "7:0"
    type = "rw"
[[register]]
  name = "GP_CONTR_REG_PERF_CNT_0_ENABLE"
  type = "rw"
  width = 32
  description = "GP Control Register Performance Counter 0 Enable"
  default = "0x00000000"
  offset = "0x0000003C"
  [[register.field]]
    name = "RESERVED"
    bits = "31:1"
    type = "rw"
  [[register.field]]
    name = "GP_CONTR_REG_PERF_CNT_0_ENABLE"
    bits = "0"
    type = "rw"
[[register]]
  name = "GP_CONTR_REG_PERF_CNT_1_ENABLE"
  type = "rw"
  width = 32
  description = "GP Control Register Performance Counter 1 Enable"
  default = "0x00000000"
  offset = "0x00000040"
  [[register.field]]
    name = "RESERVED"
    bits = "31:1"
    type = "rw"
  [[register.field]]
    name = "GP_CONTR_REG_PERF_CNT_1_ENABLE"
    bits = "0"
    type = "rw"
[[register]]
  name = "GP_CONTR_REG_PERF_CNT_0_SRC"
  type = "rw"
  width = 32
  description = "GP Control Register Performance Counter 0 Source"
  default = "0x00000000"
  offset = "0x00000044"
  [[register.field]]
    name = "RESERVED"
    bits = "31:1"
    type = "rw"
  [[register.field]]
    name = "GP_CONTR_REG_PERF_CNT_0_SRC"
    bits = "0"
    type = "rw"
[[register]]
  name = "GP_CONTR_REG_PERF_CNT_1_SRC"
  type = "rw"
  width = 32
  description = "GP Control Register Performance Counter 1 Source"
  default = "0x00000000"
  offset = "0x00000048"
  [[register.field]]
    name = "RESERVED"
    bits = "31:1"
    type = "rw"
  [[register.field]]
    name = "GP_CONTR_REG_PERF_CNT_1_SRC"
    bits = "0"
    type = "rw"
[[register]]
  name = "GP_CONTR_REG_PERF_CNT_0_VAL"
  type = "ro"
  width = 32
  description = "GP Control Register Performance Counter 0 Value"
  default = "0x00000000"
  offset = "0x0000004C"
  [[register.field]]
    name = "GP_CONTR_REG_PERF_CNT_0_VAL"
    bits = "31:0"
    type = "ro"
[[register]]
  name = "GP_CONTR_REG_PERF_CNT_1_VAL"
  type = "ro"
  width = 32
  description = "GP Control Register Performance Counter 1 Value"
  default = "0x00000000"
  offset = "0x00000050"
  [[register.field]]
    name = "GP_CONTR_REG_PERF_CNT_1_VAL"
    bits = "31:0"
    type = "ro"
[[register]]
  name = "GP_CONTR_REG_PERF_CNT_0_LIMIT"
  type = "rw"
  width = 32
  description = "GP Control Register Performance Counter 0 Limit"
  default = "0x00000000"
  offset = "0x00000054"
  [[register.field]]
    name = "GP_CONTR_REG_PERF_CNT_0_LIMIT"
    bits = "31:0"
    type = "rw"
[[register]]
  name = "GP_CONTR_REG_PERF_CNT_1_LIMIT"
  type = "rw"
  width = 32
  description = "GP Control Register Performance Control 1 Limit"
  default = "0x00000000"
  offset = "0x00000058"
  [[register.field]]
    name = "GP_CONTR_REG_PERF_CNT_1_LIMIT"
    bits = "31:0"
    type = "rw"
[[register]]
  name = "GP_CONTR_REG_STATUS"
  type = "ro"
  width = 32
  description = "GP Control Register Status"
  default = "0x00000000"
  offset = "0x00000068"
  [[register.field]]
    name = "RESERVED"
    bits = "31:10"
    type = "ro"
  [[register.field]]
    name = "CLK_OVERRIDE"
    bits = "9"
    type = "ro"
    shortdesc = '''Shows that the block level clock gates have been disabled This bit is set by the GP_CLK_OVERRIDE command in the GP_CONTR_REG_CMD Register.'''
    longdesc = '''When this bit is set, all the architectural clock gates in the design are overridden so all clocks are always active'''
  [[register.field]]
    name = "GP_STATUS_WRITE_BOUND_ERR"
    bits = "8"
    type = "ro"
  [[register.field]]
    name = "GP_STATUS_HANG"
    bits = "7"
    type = "ro"
    shortdesc = '''Watchdog timer limit reached.'''
    longdesc = '''This state can also be triggered under normal rendering if you are running a shader where it is near to a never-ending inner loop. From the software perspective, you can ignore this state, because this is merely a hint from the HW that something might be wrong. The SW then decides to either reset the processor, or continue to let it run.'''
  [[register.field]]
    name = "GP_STATUS_BUS_ERROR"
    bits = "6"
    type = "ro"
  [[register.field]]
    name = "GP_STATUS_PLB_STALLED"
    bits = "5"
    type = "ro"
  [[register.field]]
    name = "RESERVED"
    bits = "4"
    type = "ro"
  [[register.field]]
    name = "GP_STATUS_PLB_ACTIVE"
    bits = "3"
    type = "ro"
  [[register.field]]
    name = "GP_STATUS_BUS_STOPPED"
    bits = "2"
    type = "ro"
  [[register.field]]
    name = "GP_STATUS_VS_ACTIVE"
    bits = "1"
    type = "ro"
  [[register.field]]
    name = "GP_STATUS_IRQ"
    bits = "0"
    type = "ro"
[[register]]
  name = "GP_CONTR_REG_VERSION"
  type = "ro"
  width = 32
  description = "GP Control Register VERSION"
  default = "0x00000B07"
  offset = "0x0000006C"
  [[register.field]]
    name = "PRODUCT_ID"
    bits = "31:16"
    type = "ro"
  [[register.field]]
    name = "VERSION_MAJOR"
    bits = "15:8"
    type = "ro"
  [[register.field]]
    name = "VERSION_MINOR"
    bits = "7:0"
    type = "ro"
[[register]]
  name = "GP_CONTR_REG_VSCL_INITIAL_ADDR"
  type = "ro"
  width = 32
  description = "GP Control Register VSCL Initial Address"
  default = "0x00000000"
  offset = "0x00000080"
  [[register.field]]
    name = "GP_CONTR_REG_VSCL_INITIAL_ADDR"
    bits = "31:3"
    type = "ro"
  [[register.field]]
    name = "RESERVED"
    bits = "2:0"
    type = "ro"
[[register]]
  name = "GP_CONTR_REG_PLBCL_INITIAL_ADDR"
  type = "ro"
  width = 32
  description = "GP Control Register PLBCL Initial Address"
  default = "0x00000000"
  offset = "0x00000084"
  [[register.field]]
    name = "GP_CONTR_REG_PLBCL_INITIAL_ADDR"
    bits = "31:3"
    type = "ro"
  [[register.field]]
    name = "RESERVED"
    bits = "2:0"
    type = "ro"
[[register]]
  name = "GP_CONTR_REG_WRITE_BOUNDARY_ERROR_ADDR"
  type = "ro"
  width = 32
  description = "GP Control Register Write Error Address"
  default = "0x00000000"
  offset = "0x00000088"
  [[register.field]]
    name = "GP_CONTR_REG_WRITE_BOUNDARY_ERROR_ADDR"
    bits = "31:0"
    type = "ro"
[[register]]
  name = "GP_CONTR_REG_AXI_BUS_ERROR_STAT"
  type = "ro"
  width = 32
  description = "GP Control AXI Bus Error Status"
  default = "0x00000000"
  offset = "0x00000094"
  [[register.field]]
    name = "RESERVED"
    bits = "31:10"
    type = "ro"
  [[register.field]]
    name = "GP_READ_ERROR_ID"
    bits = "9:6"
    type = "ro"
  [[register.field]]
    name = "GP_WRITE_ERROR_ID"
    bits = "5:2"
    type = "ro"
  [[register.field]]
    name = "GP_READ_ERROR"
    bits = "1"
    type = "ro"
  [[register.field]]
    name = "GP_WRITE_ERROR"
    bits = "0"
    type = "ro"
[[register]]
  name = "GP_CONTR_REG_WATCHDOG_DISABLE"
  type = "rw"
  width = 32
  description = "GP Control Register Watchdog Disable"
  default = "0x00000000"
  offset = "0x000000A0"
  [[register.field]]
    name = "RESERVED"
    bits = "31:1"
    type = "rw"
  [[register.field]]
    name = "GP_CONTR_REG_WATCHDOG_DISABLE"
    bits = "0"
    type = "rw"
[[register]]
  name = "GP_CONTR_REG_WATCHDOG_TIMEOUT"
  type = "rw"
  width = 32
  description = "GP Control Register Watchdog Timeout"
  default = "0x000F4240"
  offset = "0x000000A4"
  [[register.field]]
    name = "WDOG_TIMEOUT"
    bits = "31:0"
    type = "rw"
[[register]]
  name = "VERSION"
  type = "ro"
  width = 32
  description = "VERSION Register"
  default = "0xCAC20000"
  offset = "0x00001000"
  [[register.field]]
    name = "PRODUCT_ID"
    bits = "31:16"
    type = "ro"
  [[register.field]]
    name = "VERSION_MAJOR"
    bits = "15:8"
    type = "ro"
  [[register.field]]
    name = "VERSION_MINOR"
    bits = "7:0"
    type = "ro"
[[register]]
  name = "SIZE"
  type = "ro"
  width = 32
  description = "SIZE Register"
  default = "0x00000000"
  offset = "0x00001004"
  [[register.field]]
    name = "EXTERNAL_BUS_WIDTH"
    bits = "31:24"
    type = "ro"
  [[register.field]]
    name = "CACHE_SIZE"
    bits = "23:16"
    type = "ro"
  [[register.field]]
    name = "ASSOCIATIVITY"
    bits = "15:8"
    type = "ro"
  [[register.field]]
    name = "LINE_SIZE"
    bits = "7:0"
    type = "ro"
[[register]]
  name = "STATUS"
  type = "ro"
  width = 32
  description = "Status Register"
  default = "0x00000000"
  offset = "0x00001008"
  [[register.field]]
    name = "RESERVED"
    bits = "31:2"
    type = "ro"
  [[register.field]]
    name = "DATA_BUSY"
    bits = "1"
    type = "ro"
  [[register.field]]
    name = "COMMAND_BUSY"
    bits = "0"
    type = "ro"
[[register]]
  name = "COMMAND"
  type = "wo"
  width = 32
  description = "Command Register"
  default = "0x00000000"
  offset = "0x00001010"
  [[register.field]]
    name = "RESERVED"
    bits = "31:3"
    type = "wo"
  [[register.field]]
    name = "COMMAND"
    bits = "2:0"
    type = "wo"
[[register]]
  name = "CLEAR_PAGE"
  type = "wo"
  width = 32
  description = "Clear Page Register"
  default = "0x00000000"
  offset = "0x00001014"
  [[register.field]]
    name = "CLEAR_PAGE"
    bits = "31:0"
    type = "wo"
[[register]]
  name = "MAX_READS"
  type = "rw"
  width = 32
  description = "Maximum Reads Register"
  default = "0x0000001C"
  offset = "0x00001018"
  [[register.field]]
    name = "RESERVED"
    bits = "31:5"
    type = "rw"
  [[register.field]]
    name = "MAX_READS"
    bits = "4:0"
    type = "rw"
[[register]]
  name = "ENABLE"
  type = "rw"
  width = 32
  description = "Enable Register"
  default = "0x00000000"
  offset = "0x0000101C"
  [[register.field]]
    name = "RESERVED"
    bits = "31:2"
    type = "rw"
  [[register.field]]
    name = "PERMIT_CACHE_READ_ALLOCATE"
    bits = "1"
    type = "rw"
  [[register.field]]
    name = "PERMIT_CACHEABLE_ACCESSES"
    bits = "0"
    type = "rw"
[[register]]
  name = "PERFCNT_SRC0"
  type = "rw"
  width = 32
  description = "Performance Counter 0 Source Register"
  default = "0x00000000"
  offset = "0x00001020"
  [[register.field]]
    name = "RESERVED"
    bits = "31:7"
    type = "rw"
  [[register.field]]
    name = "PERFCNT"
    bits = "6:0"
    type = "rw"
[[register]]
  name = "PERFCNT_VAL0"
  type = "rw"
  width = 32
  description = "Performance Counter 0 Value Register"
  default = "0x00000000"
  offset = "0x00001024"
  [[register.field]]
    name = "PERFCNT_VAL0"
    bits = "31:0"
    type = "rw"
[[register]]
  name = "PERFCNT_SRC1"
  type = "rw"
  width = 32
  description = "Performance Counter 1 Source Register"
  default = "0x00000000"
  offset = "0x00001028"
  [[register.field]]
    name = "RESERVED"
    bits = "31:7"
    type = "rw"
  [[register.field]]
    name = "PERFCNT"
    bits = "6:0"
    type = "rw"
[[register]]
  name = "PERFCNT_VAL1"
  type = "rw"
  width = 32
  description = "Performance Counter 1 Value Register"
  default = "0x00000000"
  offset = "0x0000102C"
  [[register.field]]
    name = "PERFCNT_VAL1"
    bits = "31:0"
    type = "rw"
[[register]]
  name = "GP_MMU_DTE_ADDR"
  type = "rw"
  width = 32
  description = "MMU Current Page Table Address Register"
  default = "0x00000000"
  offset = "0x00003000"
  [[register.field]]
    name = "MMU_DTE_ADDR"
    bits = "31:0"
    type = "rw"
[[register]]
  name = "GP_MMU_STATUS"
  type = "ro"
  width = 32
  description = "MMU Status Register"
  default = "0x00000018"
  offset = "0x00003004"
  [[register.field]]
    name = "RESERVED"
    bits = "31:11"
    type = "ro"
  [[register.field]]
    name = "MMU_PAGE_FAULT_BUS_ID"
    bits = "10:6"
    type = "ro"
  [[register.field]]
    name = "MMU_PAGE_FAULT_IS_WRITE"
    bits = "5"
    type = "ro"
    shortdesc = '''The direction of access for last page fault.'''
    longdesc = '''0 = Read 1 = Write'''
  [[register.field]]
    name = "MMU_REPLAY_BUFFER_EMPTY"
    bits = "4"
    type = "ro"
  [[register.field]]
    name = "MMU_IDLE"
    bits = "3"
    type = "ro"
    shortdesc = '''The MMU is idle when accesses are being translated and there are no unfinished translated accesses.'''
    longdesc = '''The MMU_IDLE signal only reports idle when the MMU processor is idle and accesses are active on the external bus.'''
  [[register.field]]
    name = "MMU_STALL_ACTIVE"
    bits = "2"
    type = "ro"
    shortdesc = '''MMU stall mode currently enabled.'''
    longdesc = '''The mode is enabled by command.'''
  [[register.field]]
    name = "MMU_PAGE_FAULT_ACTIVE"
    bits = "1"
    type = "ro"
    shortdesc = '''MMU page fault mode currently enabled.'''
    longdesc = '''The mode is enabled by command.'''
  [[register.field]]
    name = "MMU_PAGING_ENABLED"
    bits = "0"
    type = "ro"
[[register]]
  name = "GP_MMU_COMMAND"
  type = "wo"
  width = 32
  description = "MMU Command Register"
  default = "0x00000000"
  offset = "0x00003008"
  [[register.field]]
    name = "RESERVED"
    bits = "31:3"
    type = "wo"
[[register]]
  name = "GP_MMU_PAGE_FAULT_ADDR"
  type = "ro"
  width = 32
  description = "MMU Logical Address"
  default = "0x00000000"
  offset = "0x0000300C"
  [[register.field]]
    name = "MMU_PAGE_FAULT_ADDR"
    bits = "31:0"
    type = "ro"
[[register]]
  name = "GP_MMU_ZAP_ONE_LINE"
  type = "wo"
  width = 32
  description = "MMU Zap Cache Line Register"
  default = "0x00000000"
  offset = "0x00003010"
  [[register.field]]
    name = "MMU_ZAP_ONE_LINE"
    bits = "31:0"
    type = "wo"
[[register]]
  name = "GP_MMU_INT_RAWSTAT"
  type = "rw"
  width = 32
  description = "MMU Raw Interrupt Status Register"
  default = "0x00000000"
  offset = "0x00003014"
  [[register.field]]
    name = "RESERVED"
    bits = "31:2"
    type = "rw"
  [[register.field]]
    name = "READ_BUS_ERROR"
    bits = "1"
    type = "rw"
  [[register.field]]
    name = "PAGE_FAULT"
    bits = "0"
    type = "rw"
[[register]]
  name = "GP_MMU_INT_CLEAR"
  type = "wo"
  width = 32
  description = "MMU Interrupt Clear Register"
  default = "0x00000000"
  offset = "0x00003018"
  [[register.field]]
    name = "RESERVED"
    bits = "31:2"
    type = "wo"
  [[register.field]]
    name = "READ_BUS_ERROR"
    bits = "1"
    type = "wo"
  [[register.field]]
    name = "PAGE_FAULT"
    bits = "0"
    type = "wo"
[[register]]
  name = "GP_MMU_INT_MASK"
  type = "rw"
  width = 32
  description = "MMU Interrupt Mask Register"
  default = "0x00000000"
  offset = "0x0000301C"
  [[register.field]]
    name = "RESERVED"
    bits = "31:2"
    type = "rw"
  [[register.field]]
    name = "READ_BUS_ERROR"
    bits = "1"
    type = "rw"
  [[register.field]]
    name = "PAGE_FAULT"
    bits = "0"
    type = "rw"
[[register]]
  name = "GP_MMU_INT_STATUS"
  type = "ro"
  width = 32
  description = "MMU Interrupt Status Register"
  default = "0x00000000"
  offset = "0x00003020"
  [[register.field]]
    name = "RESERVED"
    bits = "31:2"
    type = "ro"
  [[register.field]]
    name = "READ_BUS_ERROR"
    bits = "1"
    type = "ro"
  [[register.field]]
    name = "PAGE_FAULT"
    bits = "0"
    type = "ro"
[[register]]
  name = "PP0_MMU_DTE_ADDR"
  type = "rw"
  width = 32
  description = "MMU Current Page Table Address Register"
  default = "0x00000000"
  offset = "0x00004000"
  [[register.field]]
    name = "MMU_DTE_ADDR"
    bits = "31:0"
    type = "rw"
[[register]]
  name = "PP0_MMU_STATUS"
  type = "ro"
  width = 32
  description = "MMU Status Register"
  default = "0x00000018"
  offset = "0x00004004"
  [[register.field]]
    name = "RESERVED"
    bits = "31:11"
    type = "ro"
  [[register.field]]
    name = "MMU_PAGE_FAULT_BUS_ID"
    bits = "10:6"
    type = "ro"
  [[register.field]]
    name = "MMU_PAGE_FAULT_IS_WRITE"
    bits = "5"
    type = "ro"
    shortdesc = '''The direction of access for last page fault.'''
    longdesc = '''0 = Read 1 = Write'''
  [[register.field]]
    name = "MMU_REPLAY_BUFFER_EMPTY"
    bits = "4"
    type = "ro"
  [[register.field]]
    name = "MMU_IDLE"
    bits = "3"
    type = "ro"
    shortdesc = '''The MMU is idle when accesses are being translated and there are no unfinished translated accesses.'''
    longdesc = '''The MMU_IDLE signal only reports idle when the MMU processor is idle and accesses are active on the external bus.'''
  [[register.field]]
    name = "MMU_STALL_ACTIVE"
    bits = "2"
    type = "ro"
    shortdesc = '''MMU stall mode currently enabled.'''
    longdesc = '''The mode is enabled by command.'''
  [[register.field]]
    name = "MMU_PAGE_FAULT_ACTIVE"
    bits = "1"
    type = "ro"
    shortdesc = '''MMU page fault mode currently enabled.'''
    longdesc = '''The mode is enabled by command.'''
  [[register.field]]
    name = "MMU_PAGING_ENABLED"
    bits = "0"
    type = "ro"
[[register]]
  name = "PP0_MMU_COMMAND"
  type = "wo"
  width = 32
  description = "MMU Command Register"
  default = "0x00000000"
  offset = "0x00004008"
  [[register.field]]
    name = "RESERVED"
    bits = "31:3"
    type = "wo"
[[register]]
  name = "PP0_MMU_PAGE_FAULT_ADDR"
  type = "ro"
  width = 32
  description = "MMU Logical Address"
  default = "0x00000000"
  offset = "0x0000400C"
  [[register.field]]
    name = "MMU_PAGE_FAULT_ADDR"
    bits = "31:0"
    type = "ro"
[[register]]
  name = "PP0_MMU_ZAP_ONE_LINE"
  type = "wo"
  width = 32
  description = "MMU Zap Cache Line Register"
  default = "0x00000000"
  offset = "0x00004010"
  [[register.field]]
    name = "MMU_ZAP_ONE_LINE"
    bits = "31:0"
    type = "wo"
[[register]]
  name = "PP0_MMU_INT_RAWSTAT"
  type = "rw"
  width = 32
  description = "MMU Raw Interrupt Status Register"
  default = "0x00000000"
  offset = "0x00004014"
  [[register.field]]
    name = "RESERVED"
    bits = "31:2"
    type = "rw"
  [[register.field]]
    name = "READ_BUS_ERROR"
    bits = "1"
    type = "rw"
  [[register.field]]
    name = "PAGE_FAULT"
    bits = "0"
    type = "rw"
[[register]]
  name = "PP0_MMU_INT_CLEAR"
  type = "wo"
  width = 32
  description = "MMU Interrupt Clear Register"
  default = "0x00000000"
  offset = "0x00004018"
  [[register.field]]
    name = "RESERVED"
    bits = "31:2"
    type = "wo"
  [[register.field]]
    name = "READ_BUS_ERROR"
    bits = "1"
    type = "wo"
  [[register.field]]
    name = "PAGE_FAULT"
    bits = "0"
    type = "wo"
[[register]]
  name = "PP0_MMU_INT_MASK"
  type = "rw"
  width = 32
  description = "MMU Interrupt Mask Register"
  default = "0x00000000"
  offset = "0x0000401C"
  [[register.field]]
    name = "RESERVED"
    bits = "31:2"
    type = "rw"
  [[register.field]]
    name = "READ_BUS_ERROR"
    bits = "1"
    type = "rw"
  [[register.field]]
    name = "PAGE_FAULT"
    bits = "0"
    type = "rw"
[[register]]
  name = "PP0_MMU_INT_STATUS"
  type = "ro"
  width = 32
  description = "MMU Interrupt Status Register"
  default = "0x00000000"
  offset = "0x00004020"
  [[register.field]]
    name = "RESERVED"
    bits = "31:2"
    type = "ro"
  [[register.field]]
    name = "READ_BUS_ERROR"
    bits = "1"
    type = "ro"
  [[register.field]]
    name = "PAGE_FAULT"
    bits = "0"
    type = "ro"
[[register]]
  name = "PP1_MMU_DTE_ADDR"
  type = "rw"
  width = 32
  description = "MMU Current Page Table Address Register"
  default = "0x00000000"
  offset = "0x00005000"
  [[register.field]]
    name = "MMU_DTE_ADDR"
    bits = "31:0"
    type = "rw"
[[register]]
  name = "PP1_MMU_STATUS"
  type = "ro"
  width = 32
  description = "MMU Status Register"
  default = "0x00000018"
  offset = "0x00005004"
  [[register.field]]
    name = "RESERVED"
    bits = "31:11"
    type = "ro"
  [[register.field]]
    name = "MMU_PAGE_FAULT_BUS_ID"
    bits = "10:6"
    type = "ro"
  [[register.field]]
    name = "MMU_PAGE_FAULT_IS_WRITE"
    bits = "5"
    type = "ro"
    shortdesc = '''The direction of access for last page fault.'''
    longdesc = '''0 = Read 1 = Write'''
  [[register.field]]
    name = "MMU_REPLAY_BUFFER_EMPTY"
    bits = "4"
    type = "ro"
  [[register.field]]
    name = "MMU_IDLE"
    bits = "3"
    type = "ro"
    shortdesc = '''The MMU is idle when accesses are being translated and there are no unfinished translated accesses.'''
    longdesc = '''The MMU_IDLE signal only reports idle when the MMU processor is idle and accesses are active on the external bus.'''
  [[register.field]]
    name = "MMU_STALL_ACTIVE"
    bits = "2"
    type = "ro"
    shortdesc = '''MMU stall mode currently enabled.'''
    longdesc = '''The mode is enabled by command.'''
  [[register.field]]
    name = "MMU_PAGE_FAULT_ACTIVE"
    bits = "1"
    type = "ro"
    shortdesc = '''MMU page fault mode currently enabled.'''
    longdesc = '''The mode is enabled by command.'''
  [[register.field]]
    name = "MMU_PAGING_ENABLED"
    bits = "0"
    type = "ro"
[[register]]
  name = "PP1_MMU_COMMAND"
  type = "wo"
  width = 32
  description = "MMU Command Register"
  default = "0x00000000"
  offset = "0x00005008"
  [[register.field]]
    name = "RESERVED"
    bits = "31:3"
    type = "wo"
  [[register.field]]
    name = "MMU_CMD"
    bits = "2:0"
    type = "wo"
    shortdesc = '''MMU_CMD.'''
    longdesc = '''This can be: 000:MMU_ENABLE_PAGING. Enable paging. 001:MMU_DISABLE_PAGING. Disable paging. 010:MMU_ENABLE_STALL. Turn on stall mode. 011:MMU_DISABLE_STALL. Turn off stall mode. 100:MMU_ZAP_CACHE. Zap the entire page table cache. 101:MMU_PAGE_FAULT_DONE. Leave page fault mode. 110:MMU_FORCE_RESET. Reset the MMU.'''
[[register]]
  name = "PP1_MMU_PAGE_FAULT_ADDR"
  type = "ro"
  width = 32
  description = "MMU Logical Address"
  default = "0x00000000"
  offset = "0x0000500C"
  [[register.field]]
    name = "MMU_PAGE_FAULT_ADDR"
    bits = "31:0"
    type = "ro"
[[register]]
  name = "PP1_MMU_ZAP_ONE_LINE"
  type = "wo"
  width = 32
  description = "MMU Zap Cache Line Register"
  default = "0x00000000"
  offset = "0x00005010"
  [[register.field]]
    name = "MMU_ZAP_ONE_LINE"
    bits = "31:0"
    type = "wo"
[[register]]
  name = "PP1_MMU_INT_RAWSTAT"
  type = "rw"
  width = 32
  description = "MMU Raw Interrupt Status Register"
  default = "0x00000000"
  offset = "0x00005014"
  [[register.field]]
    name = "RESERVED"
    bits = "31:2"
    type = "rw"
  [[register.field]]
    name = "READ_BUS_ERROR"
    bits = "1"
    type = "rw"
  [[register.field]]
    name = "PAGE_FAULT"
    bits = "0"
    type = "rw"
[[register]]
  name = "PP1_MMU_INT_CLEAR"
  type = "wo"
  width = 32
  description = "MMU Interrupt Clear Register"
  default = "0x00000000"
  offset = "0x00005018"
  [[register.field]]
    name = "RESERVED"
    bits = "31:2"
    type = "wo"
  [[register.field]]
    name = "READ_BUS_ERROR"
    bits = "1"
    type = "wo"
  [[register.field]]
    name = "PAGE_FAULT"
    bits = "0"
    type = "wo"
[[register]]
  name = "PP1_MMU_INT_MASK"
  type = "rw"
  width = 32
  description = "MMU Interrupt Mask Register"
  default = "0x00000000"
  offset = "0x0000501C"
  [[register.field]]
    name = "RESERVED"
    bits = "31:2"
    type = "rw"
  [[register.field]]
    name = "READ_BUS_ERROR"
    bits = "1"
    type = "rw"
  [[register.field]]
    name = "PAGE_FAULT"
    bits = "0"
    type = "rw"
[[register]]
  name = "PP1_MMU_INT_STATUS"
  type = "ro"
  width = 32
  description = "MMU Interrupt Status Register"
  default = "0x00000000"
  offset = "0x00005020"
  [[register.field]]
    name = "RESERVED"
    bits = "31:2"
    type = "ro"
  [[register.field]]
    name = "READ_BUS_ERROR"
    bits = "1"
    type = "ro"
  [[register.field]]
    name = "PAGE_FAULT"
    bits = "0"
    type = "ro"
[[register]]
  name = "PP0_REND_LIST_ADDR"
  type = "rw"
  width = 32
  description = "Renderer List Address Register"
  default = "0x00000000"
  offset = "0x00008000"
  [[register.field]]
    name = "REND_LIST_ADDR"
    bits = "31:3"
    type = "rw"
  [[register.field]]
    name = "RESERVED"
    bits = "2:0"
    type = "rw"
[[register]]
  name = "PP0_REND_RSW_BASE"
  type = "rw"
  width = 32
  description = "Renderer State Word Base Address Register"
  default = "0x00000000"
  offset = "0x00008004"
  [[register.field]]
    name = "REND_RSW_BASE"
    bits = "31:6"
    type = "rw"
  [[register.field]]
    name = "RESERVED"
    bits = "5:0"
    type = "rw"
[[register]]
  name = "PP0_REND_VERTEX_BASE"
  type = "rw"
  width = 32
  description = "Renderer Vertex Base Register"
  default = "0x00000000"
  offset = "0x00008008"
  [[register.field]]
    name = "REND_VERTEX_BASE"
    bits = "31:6"
    type = "rw"
  [[register.field]]
    name = "RESERVED"
    bits = "5:0"
    type = "rw"
[[register]]
  name = "PP0_FEATURE_ENABLE"
  type = "rw"
  width = 32
  description = "Feature Enable Register"
  default = "0x00000002"
  offset = "0x0000800C"
  [[register.field]]
    name = "RESERVED"
    bits = "31:7"
    type = "rw"
  [[register.field]]
    name = "SUMMATE_QUAD_COVER"
    bits = "6"
    type = "rw"
    shortdesc = '''When set to 1, the coverage-to-alpha operates on a 2x2 fragment quad, and not individual fragments.'''
    longdesc = '''This means that all 16 samples from a 2x2 quad are counted and converted to an alpha between 0.0 (0 samples) and 1.0 (16 samples), and that the alpha value is set for all the fragments in the 2x2 fragment quad.'''
  [[register.field]]
    name = "ORIGIN_LOWER_LEFT"
    bits = "5"
    type = "rw"
    shortdesc = '''This feature is still functional but deprecated, use Scaling Register on page 3-44 FLIP_FRAGOORD bit instead.'''
    longdesc = '''The ORIGIN_LOWER_LEFT bit indicates whether the coordinate system for the screen XY position has its origin in the upper-left corner, y-axis increasing downwards or to lower-left corner, y-axis increasing upwards. The only hardware function that is currently affected by this bit is the Position Register function, and tile indices. The pixel processor considers the upper-left corner to be the origin. This bit must be set for use with OpenGL.'''
  [[register.field]]
    name = "EARLYZ_DISABLE2"
    bits = "4"
    type = "rw"
    shortdesc = '''Setting this bit disables the second of two Early-Z mechanisms.'''
    longdesc = '''Only use for debugging. For normal use, enable or disable Early-Z with the EARLYZ_ENABLE bit.'''
  [[register.field]]
    name = "EARLYZ_DISABLE1"
    bits = "3"
    type = "rw"
    shortdesc = '''Setting this bit disables the first of two Early-Z mechanisms.'''
    longdesc = '''Only use for debugging. For normal use, enable or disable Early-Z with the EARLYZ_ENABLE bit.'''
  [[register.field]]
    name = "EARLYZ_ENABLE"
    bits = "1"
    type = "rw"
    shortdesc = '''Setting this bit to 1 enables the Early Z-test mechanism in the rasterizer.'''
    longdesc = '''EarlyZ is enabled by default. Enabling this test increases the performance in high-overdraw situations by performing multiple Z-tests per clock at the rasterizer level. The Early Z-test is not effective on Greater-Than depth test functions.'''
  [[register.field]]
    name = "FP_TILEBUF_ENABLE"
    bits = "0"
    type = "rw"
    shortdesc = '''Setting this bit to 1 sets the tile buffer to FP16 (1:5:10) component format instead of 8-bit component format.'''
    longdesc = '''Enabling this feature has the following consequences: * multiple render targets cannot be used * internal multi-sampling or super-sampling anti-aliasing cannot be used * external write-back anti-aliasing technique cannot be used.'''
[[register]]
  name = "PP0_Z_CLEAR_VALUE"
  type = "rw"
  width = 32
  description = "Z Clear Value Register"
  default = "0x00000000"
  offset = "0x00008010"
  [[register.field]]
    name = "Z_CLEAR_VALUE"
    bits = "23:0"
    type = "rw"
    shortdesc = '''The 24-bit depth value of the Z tile buffer is logically cleared whenever processing of a new tile starts.'''
    longdesc = '''If you do not want the Z tile buffer to be cleared, the content of the Z tile buffer can be pre-loaded by using a textured quad and Z-replacement technique. For more information see the explanation of subword 3 in Render state word data structures on page 3-132. See also Table 3-231 on page 3-181 and the corresponding description of texel format value 50.'''
[[register]]
  name = "PP0_STENCIL_CLEAR_VALUE"
  type = "rw"
  width = 32
  description = "Stencil Clear Value Register"
  default = "0x00000000"
  offset = "0x00008014"
  [[register.field]]
    name = "RESERVED"
    bits = "31:8"
    type = "rw"
  [[register.field]]
    name = "STENCIL_CLEAR_VALUE"
    bits = "7:0"
    type = "rw"
    shortdesc = '''The 8-bit stencil value of the stencil tile buffer is logically cleared whenever processing of a new tile starts.'''
    longdesc = '''If you do not want the stencil tile buffer to be cleared, the content of the stencil tile buffer can be pre-loaded by using a textured quad and stencil replacement technique. For more information see the explanation of subword 3 in Render state word data structures on page 3-132. See also Table 3-231 on page 3-181 and the corresponding description of texel format value 50.'''
[[register]]
  name = "PP0_ABGR_CLEAR_VALUE_0"
  type = "rw"
  width = 32
  description = "ABGR Clear Value 0 Register"
  default = "0x00000000"
  offset = "0x00008018"
  [[register.field]]
    name = "ALPHA_CLEAR_VALUE"
    bits = "31:24"
    type = "rw"
  [[register.field]]
    name = "BLUE_CLEAR_VALUE"
    bits = "23:16"
    type = "rw"
  [[register.field]]
    name = "GREEN_CLEAR_VALUE"
    bits = "15:8"
    type = "rw"
  [[register.field]]
    name = "RED_CLEAR_VALUE"
    bits = "7:0"
    type = "rw"
[[register]]
  name = "PP0_ABGR_CLEAR_VALUE_1"
  type = "rw"
  width = 32
  description = "ABGR Clear Value 1 Register"
  default = "0x00000000"
  offset = "0x0000801C"
  [[register.field]]
    name = "ALPHA_CLEAR_VALUE"
    bits = "31:24"
    type = "rw"
  [[register.field]]
    name = "BLUE_CLEAR_VALUE"
    bits = "23:16"
    type = "rw"
  [[register.field]]
    name = "GREEN_CLEAR_VALUE"
    bits = "15:8"
    type = "rw"
  [[register.field]]
    name = "RED_CLEAR_VALUE"
    bits = "7:0"
    type = "rw"
[[register]]
  name = "PP0_ABGR_CLEAR_VALUE_2"
  type = "rw"
  width = 32
  description = "ABGR Clear Value 2 Register"
  default = "0x00000000"
  offset = "0x00008020"
  [[register.field]]
    name = "ALPHA_CLEAR_VALUE"
    bits = "31:24"
    type = "rw"
  [[register.field]]
    name = "BLUE_CLEAR_VALUE"
    bits = "23:16"
    type = "rw"
  [[register.field]]
    name = "GREEN_CLEAR_VALUE"
    bits = "15:8"
    type = "rw"
  [[register.field]]
    name = "RED_CLEAR_VALUE"
    bits = "7:0"
    type = "rw"
[[register]]
  name = "PP0_ABGR_CLEAR_VALUE_3"
  type = "rw"
  width = 32
  description = "ABGR Clear Value 3 Register"
  default = "0x00000000"
  offset = "0x00008024"
  [[register.field]]
    name = "ALPHA_CLEAR_VALUE"
    bits = "31:24"
    type = "rw"
  [[register.field]]
    name = "BLUE_CLEAR_VALUE"
    bits = "23:16"
    type = "rw"
  [[register.field]]
    name = "GREEN_CLEAR_VALUE"
    bits = "15:8"
    type = "rw"
  [[register.field]]
    name = "RED_CLEAR_VALUE"
    bits = "7:0"
    type = "rw"
[[register]]
  name = "PP0_BOUNDING_BOX_LEFT_RIGHT"
  type = "rw"
  width = 32
  description = "Bounding Box Left Right Register"
  default = "0x00000000"
  offset = "0x00008028"
  [[register.field]]
    name = "RESERVED"
    bits = "31:20"
    type = "rw"
  [[register.field]]
    name = "BOUNDING_BOX_LEFT"
    bits = "19:16"
    type = "rw"
    shortdesc = '''Bits [3:0] of the number of pixels from the left initial framebuffer edge to exclude from write-back, if the bounding box is honored.'''
    longdesc = '''Bits [13:4] are always 0. If a greater bounding box than 16 is required, the modulo 16 of the bounding box is placed in this register. The remaining part is subtracted from all vertices.'''
  [[register.field]]
    name = "RESERVED"
    bits = "15:14"
    type = "rw"
  [[register.field]]
    name = "BOUNDING_BOX_RIGHT"
    bits = "13:0"
    type = "rw"
[[register]]
  name = "PP0_BOUNDING_BOX_BOTTOM"
  type = "rw"
  width = 32
  description = "Bounding Box Bottom Register"
  default = "0x00000000"
  offset = "0x0000802C"
  [[register.field]]
    name = "RESERVED"
    bits = "31:14"
    type = "rw"
  [[register.field]]
    name = "BOUNDING_BOX_BOTTOM"
    bits = "13:0"
    type = "rw"
[[register]]
  name = "PP0_FS_STACK_ADDR"
  type = "rw"
  width = 32
  description = "FS Stack Address Register"
  default = "0x00000000"
  offset = "0x00008030"
  [[register.field]]
    name = "FS_STACK_ADDR"
    bits = "31:6"
    type = "rw"
  [[register.field]]
    name = "RESERVED"
    bits = "5:0"
    type = "rw"
[[register]]
  name = "PP0_FS_STACK_SIZE_AND_INIT_VAL"
  type = "rw"
  width = 32
  description = "FS Stack Size and Initial Value Register"
  default = "0x00000000"
  offset = "0x00008034"
  [[register.field]]
    name = "FS_STACK_INIT_VAL"
    bits = "31:16"
    type = "rw"
    shortdesc = '''The initial value that the stack pointer is set to at the start of executing a fragment shader.'''
    longdesc = '''This is achieved by setting this field to a non-zero value to enable the main function of a fragment shader to have a stack frame. This register must be set to the size of the largest stack frame of the active fragment shader main function requirements. If the stack pointer is decremented to a value less than FS_STACK_INIT_VAL as a result of a function return, then the fragment shader terminates, and is considered to have executed successfully. This functionality enables the main-function to be recursive, as any other function.'''
  [[register.field]]
    name = "FS_STACK_SIZE"
    bits = "15:0"
    type = "rw"
    shortdesc = '''The fragment shader stack size in number of 8-byte elements that the fragment shader stack is permitted to contain.'''
    longdesc = '''The amount of memory that must be allocated for the fragment shader stack is 1KB x FS_STACK_SIZE. Note: The fragment shader requires 128 stacks to keep stack data for all active fragments in the pipeline. An increment of 1 unit in FS_STACK_SIZE means 8-byte elements for each stack for each fragment. This gives 8-byte x 128 stacks/fragment = 1024 bytes.'''
[[register]]
  name = "PP0_ORIGIN_OFFSET_X"
  type = "rw"
  width = 32
  description = "Origin Offset X Register"
  default = "0x00000000"
  offset = "0x00008040"
  [[register.field]]
    name = "ORIGIN_OFFSET_X"
    bits = "15:0"
    type = "rw"
[[register]]
  name = "PP0_ORIGIN_OFFSET_Y"
  type = "rw"
  width = 32
  description = "Origin Offset Y Register"
  default = "0x00000000"
  offset = "0x00008044"
  [[register.field]]
    name = "ORIGIN_OFFSET_Y"
    bits = "15:0"
    type = "rw"
[[register]]
  name = "PP0_SUBPIXEL_SPECIFIER"
  type = "rw"
  width = 32
  description = "Subpixel Specifier Register"
  default = "0x00000075"
  offset = "0x00008048"
  [[register.field]]
    name = "SUBPIXEL_SPECIFIER"
    bits = "7:0"
    type = "rw"
    shortdesc = '''The default value is 117, and is 127 minus the number of subpixel bits.'''
    longdesc = '''Write to this register as follows: 117 for resolutions below 1024x1024 118 for resolutions between 1024x1024-2048x2048 119 for resolutions above 2048x2048 to guarantee robust rasterization.'''
[[register]]
  name = "PP0_TIEBREAK_MODE"
  type = "rw"
  width = 32
  description = "Tiebreak mode Register"
  default = "0x00000000"
  offset = "0x0000804C"
  [[register.field]]
    name = "RESERVED"
    bits = "31:3"
    type = "rw"
  [[register.field]]
    name = "TIEBREAK_MODE"
    bits = "2:0"
    type = "rw"
[[register]]
  name = "PP0_PLIST_CONFIG"
  type = "rw"
  width = 32
  description = "Polygon List Format Register"
  default = "0x00000000"
  offset = "0x00008050"
  [[register.field]]
    name = "RESERVED"
    bits = "31:30"
    type = "rw"
  [[register.field]]
    name = "LIST_FORMAT"
    bits = "29:28"
    type = "rw"
  [[register.field]]
    name = "SCALE_Y"
    bits = "21:16"
    type = "rw"
  [[register.field]]
    name = "RESERVED"
    bits = "15:6"
    type = "rw"
  [[register.field]]
    name = "SCALE_X"
    bits = "5:0"
    type = "rw"
[[register]]
  name = "PP0_SCALING_CONFIG"
  type = "rw"
  width = 32
  description = "Scaling Register"
  default = "0x00000000"
  offset = "0x00008054"
  [[register.field]]
    name = "RESERVED"
    bits = "31:23"
    type = "rw"
  [[register.field]]
    name = "SCALE_Y"
    bits = "22:20"
    type = "rw"
  [[register.field]]
    name = "RESERVED"
    bits = "19"
    type = "rw"
  [[register.field]]
    name = "SCALE_X"
    bits = "18:16"
    type = "rw"
  [[register.field]]
    name = "RESERVED"
    bits = "15:12"
    type = "rw"
  [[register.field]]
    name = "FLIP_DERIVATIVE_Y"
    bits = "11"
    type = "rw"
    shortdesc = '''Flips the sign of the y derivative.'''
    longdesc = '''It changes the sign on the y-coordinate when using the derivative instruction in adder4 and adder1.'''
  [[register.field]]
    name = "FLIP_FRAGCOORD"
    bits = "10"
    type = "rw"
    shortdesc = '''Flips the coordinate system as read by fragcoord.'''
    longdesc = '''When set to 1, the xy-coordinate system has the origin in the lower left corner. If set to 0, the origin is at the upper left corner. Only the fragcoord y-value is affected.'''
  [[register.field]]
    name = "FLIP_DITHERING_MATRIX"
    bits = "9"
    type = "rw"
    shortdesc = '''Flips the dithering matrix enabled by RSW 14, bit 13 upside down.'''
    longdesc = '''See Subword 14: Stencil clear tag, number of uniforms, dithering/ROP4 enable, polygon orientation flag on page 3-145 The dithering enabled by WBx_DITHER_ENABLE in the WBx_TARGET_FLAGS Register is not affected. Note: There are no offsets to the dithering matrix, consequently a framebuffer with a height divisible by four is required for a 1:1 mapping with the non-flipped content.'''
  [[register.field]]
    name = "FLIP_POINT_SPRITES"
    bits = "8"
    type = "rw"
    shortdesc = '''Flips the point sprites upside down.'''
    longdesc = '''This is achieved by flipping the y-coordinate of the point sprites when using varying instruction 12.'''
  [[register.field]]
    name = "DERIVATIVE_SCALE_ENABLE"
    bits = "3"
    type = "rw"
    shortdesc = '''Enables scaling of the derivative instruction.'''
    longdesc = '''This is achieved by multiplying the result from the derivative instructions in adder4 and adder1 by 2**SCALEX for the x-direction and 2**SCALEY for the y-direction.'''
  [[register.field]]
    name = "FRAGCOORD_SCALE_ENABLE"
    bits = "2"
    type = "rw"
    shortdesc = '''Enables inverse scaling of fragcoord values.'''
    longdesc = '''This is achieved by dividing the result of the varying instruction Position Register with 2**SCALEX for the x-direction and 2**SCALEY for the y-direction.'''
  [[register.field]]
    name = "DITHERING_SCALE_ENABLE"
    bits = "1"
    type = "rw"
    shortdesc = '''Enables scaling of dithering values.'''
    longdesc = '''This is achieved by dividing the x and y position with 2**SCALEX and 2**SCALEY before applying the dithering offset table. There are two offset tables, one in the blending unit and one in the writeback unit. Both are affected. Note: * The dither scaling is only valid for the dithering enabled by the RSW. Writeback dithering, that is, dithering enabled by the writeback registers, is not affected. * The dithering matrix can only be scaled up to the size of the tile, making scaling values greater than 3 ineffective. This is an implementation limit.'''
  [[register.field]]
    name = "POINT_AND_LINE_SCALE_ENABLE"
    bits = "0"
    type = "rw"
    shortdesc = '''Enables scaling of point and line sizes.'''
    longdesc = '''This feature multiplies the line width and point size in both x and y direction by 2*SCALEX and 2*SCALEY. The major axis for aliased lines is affected so that dx and dy are divided by 2*SCALEX and 2*SCALEY before the major axis is selected. Because of the diamond-exit rulea, the line offset is not affected by the scaling.'''
[[register]]
  name = "PP0_TILEBUFFER_BITS"
  type = "rw"
  width = 32
  description = "Tilebuffer configuration Register"
  default = "0x00000000"
  offset = "0x00008058"
  [[register.field]]
    name = "TILEBUFFER_A_BITS"
    bits = "15:12"
    type = "rw"
  [[register.field]]
    name = "TILEBUFFER_B_BITS"
    bits = "11:8"
    type = "rw"
  [[register.field]]
    name = "TILEBUFFER_G_BITS"
    bits = "7:4"
    type = "rw"
  [[register.field]]
    name = "TILEBUFFER_R_BITS"
    bits = "3:0"
    type = "rw"
[[register]]
  name = "PP0_WB0_SOURCE_SELECT"
  type = "rw"
  width = 32
  description = "WB0 Source Select Register"
  default = "0x00000000"
  offset = "0x00008100"
  [[register.field]]
    name = "WB0_SOURCE_SELECT"
    bits = "1:0"
    type = "rw"
    shortdesc = '''Tile buffer source for the write-back unit.'''
    longdesc = '''0 = None, WB is disabled 1 = Z/Stencil buffer 2 = ARGB buffer 3 = Reserved/undefined.'''
[[register]]
  name = "PP0_WB0_TARGET_ADDR"
  type = "rw"
  width = 32
  description = "WB0 Target Address Register"
  default = "0x00000000"
  offset = "0x00008104"
  [[register.field]]
    name = "WB0_TARGET_ADDR"
    bits = "31:3"
    type = "rw"
[[register]]
  name = "PP0_WB0_TARGET_PIXEL_FORMAT"
  type = "rw"
  width = 32
  description = "WB0 Target Pixel Format Register"
  default = "0x00000000"
  offset = "0x00008108"
  [[register.field]]
    name = "WB0_TARGET_PIXEL_FORMAT"
    bits = "3:0"
    type = "rw"
[[register]]
  name = "PP0_WB0_TARGET_AA_FORMAT"
  type = "rw"
  width = 32
  description = "WB0 Target AA Format Register"
  default = "0x00000000"
  offset = "0x0000810C"
  [[register.field]]
    name = "RESERVED"
    bits = "31:15"
    type = "rw"
  [[register.field]]
    name = "WB0_TARGET_AA_Y"
    bits = "14:12"
    type = "rw"
  [[register.field]]
    name = "RESERVED"
    bits = "11:10"
    type = "rw"
  [[register.field]]
    name = "WB0_TARGET_AA_X"
    bits = "9:8"
    type = "rw"
  [[register.field]]
    name = "RESERVED"
    bits = "7:3"
    type = "rw"
  [[register.field]]
    name = "WB0_TARGET_AA_FORMAT"
    bits = "2:0"
    type = "rw"
    shortdesc = '''Blocked AA Note: WB0_TARGET_AA_FORMAT is deprecated.'''
    longdesc = '''Consequently you are advised not to use these bits and to set them to zero.'''
[[register]]
  name = "PP0_WB0_TARGET_LAYOUT"
  type = "rw"
  width = 32
  description = "WB0 Target Layout"
  default = "0x00000000"
  offset = "0x00008110"
  [[register.field]]
    name = "RESERVED"
    bits = "31:2"
    type = "rw"
  [[register.field]]
    name = "WB0_TARGET_LAYOUT"
    bits = "1:0"
    type = "rw"
    shortdesc = '''0 Linear layout.'''
    longdesc = '''The pixels are stored in normal linear layout in memory. 1 Interleaved layout. This is a fully interleaved mode where pixels are stored in u-order in memory for best possible 2D locality. This normally requires a quadratic framebuffer with power of two sides, but can also be used if the width is twice the height and both sides are powers of two. 2 Interleaved blocks. Each 16x16 pixel block is interleaved u-order internally and then the blocks are stored linearly in the framebuffer. 3 Reserved = Undefined.'''
[[register]]
  name = "PP0_WB0_TARGET_SCANLINE_LENGTH"
  type = "rw"
  width = 32
  description = "WB0 Target Scanline Length"
  default = "0x00000000"
  offset = "0x00008114"
  [[register.field]]
    name = "WB0_TARGET_SCANLINE_LENGTH"
    bits = "15:0"
    type = "rw"
    shortdesc = '''Specifies the offset between the beginning of two lines of the target buffer.'''
    longdesc = '''The actual meaning depends on the value of WB0_TARGET_LAYOUT.'''
[[register]]
  name = "PP0_WB0_TARGET_FLAGS"
  type = "rw"
  width = 32
  description = "WB0 Target Flags Register"
  default = "0x00000000"
  offset = "0x00008118"
  [[register.field]]
    name = "WB0_BIG_ENDIAN"
    bits = "5"
    type = "rw"
    shortdesc = '''When enabled, pixels are written in big-endian byte order.'''
    longdesc = '''When disabled, pixels are written in little-endian byte order.'''
  [[register.field]]
    name = "WB0_DITHER_ENABLE"
    bits = "4"
    type = "rw"
    shortdesc = '''When enabled, dithering of the write-back data is performed using Bayer ordered dithering.'''
    longdesc = '''Dithering is only possible when FP_TILEBUF_ENABLE is off. Note: Dithering only is supported when the tilebuffer is not downsampled more than a factor of four in either dimension, that is, the tilebuffer size is not less than 4x4 pixels.'''
  [[register.field]]
    name = "WB0_INV_COMPONENT_ORDER_ENABLE"
    bits = "3"
    type = "rw"
    shortdesc = '''When enabled, color formats get the order of their components inverted, for example: RGBA -> ARGB.'''
    longdesc = '''This, together with WB0_SWAP_RED_BLUE_ENABLE makes it possible to support different component permutations of WB0_TARGET_PIXEL_FORMAT.'''
  [[register.field]]
    name = "WB0_SWAP_RED_BLUE_ENABLE"
    bits = "2"
    type = "rw"
    shortdesc = '''When enabled, color formats get their red and blue components swapped, for example: RGBA->BGRA.'''
    longdesc = '''This, together with WB0_INV_COMPONENT_ORDER_ENABLE makes it possible to support different component permutations of WB0_TARGET_PIXEL_FORMAT.'''
  [[register.field]]
    name = "WB0_BOUNDING_BOX_ENABLE"
    bits = "1"
    type = "rw"
  [[register.field]]
    name = "WB0_DIRTY_BIT_ENABLE"
    bits = "0"
    type = "rw"
[[register]]
  name = "PP0_WB0_MRT_ENABLE"
  type = "rw"
  width = 32
  description = "WB0 MRT Enable Register"
  default = "0x00000000"
  offset = "0x0000811C"
  [[register.field]]
    name = "RESERVED"
    bits = "31:4"
    type = "rw"
  [[register.field]]
    name = "WB0_MRT_ENABLE"
    bits = "3:0"
    type = "rw"
[[register]]
  name = "PP0_WB0_MRT_OFFSET"
  type = "rw"
  width = 32
  description = "WB0 MRT Offset Register"
  default = "0x00000000"
  offset = "0x00008120"
  [[register.field]]
    name = "WB0_MRT_OFFSET"
    bits = "31:3"
    type = "rw"
[[register]]
  name = "PP0_WB0_GLOBAL_TEST_ENABLE"
  type = "rw"
  width = 32
  description = "WB0 Global Test Enable Register"
  default = "0x00000000"
  offset = "0x00008124"
  [[register.field]]
    name = "WB0_GLOBAL_TEST_ENABLE"
    bits = "0"
    type = "rw"
[[register]]
  name = "PP0_WB0_GLOBAL_TEST_REF_VALUE"
  type = "rw"
  width = 32
  description = "WB0 Global Test Reference Value Register"
  default = "0x00000000"
  offset = "0x00008128"
  [[register.field]]
    name = "RESERVED"
    bits = "31:16"
    type = "rw"
[[register]]
  name = "PP0_WB0_GLOBAL_TEST_CMP_FUNC"
  type = "rw"
  width = 32
  description = "WB0 Global Test Compare Function Register"
  default = "0x00000000"
  offset = "0x0000812C"
  [[register.field]]
    name = "RESERVED"
    bits = "31:3"
    type = "rw"
[[register]]
  name = "PP0_WB1_SOURCE_SELECT"
  type = "rw"
  width = 32
  description = "WB1 Source Select Register"
  default = "0x00000000"
  offset = "0x00008200"
  [[register.field]]
    name = "RESERVED"
    bits = "31:2"
    type = "rw"
  [[register.field]]
    name = "WB1_SOURCE_SELECT"
    bits = "1:0"
    type = "rw"
    shortdesc = '''Tile buffer source for the write-back unit.'''
    longdesc = '''0 = None, WB is disabled 1 = Z/Stencil buffer 2 = ARGB buffer 3 = Reserved/undefined.'''
[[register]]
  name = "PP0_WB1_TARGET_ADDR"
  type = "rw"
  width = 32
  description = "WB1 Target Address Register"
  default = "0x00000000"
  offset = "0x00008204"
  [[register.field]]
    name = "WB1_TARGET_ADDR"
    bits = "31:3"
    type = "rw"
  [[register.field]]
    name = "RESERVED"
    bits = "2:0"
    type = "rw"
[[register]]
  name = "PP0_WB1_TARGET_PIXEL_FORMAT"
  type = "rw"
  width = 32
  description = "WB1 Target Pixel Format Register"
  default = "0x00000000"
  offset = "0x00008208"
  [[register.field]]
    name = "WB1_TARGET_PIXEL_FORMAT"
    bits = "3:0"
    type = "rw"
[[register]]
  name = "PP0_WB1_TARGET_AA_FORMAT"
  type = "rw"
  width = 32
  description = "WB1 Target AA Format Register"
  default = "0x00000000"
  offset = "0x0000820C"
  [[register.field]]
    name = "RESERVED"
    bits = "31:15"
    type = "rw"
  [[register.field]]
    name = "WB1_TARGET_AA_Y"
    bits = "14:12"
    type = "rw"
  [[register.field]]
    name = "RESERVED"
    bits = "11:10"
    type = "rw"
  [[register.field]]
    name = "WB1_TARGET_AA_X"
    bits = "9:8"
    type = "rw"
  [[register.field]]
    name = "RESERVED"
    bits = "7:3"
    type = "rw"
  [[register.field]]
    name = "WB1_TARGET_AA_FORMAT"
    bits = "2:0"
    type = "rw"
    shortdesc = '''Blocked AA Note: WB1_TARGET_AA_FORMAT is deprecated.'''
    longdesc = '''Consequently you are advised not to use these bits and to set them to zero.'''
[[register]]
  name = "PP0_WB1_TARGET_LAYOUT"
  type = "rw"
  width = 32
  description = "WB1 Target Layout"
  default = "0x00000000"
  offset = "0x00008210"
  [[register.field]]
    name = "RESERVED"
    bits = "31:2"
    type = "rw"
  [[register.field]]
    name = "WB1_TARGET_LAYOUT"
    bits = "1:0"
    type = "rw"
    shortdesc = '''0 Linear layout.'''
    longdesc = '''The pixels are stored in normal linear layout in memory. 1 Interleaved layout. This is a fully interleaved mode where pixels are stored in u-order in memory for best possible 2D locality. This normally requires a quadratic framebuffer with power of two sides, but can also be used if the width is twice the height and both sides are powers of two. 2 Interleaved blocks. Each 16x16 pixel block is interleaved u-order internally and then the blocks are stored linearly in the framebuffer. 3 Reserved = Undefined.'''
[[register]]
  name = "PP0_WB1_TARGET_SCANLINE_LENGTH"
  type = "rw"
  width = 32
  description = "WB1 Target Scanline Length"
  default = "0x00000000"
  offset = "0x00008214"
  [[register.field]]
    name = "WB2_TARGET_SCANLINE_LENGTH"
    bits = "15:0"
    type = "rw"
    shortdesc = '''Specifies the offset between the beginning of two lines of the target buffer.'''
    longdesc = '''The actual meaning depends on the value of WB1_TARGET_LAYOUT.'''
[[register]]
  name = "PP0_WB1_TARGET_FLAGS"
  type = "rw"
  width = 32
  description = "WB1 Target Flags Register"
  default = "0x00000000"
  offset = "0x00008218"
  [[register.field]]
    name = "RESERVED"
    bits = "31:6"
    type = "rw"
  [[register.field]]
    name = "WB1_BIG_ENDIAN"
    bits = "5"
    type = "rw"
    shortdesc = '''When enabled, pixels are written in big-endian byte order.'''
    longdesc = '''When disabled, pixels are written in little-endian byte order.'''
  [[register.field]]
    name = "WB1_DITHER_ENABLE"
    bits = "4"
    type = "rw"
    shortdesc = '''When enabled, dithering of the write-back data is performed using Bayer ordered dithering.'''
    longdesc = '''Dithering is only possible when FP_TILEBUF_ENABLE is off. Note: Dithering only is supported when the tilebuffer is not downsampled more than a factor of four in either dimension, that is, the tilebuffer size is not less than 4x4 pixels.'''
  [[register.field]]
    name = "WB1_INV_COMPONENT_ORDER_ENABLE"
    bits = "3"
    type = "rw"
    shortdesc = '''When enabled, color formats get the order of their components inverted, for example: RGBA -> ARGB.'''
    longdesc = '''This, together with WB0_SWAP_RED_BLUE_ENABLE makes it possible to support different component permutations of WB1_TARGET_PIXEL_FORMAT.'''
  [[register.field]]
    name = "WB1_SWAP_RED_BLUE_ENABLE"
    bits = "2"
    type = "rw"
    shortdesc = '''When enabled, color formats get their red and blue components swapped, for example: RGBA->BGRA.'''
    longdesc = '''This, together with WB1_INV_COMPONENT_ORDER_ENABLE makes it possible to support different component permutations of WB1_TARGET_PIXEL_FORMAT.'''
  [[register.field]]
    name = "WB1_BOUNDING_BOX_ENABLE"
    bits = "1"
    type = "rw"
  [[register.field]]
    name = "WB1_DIRTY_BIT_ENABLE"
    bits = "0"
    type = "rw"
[[register]]
  name = "PP0_WB1_MRT_ENABLE"
  type = "rw"
  width = 32
  description = "WB1 MRT Enable Register"
  default = "0x00000000"
  offset = "0x0000821C"
  [[register.field]]
    name = "WB1_MRT_ENABLE"
    bits = "3:0"
    type = "rw"
[[register]]
  name = "PP0_WB1_MRT_OFFSET"
  type = "rw"
  width = 32
  description = "WB1 MRT Offset Register"
  default = "0x00000000"
  offset = "0x00008220"
  [[register.field]]
    name = "WB1_MRT_OFFSET"
    bits = "31:3"
    type = "rw"
[[register]]
  name = "PP0_WB1_GLOBAL_TEST_ENABLE"
  type = "rw"
  width = 32
  description = "WB1 Global Test Enable Register"
  default = "0x00000000"
  offset = "0x00008224"
  [[register.field]]
    name = "RESERVED"
    bits = "31:1"
    type = "rw"
  [[register.field]]
    name = "WB1_GLOBAL_TEST_ENABLE"
    bits = "0"
    type = "rw"
[[register]]
  name = "PP0_WB1_GLOBAL_TEST_REF_VALUE"
  type = "rw"
  width = 32
  description = "WB1 Global Test Reference Value Register"
  default = "0x00000000"
  offset = "0x00008228"
  [[register.field]]
    name = "RESERVED"
    bits = "31:16"
    type = "rw"
[[register]]
  name = "PP0_WB1_GLOBAL_TEST_CMP_FUNC"
  type = "rw"
  width = 32
  description = "WB1 Global Test Compare Function Register"
  default = "0x00000000"
  offset = "0x0000822C"
  [[register.field]]
    name = "RESERVED"
    bits = "31:3"
    type = "rw"
[[register]]
  name = "PP0_WB2_SOURCE_SELECT"
  type = "rw"
  width = 32
  description = "WB2 Source Select Register"
  default = "0x00000000"
  offset = "0x00008300"
  [[register.field]]
    name = "RESERVED"
    bits = "31:2"
    type = "rw"
  [[register.field]]
    name = "WB2_SOURCE_SELECT"
    bits = "1:0"
    type = "rw"
    shortdesc = '''Tile buffer source for the write-back unit.'''
    longdesc = '''0 = None, WB is disabled 1 = Z/Stencil buffer 2 = ARGB buffer 3 = Reserved/undefined.'''
[[register]]
  name = "PP0_WB2_TARGET_ADDR"
  type = "rw"
  width = 32
  description = "WB2 Target Address Register"
  default = "0x00000000"
  offset = "0x00008304"
  [[register.field]]
    name = "WB2_TARGET_ADDR"
    bits = "31:3"
    type = "rw"
[[register]]
  name = "PP0_WB2_TARGET_PIXEL_FORMAT"
  type = "rw"
  width = 32
  description = "WB2 Target Pixel Format Register"
  default = "0x00000000"
  offset = "0x00008308"
  [[register.field]]
    name = "RESERVED"
    bits = "31:4"
    type = "rw"
  [[register.field]]
    name = "WB2_TARGET_PIXEL_FORMAT"
    bits = "3:0"
    type = "rw"
[[register]]
  name = "PP0_WB2_TARGET_AA_FORMAT"
  type = "rw"
  width = 32
  description = "WB2 Target AA Format Register"
  default = "0x00000000"
  offset = "0x0000830C"
  [[register.field]]
    name = "RESERVED"
    bits = "31:15"
    type = "rw"
  [[register.field]]
    name = "WB2_TARGET_AA_Y"
    bits = "14:12"
    type = "rw"
  [[register.field]]
    name = "RESERVED"
    bits = "11:10"
    type = "rw"
  [[register.field]]
    name = "WB2_TARGET_AA_X"
    bits = "9:8"
    type = "rw"
  [[register.field]]
    name = "RESERVED"
    bits = "7:3"
    type = "rw"
  [[register.field]]
    name = "WB2_TARGET_AA_FORMAT"
    bits = "2:0"
    type = "rw"
    shortdesc = '''Blocked AA Note: WB2_TARGET_AA_FORMAT is deprecated.'''
    longdesc = '''Consequently you are advised not to use these bits and to set them to zero.'''
[[register]]
  name = "PP0_WB2_TARGET_LAYOUT"
  type = "rw"
  width = 32
  description = "WB2 Target Layout"
  default = "0x00000000"
  offset = "0x00008310"
  [[register.field]]
    name = "RESERVED"
    bits = "31:2"
    type = "rw"
  [[register.field]]
    name = "WB2_TARGET_LAYOUT"
    bits = "1:0"
    type = "rw"
    shortdesc = '''0 Linear layout.'''
    longdesc = '''The pixels are stored in normal linear layout in memory. 1 Interleaved layout. This is a fully interleaved mode where pixels are stored in u-order in memory for best possible 2D locality. This normally requires a quadratic framebuffer with power of two sides, but can also be used if the width is twice the height and both sides are powers of two. 2 Interleaved blocks. Each 16x16 pixel block is interleaved u-order internally and then the blocks are stored linearly in the framebuffer. 3 Reserved = Undefined.'''
[[register]]
  name = "PP0_WB2_TARGET_SCANLINE_LENGTH"
  type = "rw"
  width = 32
  description = "WB2 Target Scanline Length"
  default = "0x00000000"
  offset = "0x00008314"
  [[register.field]]
    name = "RESERVED"
    bits = "31:16"
    type = "rw"
  [[register.field]]
    name = "WB2_TARGET_SCANLINE_LENGTH"
    bits = "15:0"
    type = "rw"
    shortdesc = '''Specifies the offset between the beginning of two lines of the target buffer.'''
    longdesc = '''The actual meaning depends on the value of WB2_TARGET_LAYOUT.'''
[[register]]
  name = "PP0_WB2_TARGET_FLAGS"
  type = "rw"
  width = 32
  description = "WB2 Target Flags Register"
  default = "0x00000000"
  offset = "0x00008318"
  [[register.field]]
    name = "WB2_BIG_ENDIAN"
    bits = "5"
    type = "rw"
    shortdesc = '''When enabled, pixels are written in big-endian byte order.'''
    longdesc = '''When disabled, pixels are written in little-endian byte order.'''
  [[register.field]]
    name = "WB2_DITHER_ENABLE"
    bits = "4"
    type = "rw"
    shortdesc = '''When enabled, dithering of the write-back data is performed using Bayer ordered dithering.'''
    longdesc = '''Dithering is only possible when FP_TILEBUF_ENABLE is off. Note: Dithering only is supported when the tilebuffer is not downsampled more than a factor of four in either dimension, that is, the tilebuffer size is not less than 4x4 pixels.'''
  [[register.field]]
    name = "WB2_INV_COMPONENT_ORDER_ENABLE"
    bits = "3"
    type = "rw"
    shortdesc = '''When enabled, color formats get the order of their components inverted, for example: RGBA -> ARGB.'''
    longdesc = '''This, together with WB2_SWAP_RED_BLUE_ENABLE makes it possible to support different component permutations of WB2_TARGET_PIXEL_FORMAT.'''
  [[register.field]]
    name = "WB2_SWAP_RED_BLUE_ENABLE"
    bits = "2"
    type = "rw"
    shortdesc = '''When enabled, color formats get their red and blue components swapped, for example: RGBA->BGRA.'''
    longdesc = '''This, together with WB2_INV_COMPONENT_ORDER_ENABLE makes it possible to support different component permutations of WB2_TARGET_PIXEL_FORMAT.'''
  [[register.field]]
    name = "WB2_BOUNDING_BOX_ENABLE"
    bits = "1"
    type = "rw"
  [[register.field]]
    name = "WB2_DIRTY_BIT_ENABLE"
    bits = "0"
    type = "rw"
[[register]]
  name = "PP0_WB2_MRT_ENABLE"
  type = "rw"
  width = 32
  description = "WB2 MRT Enable Register"
  default = "0x00000000"
  offset = "0x0000831C"
  [[register.field]]
    name = "WB2_MRT_ENABLE"
    bits = "3:0"
    type = "rw"
[[register]]
  name = "PP0_WB2_MRT_OFFSET"
  type = "rw"
  width = 32
  description = "WB2 MRT Offset Register"
  default = "0x00000000"
  offset = "0x00008320"
  [[register.field]]
    name = "WB2_MRT_OFFSET"
    bits = "31:3"
    type = "rw"
  [[register.field]]
    name = "RESERVED"
    bits = "2:0"
    type = "rw"
[[register]]
  name = "PP0_WB2_GLOBAL_TEST_ENABLE"
  type = "rw"
  width = 32
  description = "WB2 Global Test Enable Register"
  default = "0x00000000"
  offset = "0x00008324"
  [[register.field]]
    name = "RESERVED"
    bits = "31:1"
    type = "rw"
  [[register.field]]
    name = "WB2_GLOBAL_TEST_ENABLE"
    bits = "0"
    type = "rw"
[[register]]
  name = "PP0_WB2_GLOBAL_TEST_REF_VALUE"
  type = "rw"
  width = 32
  description = "WB2 Global Test Reference Value Register"
  default = "0x00000000"
  offset = "0x00008328"
  [[register.field]]
    name = "RESERVED"
    bits = "31:16"
    type = "rw"
[[register]]
  name = "PP0_WB2_GLOBAL_TEST_CMP_FUNC"
  type = "rw"
  width = 32
  description = "WB2 Global Test Compare Function Register"
  default = "0x00000000"
  offset = "0x0000832C"
  [[register.field]]
    name = "RESERVED"
    bits = "31:3"
    type = "rw"
[[register]]
  name = "PP0_VERSION"
  type = "ro"
  width = 32
  description = "Version Register"
  default = "0x00CD0007"
  offset = "0x00009000"
  [[register.field]]
    name = "PRODUCT_ID"
    bits = "31:16"
    type = "ro"
  [[register.field]]
    name = "VERSION_MAJOR"
    bits = "15:8"
    type = "ro"
  [[register.field]]
    name = "VERSION_MINOR"
    bits = "7:0"
    type = "ro"
[[register]]
  name = "PP0_CURRENT_REND_LIST_ADDR"
  type = "rw"
  width = 32
  description = "Current Renderer List Address Register"
  default = "0x00000000"
  offset = "0x00009004"
  [[register.field]]
    name = "CURRENT_REND_LIST_ADDR"
    bits = "31:5"
    type = "rw"
  [[register.field]]
    name = "RESERVED"
    bits = "4:0"
    type = "rw"
[[register]]
  name = "PP0_STATUS"
  type = "rw"
  width = 32
  description = "Pixel Processor Status Register"
  default = "0x00000000"
  offset = "0x00009008"
  [[register.field]]
    name = "RESERVED"
    bits = "31:8"
    type = "rw"
  [[register.field]]
    name = "CLK_OVERRIDE"
    bits = "7"
    type = "rw"
    shortdesc = '''Shows that the block level clock gates have been disabled.'''
    longdesc = '''This bit is set by the CLK_OVERRIDE command in the CTRL_MGMT Register. When this bit is set, all the architectural clock gates in the design are overridden so all clocks are always active.'''
  [[register.field]]
    name = "INTERRUPT_ASSERTED"
    bits = "6"
    type = "rw"
  [[register.field]]
    name = "WRITE_BOUNDARY_ERROR"
    bits = "5"
    type = "rw"
  [[register.field]]
    name = "BUS_STOPPED"
    bits = "4"
    type = "rw"
    shortdesc = '''Shows that the master bus interface of the pixel processor has been stopped because of a STOP_BUS command or a performance counter limit event.'''
    longdesc = '''The bus interface can be restarted by using the START_BUS command.'''
  [[register.field]]
    name = "BUS_ERROR"
    bits = "3"
    type = "rw"
    shortdesc = '''A bus transaction has ended with error.'''
    longdesc = '''The pixel processor has been stopped and has to be reset before rendering can be started again.'''
  [[register.field]]
    name = "HANG"
    bits = "2"
    type = "rw"
    shortdesc = '''Watchdog timer limit reached.'''
    longdesc = '''This state can also be triggered under normal rendering if you are running a shader where it is near to a never-ending inner loop. From the software perspective, you can ignore this state, because this is merely a hint from the HW that something might be wrong. The SW then decides to either reset the processor, or continue to let it run.'''
  [[register.field]]
    name = "TILE_STOPPED"
    bits = "1"
    type = "rw"
    shortdesc = '''Rendering of the current tile has been completed as if it was the last tile of the frame.'''
    longdesc = '''Indicates that an END_AFTER_TILE command has been issued.'''
  [[register.field]]
    name = "RENDERING_ACTIVE"
    bits = "0"
    type = "rw"
[[register]]
  name = "PP0_CTRL_MGMT"
  type = "wo"
  width = 32
  description = "Control Management Register"
  default = "0x00000000"
  offset = "0x0000900C"
  [[register.field]]
    name = "CLK_OVERRIDE"
    bits = "8"
    type = "wo"
    shortdesc = '''Disable block level clock gates.'''
    longdesc = '''Writing a 1 to this bit overrides all the architectural clock gates in the design, so all clocks are always active. The status of the clock override is shown as the CLK_OVERRIDE bit in the STATUS Register. The only way to disable the clock override is by performing a pixel processor reset.'''
  [[register.field]]
    name = "SOFT_RESET"
    bits = "7"
    type = "wo"
    shortdesc = '''Writing to this bit resets the pixel processor after all outstanding bus-transfers have completed.'''
    longdesc = '''Use the RESET_COMPLETED interrupt bit to discover when the reset has actually completed.'''
  [[register.field]]
    name = "START_RENDERING"
    bits = "6"
    type = "wo"
    shortdesc = '''Writing to this bit initiates rendering.'''
    longdesc = '''Do not write this value during rendering.'''
  [[register.field]]
    name = "FORCE_RESET"
    bits = "5"
    type = "wo"
    shortdesc = '''Writing to this bit resets the pixel processor, so that it can be brought out of a hang in a reasonably clean manner.'''
    longdesc = '''If FORCE_RESET is asserted while there is a bus transaction in progress the AXI interconnect might operate at reduced efficiency or lockup. To ensure a safe reset: 1. Write 1 to STOP_BUS. 2. Wait until all transactions have completed. The BUS_STOP interrupt is asserted when the bus is idle. 3. Write 1 to FORCE_RESET. The use of FORCE_RESET must be deprecated, unless you require backwards compatibility with Mali-200.'''
  [[register.field]]
    name = "FORCE_HANG"
    bits = "4"
    type = "wo"
    shortdesc = '''Writing to this bit causes the pixel processor to hang.'''
    longdesc = '''Only useful for debugging.'''
  [[register.field]]
    name = "FLUSH_CACHES"
    bits = "3"
    type = "wo"
    shortdesc = '''Writing to this bit causes all the vertex, RSW and texture caches to be flushed immediately.'''
    longdesc = '''This must be done only when the renderer is idle, otherwise the hardware cannot guarantee that caches become clean or that renderer glitches do not occur. The pixel processor must have an active clock for the flush to have an effect. The pixel processor might have the clock shut off when idle to conserve power, depending on the processor integration. This means that the FLUSH_CACHES command must be issued in of the following states of operation: 1. At the beginning of a frame, after the APB registers have been written to, but before the START_RENDERING command has been issued. 2. At the end of a frame, after the interrupt has been received but before the interrupt signal has been masked or acknowledged. If neither is possible, you can use a FORCE_RESET command to flush the caches. FLUSH_CACHES is performed implicitly every time the pixel processor starts rendering, so explicitly using this bit is rarely required.'''
  [[register.field]]
    name = "END_AFTER_TILE"
    bits = "2"
    type = "wo"
    shortdesc = '''Writing to this bit causes the renderer to treat a BEGIN-NEW-TILE command, that is, Cmd 14, as an End-Of-List command, that is Cmd 15.'''
    longdesc = '''This action finalizes the rendering of the current tile, leaving the framebuffer incomplete in most situations, except when the current tile is the last tile of the frame. Rendering of the rest of the frame can be initiated by writing the CURRENT_REND_LIST_ADDR value to the REND_LIST_ADDR Register and issuing the START_RENDERING command.'''
  [[register.field]]
    name = "START_BUS"
    bits = "1"
    type = "wo"
    shortdesc = '''Writing to this bit reactivates the bus interface after it has been stopped by a STOP_BUS command or a WRITE_BOUNDARY_LIMIT event.'''
    longdesc = '''The effect of issuing a START_BUS and a STOP_BUS command at the same time is not defined.'''
  [[register.field]]
    name = "STOP_BUS"
    bits = "0"
    type = "wo"
    shortdesc = '''Writing to this bit causes the bus interface to hold back future transactions on the bus.'''
    longdesc = '''Any current bus transactions are completed before the interface is stopped. The bus can be restarted by issuing a START_BUS command. The effect of issuing a START_BUS and a STOP_BUS command at the same time is not defined.'''
[[register]]
  name = "PP0_LAST_TILE_POS_START"
  type = "ro"
  width = 32
  description = "Last Tile Where Processing Started Register"
  default = "0x00000000"
  offset = "0x00009010"
  [[register.field]]
    name = "RESERVED"
    bits = "31:24"
    type = "ro"
  [[register.field]]
    name = "TILEY_START"
    bits = "23:16"
    type = "ro"
    shortdesc = '''The y position of the last file that processing has begun.'''
    longdesc = '''Note: Scaling is equal to that of the Begin New Tile command 15 in the polygon list.'''
  [[register.field]]
    name = "RESERVED"
    bits = "15:8"
    type = "ro"
  [[register.field]]
    name = "TILEX_START"
    bits = "7:0"
    type = "ro"
    shortdesc = '''The x position of the last file that processing has begun.'''
    longdesc = '''Note: Scaling is equal to that of the Begin New Tile command 15 in the polygon list.'''
[[register]]
  name = "PP0_LAST_TILE_POS_END"
  type = "ro"
  width = 32
  description = "Last Tile Where Processing Completed Register"
  default = "0x00000000"
  offset = "0x00009014"
  [[register.field]]
    name = "RESERVED"
    bits = "31:24"
    type = "ro"
  [[register.field]]
    name = "TILEY_END"
    bits = "23:16"
    type = "ro"
    shortdesc = '''The y position of the last tile that processing has ended, that is written back.'''
    longdesc = '''Note: Scaling is equal to that of the Begin New Tile command 15 in the polygon list.'''
  [[register.field]]
    name = "RESERVED"
    bits = "15:8"
    type = "ro"
  [[register.field]]
    name = "TILEX_END"
    bits = "7:0"
    type = "ro"
    shortdesc = '''The x position of the last tile that processing has ended, that is written back.'''
    longdesc = '''Note: Scaling is equal to that of the Begin New Tile command 15 in the polygon list.'''
[[register]]
  name = "PP0_INT_RAWSTAT"
  type = "rw"
  width = 32
  description = "Interrupt Rawstat Register"
  default = "0x00001000"
  offset = "0x00009020"
  [[register.field]]
    name = "RESERVED"
    bits = "31:13"
    type = "rw"
  [[register.field]]
    name = "RESET_COMPLETED"
    bits = "12"
    type = "rw"
  [[register.field]]
    name = "CALL_STACK_OVERFLOW"
    bits = "11"
    type = "rw"
    shortdesc = '''The polygon list command call has been executed to many times recursively.'''
    longdesc = '''It is treated as an end of list command and rendering stops.'''
  [[register.field]]
    name = "CALL_STACK_UNDERFLOW"
    bits = "10"
    type = "rw"
    shortdesc = '''The polygon list command return was executed without a call first.'''
    longdesc = '''The return command is then treated as an end of list command and rendering stops.'''
  [[register.field]]
    name = "INVALID_PLIST_COMMAND"
    bits = "9"
    type = "rw"
    shortdesc = '''A command in the polygon list was invalid and rendering could not continue.'''
    longdesc = '''The invalid command is treated as an end of list command.'''
  [[register.field]]
    name = "WRITE_BOUNDARY_ERROR"
    bits = "8"
    type = "rw"
    shortdesc = '''The pixel processor has attempted to write outside the write boundary set by the WRITE_BOUNDARY registers.'''
    longdesc = '''The bus interface completes the previous bus transaction but does not initialize any new transactions before the WRITE_BOUNDARY is modified or disabled, or the renderer is reset.'''
  [[register.field]]
    name = "CNT_1_LIMIT"
    bits = "7"
    type = "rw"
    shortdesc = '''Performance counter PERF_CNT_1 has passed the limit set in PERF_CNT_1_LIMIT.'''
    longdesc = '''The bus interface is stopped as with STOP_BUS, and this interrupt source set. The BUS_STOP interrupt is asserted when the bus is actually stopped. This is likely to occur after CNT_1_LIMIT has been triggered.'''
  [[register.field]]
    name = "CNT_0_LIMIT"
    bits = "6"
    type = "rw"
    shortdesc = '''Performance counter PERF_CNT_0 has passed the limit set in PERF_CNT_0_LIMIT.'''
    longdesc = '''The bus interface is stopped as with STOP_BUS, and this interrupt source set. The BUS_STOP interrupt is asserted when the bus is actually stopped. This is likely to occur after CNT_0_LIMIT has been triggered.'''
  [[register.field]]
    name = "BUS_STOP"
    bits = "5"
    type = "rw"
    shortdesc = '''The renderer has been stopped by a STOP_BUS command.'''
    longdesc = '''BUS_STOP is triggered only after the bus is actually stopped, making it likely that BUS_STOP is delayed a bit after CNT_x_LIMIT has been triggered. Operation can be continued by issuing the START_BUS command.'''
  [[register.field]]
    name = "BUS_ERROR"
    bits = "4"
    type = "rw"
    shortdesc = '''A bus transaction has ended with error.'''
    longdesc = '''The pixel processor has been stopped and has to be reset before rendering can be started again.'''
  [[register.field]]
    name = "FORCE_HANG"
    bits = "3"
    type = "rw"
    shortdesc = '''The pixel processor has been forced into an illegal state by the FORCE_HANG command.'''
    longdesc = '''The renderer must be reset before rendering can be started again.'''
  [[register.field]]
    name = "HANG"
    bits = "2"
    type = "rw"
    shortdesc = '''Watchdog timer limit reached.'''
    longdesc = '''This state can also be triggered under normal rendering if you are running a shader where it is near to a never-ending inner loop. From the software perspective, you can ignore this state, because this is merely a hint from the HW that something might be wrong. The SW then decides to either reset the processor, or continue to let it run.'''
  [[register.field]]
    name = "END_OF_TILE"
    bits = "1"
    type = "rw"
    shortdesc = '''Rendering has been ended by an END_AFTER_TILE command.'''
    longdesc = '''The framebuffer might be incomplete.'''
  [[register.field]]
    name = "END_OF_FRAME"
    bits = "0"
    type = "rw"
    shortdesc = '''Rendering has ended by completion of the polygon list.'''
    longdesc = '''The framebuffer is complete. The interrupt is delayed until all outstanding write requests have completed.'''
[[register]]
  name = "PP0_INT_CLEAR"
  type = "wo"
  width = 32
  description = "Interrupt Clear Register"
  default = "0x00000000"
  offset = "0x00009024"
  [[register.field]]
    name = "RESERVED"
    bits = "31:13"
    type = "wo"
  [[register.field]]
    name = "RESET_COMPLETED"
    bits = "12"
    type = "wo"
  [[register.field]]
    name = "CALL_STACK_OVERFLOW"
    bits = "11"
    type = "wo"
  [[register.field]]
    name = "CALL_STACK_UNDERFLOW"
    bits = "10"
    type = "wo"
  [[register.field]]
    name = "INVALID_PLIST_COMMAND"
    bits = "9"
    type = "wo"
  [[register.field]]
    name = "WRITE_BOUNDARY_ERROR"
    bits = "8"
    type = "wo"
  [[register.field]]
    name = "CNT_1_LIMIT"
    bits = "7"
    type = "wo"
  [[register.field]]
    name = "CNT_0_LIMIT"
    bits = "6"
    type = "wo"
  [[register.field]]
    name = "BUS_STOP"
    bits = "5"
    type = "wo"
  [[register.field]]
    name = "BUS_ERROR"
    bits = "4"
    type = "wo"
  [[register.field]]
    name = "FORCE_HANG"
    bits = "3"
    type = "wo"
  [[register.field]]
    name = "HANG"
    bits = "2"
    type = "wo"
  [[register.field]]
    name = "END_OF_TILE"
    bits = "1"
    type = "wo"
  [[register.field]]
    name = "END_OF_FRAME"
    bits = "0"
    type = "wo"
[[register]]
  name = "PP0_INT_MASK"
  type = "rw"
  width = 32
  description = "Interrupt Mask Register"
  default = "0x00000FFF"
  offset = "0x00009028"
  [[register.field]]
    name = "RESERVED"
    bits = "31:13"
    type = "rw"
  [[register.field]]
    name = "RESET_COMPLETED"
    bits = "12"
    type = "rw"
  [[register.field]]
    name = "CALL_STACK_OVERFLOW"
    bits = "11"
    type = "rw"
  [[register.field]]
    name = "CALL_STACK_UNDERFLOW"
    bits = "10"
    type = "rw"
  [[register.field]]
    name = "INVALID_PLIST_COMMAND"
    bits = "9"
    type = "rw"
  [[register.field]]
    name = "WRITE_BOUNDARY_ERROR"
    bits = "8"
    type = "rw"
  [[register.field]]
    name = "CNT_1_LIMIT"
    bits = "7"
    type = "rw"
  [[register.field]]
    name = "CNT_0_LIMIT"
    bits = "6"
    type = "rw"
  [[register.field]]
    name = "BUS_STOP"
    bits = "5"
    type = "rw"
  [[register.field]]
    name = "BUS_ERROR"
    bits = "4"
    type = "rw"
  [[register.field]]
    name = "FORCE_HANG"
    bits = "3"
    type = "rw"
  [[register.field]]
    name = "HANG"
    bits = "2"
    type = "rw"
  [[register.field]]
    name = "END_OF_TILE"
    bits = "1"
    type = "rw"
  [[register.field]]
    name = "END_OF_FRAME"
    bits = "0"
    type = "rw"
[[register]]
  name = "PP0_INT_STATUS"
  type = "rw"
  width = 32
  description = "Interrupt Status Register"
  default = "0x00001000"
  offset = "0x0000902C"
  [[register.field]]
    name = "RESET_COMPLETED"
    bits = "12"
    type = "rw"
  [[register.field]]
    name = "CALL_STACK_OVERFLOW"
    bits = "11"
    type = "rw"
  [[register.field]]
    name = "CALL_STACK_UNDERFLOW"
    bits = "10"
    type = "rw"
  [[register.field]]
    name = "INVALID_PLIST_COMMAND"
    bits = "9"
    type = "rw"
  [[register.field]]
    name = "WRITE_BOUNDARY_ERROR"
    bits = "8"
    type = "rw"
  [[register.field]]
    name = "CNT_1_LIMIT"
    bits = "7"
    type = "rw"
  [[register.field]]
    name = "CNT_0_LIMIT"
    bits = "6"
    type = "rw"
  [[register.field]]
    name = "BUS_STOP"
    bits = "5"
    type = "rw"
  [[register.field]]
    name = "BUS_ERROR"
    bits = "4"
    type = "rw"
  [[register.field]]
    name = "FORCE_HANG"
    bits = "3"
    type = "rw"
  [[register.field]]
    name = "HANG"
    bits = "2"
    type = "rw"
  [[register.field]]
    name = "END_OF_TILE"
    bits = "1"
    type = "rw"
  [[register.field]]
    name = "END_OF_FRAME"
    bits = "0"
    type = "rw"
[[register]]
  name = "PP0_WRITE_BOUNDARY_ENABLE"
  type = "rw"
  width = 32
  description = "Write Boundary Enable Register"
  default = "0x00000000"
  offset = "0x00009040"
  [[register.field]]
    name = "RESERVED"
    bits = "31:1"
    type = "rw"
[[register]]
  name = "PP0_WRITE_BOUNDARY_LOW"
  type = "rw"
  width = 32
  description = "Write Boundary Low Register"
  default = "0x00000000"
  offset = "0x00009044"
  [[register.field]]
    name = "WRITE_BOUNDARY_LOW"
    bits = "31:8"
    type = "rw"
  [[register.field]]
    name = "RESERVED"
    bits = "7:0"
    type = "rw"
[[register]]
  name = "PP0_WRITE_BOUNDARY_HIGH"
  type = "rw"
  width = 32
  description = "Write Boundary High Register"
  default = "0x00000000"
  offset = "0x00009048"
  [[register.field]]
    name = "WRITE_BOUNDARY_HIGH"
    bits = "31:8"
    type = "rw"
  [[register.field]]
    name = "RESERVED"
    bits = "7:0"
    type = "rw"
[[register]]
  name = "PP0_WRITE_BOUNDARY_ADDRESS"
  type = "rw"
  width = 32
  description = "Write Boundary Address Register"
  default = "0x00000000"
  offset = "0x0000904C"
  [[register.field]]
    name = "WRITE_BOUNDARY_ADDRESS"
    bits = "31:2"
    type = "rw"
  [[register.field]]
    name = "RESERVED"
    bits = "1:0"
    type = "rw"
[[register]]
  name = "PP0_BUS_ERROR_STATUS"
  type = "rw"
  width = 32
  description = "Bus Error Status Register"
  default = "0x00000000"
  offset = "0x00009050"
  [[register.field]]
    name = "RESERVED"
    bits = "31:10"
    type = "rw"
  [[register.field]]
    name = "READ_ERROR_ID"
    bits = "9:6"
    type = "rw"
  [[register.field]]
    name = "WRITE_ERROR_ID"
    bits = "5:2"
    type = "rw"
  [[register.field]]
    name = "READ_ERROR"
    bits = "1"
    type = "rw"
  [[register.field]]
    name = "WRITE_ERROR"
    bits = "0"
    type = "rw"
[[register]]
  name = "PP0_WATCHDOG_DISABLE"
  type = "rw"
  width = 32
  description = "Watchdog Disable Register"
  default = "0x00000000"
  offset = "0x00009060"
  [[register.field]]
    name = "RESERVED"
    bits = "31:1"
    type = "rw"
[[register]]
  name = "PP0_WATCHDOG_TIMEOUT"
  type = "rw"
  width = 32
  description = "Watchdog Timeout Register"
  default = "0x00000000"
  offset = "0x00009064"
  [[register.field]]
    name = "WATCHDOG_TIMEOUT"
    bits = "31:0"
    type = "rw"
[[register]]
  name = "PP0_PERF_CNT_0_ENABLE"
  type = "rw"
  width = 32
  description = "Performance Counter 0 Enable Register"
  default = "0x00000000"
  offset = "0x00009080"
  [[register.field]]
    name = "RESERVED"
    bits = "31:2"
    type = "rw"
  [[register.field]]
    name = "PERF_CNT_0_LIM_EN"
    bits = "1"
    type = "rw"
    shortdesc = '''When set to 1, the PERF_CNT_0_LIMIT Register becomes active.'''
    longdesc = '''If the PERF_CNT_0_VALUE Register exceeds the Performance Counter 0 Limit value, then an interrupt is asserted and the BUS_STOPPED mechanism stops the bus. The PERF_CNT_0_VALUE Register is reset to zero if you write to PERF_CNT_0_ENABLE while the counter is enabled, that is, the PERF_CNT_0_ENABLE bit is 1.'''
  [[register.field]]
    name = "PERF_CNT_0_ENABLE"
    bits = "0"
    type = "rw"
    shortdesc = '''When set to 1, the performance counter 0 is reset to zero and activated.'''
    longdesc = '''The PERF_CNT_0_SRC Register selects the event to be counted during a frame.'''
[[register]]
  name = "PP0_PERF_CNT_0_SRC"
  type = "rw"
  width = 32
  description = "Performance Counter 0 SRC Register"
  default = "0x00000000"
  offset = "0x00009084"
  [[register.field]]
    name = "RESERVED"
    bits = "31:6"
    type = "rw"
  [[register.field]]
    name = "PERF_CNT_0_SRC"
    bits = "5:0"
    type = "rw"
[[register]]
  name = "PP0_PERF_CNT_0_LIMIT"
  type = "rw"
  width = 32
  description = "Performance Counter 0 Limit Register"
  default = "0x00000000"
  offset = "0x00009088"
  [[register.field]]
    name = "PERF_CNT_0_LIMIT"
    bits = "31:0"
    type = "rw"
[[register]]
  name = "PP0_PERF_CNT_0_VALUE"
  type = "rw"
  width = 32
  description = "Performance Counter 0 Value Register"
  default = "0x00000000"
  offset = "0x0000908C"
  [[register.field]]
    name = "PERF_CNT_0_VALUE"
    bits = "31:0"
    type = "rw"
[[register]]
  name = "PP0_PERF_CNT_1_ENABLE"
  type = "rw"
  width = 32
  description = "Performance Counter 0 Enable Register"
  default = "0x00000000"
  offset = "0x000090A0"
  [[register.field]]
    name = "RESERVED"
    bits = "31:2"
    type = "rw"
  [[register.field]]
    name = "PERF_CNT_1_LIM_EN"
    bits = "1"
    type = "rw"
    shortdesc = '''When set to 1, the PERF_CNT_1_LIMIT Register becomes active.'''
    longdesc = '''If the PERF_CNT_1_VALUE Register exceeds the Performance Counter 1 limit value, then an interrupt is asserted and the BUS_STOPPED mechanism stops the bus. The PERF_CNT_1_VALUE Register is reset to zero if you write to PERF_CNT_1_ENABLE while the counter is enabled, that is, the PERF_CNT_1_ENABLE bit is 1.'''
  [[register.field]]
    name = "PERF_CNT_1_ENABLE"
    bits = "0"
    type = "rw"
    shortdesc = '''When set to 1, the performance counter 1 is reset to zero and activated.'''
    longdesc = '''The PERF_CNT_1_SRC Register selects the event to be counted during a frame.'''
[[register]]
  name = "PP0_PERF_CNT_1_SRC"
  type = "rw"
  width = 32
  description = "Performance Counter 1 SRC Register"
  default = "0x00000000"
  offset = "0x000090A4"
  [[register.field]]
    name = "RESERVED"
    bits = "31:6"
    type = "rw"
  [[register.field]]
    name = "PERF_CNT_1_SRC"
    bits = "5:0"
    type = "rw"
[[register]]
  name = "PP0_PERF_CNT_1_LIMIT"
  type = "rw"
  width = 32
  description = "Performance Counter 1 Limit Register"
  default = "0x00000000"
  offset = "0x000090A8"
  [[register.field]]
    name = "PERF_CNT_1_LIMIT"
    bits = "31:0"
    type = "rw"
[[register]]
  name = "PP0_PERF_CNT_1_VALUE"
  type = "rw"
  width = 32
  description = "Performance Counter 1 Value Register"
  default = "0x00000000"
  offset = "0x000090AC"
  [[register.field]]
    name = "PERF_CNT_1_VALUE"
    bits = "31:26"
    type = "rw"
[[register]]
  name = "PP0_PERFMON_CONTR"
  type = "rw"
  width = 32
  description = "Performance Monitor Control Register"
  default = "0x00000000"
  offset = "0x000090B0"
  [[register.field]]
    name = "RESERVED"
    bits = "31:26"
    type = "rw"
  [[register.field]]
    name = "NUMBER_TILE_X_DIR"
    bits = "25:16"
    type = "rw"
  [[register.field]]
    name = "RESERVED"
    bits = "15:1"
    type = "rw"
  [[register.field]]
    name = "PERFMON_ENABLE"
    bits = "0"
    type = "rw"
[[register]]
  name = "PP0_PERFMON_BASE"
  type = "rw"
  width = 32
  description = "Performance Monitor Base Address Register"
  default = "0x00000000"
  offset = "0x000090B4"
  [[register.field]]
    name = "RESERVED"
    bits = "2:0"
    type = "rw"
[[register]]
  name = "PP1_REND_LIST_ADDR"
  type = "rw"
  width = 32
  description = "Renderer List Address Register"
  default = "0x00000000"
  offset = "0x0000A000"
  [[register.field]]
    name = "REND_LIST_ADDR"
    bits = "31:3"
    type = "rw"
[[register]]
  name = "PP1_REND_RSW_BASE"
  type = "rw"
  width = 32
  description = "Renderer State Word Base Address Register"
  default = "0x00000000"
  offset = "0x0000A004"
  [[register.field]]
    name = "REND_RSW_BASE"
    bits = "31:6"
    type = "rw"
[[register]]
  name = "PP1_REND_VERTEX_BASE"
  type = "rw"
  width = 32
  description = "Renderer Vertex Base Register"
  default = "0x00000000"
  offset = "0x0000A008"
  [[register.field]]
    name = "REND_VERTEX_BASE"
    bits = "31:6"
    type = "rw"
[[register]]
  name = "PP1_FEATURE_ENABLE"
  type = "rw"
  width = 32
  description = "Feature Enable Register"
  default = "0x00000000"
  offset = "0x0000A00C"
  [[register.field]]
    name = "RESERVED"
    bits = "31:7"
    type = "rw"
  [[register.field]]
    name = "SUMMATE_QUAD_COVER"
    bits = "6"
    type = "rw"
    shortdesc = '''When set to 1, the coverage-to-alpha operates on a 2x2 fragment quad, and not individual fragments.'''
    longdesc = '''This means that all 16 samples from a 2x2 quad are counted and converted to an alpha between 0.0 (0 samples) and 1.0 (16 samples), and that the alpha value is set for all the fragments in the 2x2 fragment quad.'''
  [[register.field]]
    name = "ORIGIN_LOWER_LEFT"
    bits = "5"
    type = "rw"
    shortdesc = '''This feature is still functional but deprecated, use Scaling Register on page 3-44 FLIP_FRAGOORD bit instead.'''
    longdesc = '''The ORIGIN_LOWER_LEFT bit indicates whether the coordinate system for the screen XY position has its origin in the upper-left corner, y-axis increasing downwards or to lower-left corner, y-axis increasing upwards. The only hardware function that is currently affected by this bit is the Position Register function, and tile indices. The pixel processor considers the upper-left corner to be the origin. This bit must be set for use with OpenGL.'''
  [[register.field]]
    name = "EARLYZ_DISABLE2"
    bits = "4"
    type = "rw"
    shortdesc = '''Setting this bit disables the second of two Early-Z mechanisms.'''
    longdesc = '''Only use for debugging. For normal use, enable or disable Early-Z with the EARLYZ_ENABLE bit.'''
  [[register.field]]
    name = "EARLYZ_DISABLE1"
    bits = "3"
    type = "rw"
    shortdesc = '''Setting this bit disables the first of two Early-Z mechanisms.'''
    longdesc = '''Only use for debugging. For normal use, enable or disable Early-Z with the EARLYZ_ENABLE bit.'''
  [[register.field]]
    name = "RESERVED"
    bits = "2"
    type = "rw"
  [[register.field]]
    name = "EARLYZ_ENABLE"
    bits = "1"
    type = "rw"
    shortdesc = '''Setting this bit to 1 enables the Early Z-test mechanism in the rasterizer.'''
    longdesc = '''EarlyZ is enabled by default. Enabling this test increases the performance in high-overdraw situations by performing multiple Z-tests per clock at the rasterizer level. The Early Z-test is not effective on Greater-Than depth test functions.'''
  [[register.field]]
    name = "FP_TILEBUF_ENABLE"
    bits = "0"
    type = "rw"
    shortdesc = '''Setting this bit to 1 sets the tile buffer to FP16 (1:5:10) component format instead of 8-bit component format.'''
    longdesc = '''Enabling this feature has the following consequences: * multiple render targets cannot be used * internal multi-sampling or super-sampling anti-aliasing cannot be used * external write-back anti-aliasing technique cannot be used.'''
[[register]]
  name = "PP1_Z_CLEAR_VALUE"
  type = "rw"
  width = 32
  description = "Z Clear Value Register"
  default = "0x00000000"
  offset = "0x0000A010"
  [[register.field]]
    name = "RESERVED"
    bits = "31:24"
    type = "rw"
  [[register.field]]
    name = "Z_CLEAR_VALUE"
    bits = "23:0"
    type = "rw"
    shortdesc = '''The 24-bit depth value of the Z tile buffer is logically cleared whenever processing of a new tile starts.'''
    longdesc = '''If you do not want the Z tile buffer to be cleared, the content of the Z tile buffer can be pre-loaded by using a textured quad and Z-replacement technique. For more information see the explanation of subword 3 in Render state word data structures on page 3-132. See also Table 3-231 on page 3-181 and the corresponding description of texel format value 50.'''
[[register]]
  name = "PP1_STENCIL_CLEAR_VALUE"
  type = "rw"
  width = 32
  description = "Stencil Clear Value Register"
  default = "0x00000000"
  offset = "0x0000A014"
  [[register.field]]
    name = "RESERVED"
    bits = "31:8"
    type = "rw"
  [[register.field]]
    name = "STENCIL_CLEAR_VALUE"
    bits = "7:0"
    type = "rw"
    shortdesc = '''The 8-bit stencil value of the stencil tile buffer is logically cleared whenever processing of a new tile starts.'''
    longdesc = '''If you do not want the stencil tile buffer to be cleared, the content of the stencil tile buffer can be pre-loaded by using a textured quad and stencil replacement technique. For more information see the explanation of subword 3 in Render state word data structures on page 3-132. See also Table 3-231 on page 3-181 and the corresponding description of texel format value 50.'''
[[register]]
  name = "PP1_ABGR_CLEAR_VALUE_0"
  type = "rw"
  width = 32
  description = "ABGR Clear Value 0 Register"
  default = "0x00000000"
  offset = "0x0000A018"
  [[register.field]]
    name = "ALPHA_CLEAR_VALUE"
    bits = "31:24"
    type = "rw"
  [[register.field]]
    name = "BLUE_CLEAR_VALUE"
    bits = "23:16"
    type = "rw"
  [[register.field]]
    name = "GREEN_CLEAR_VALUE"
    bits = "15:8"
    type = "rw"
  [[register.field]]
    name = "RED_CLEAR_VALUE"
    bits = "7:0"
    type = "rw"
[[register]]
  name = "PP1_ABGR_CLEAR_VALUE_1"
  type = "rw"
  width = 32
  description = "ABGR Clear Value 1 Register"
  default = "0x00000000"
  offset = "0x0000A01C"
  [[register.field]]
    name = "ALPHA_CLEAR_VALUE"
    bits = "31:24"
    type = "rw"
  [[register.field]]
    name = "BLUE_CLEAR_VALUE"
    bits = "23:16"
    type = "rw"
  [[register.field]]
    name = "GREEN_CLEAR_VALUE"
    bits = "15:8"
    type = "rw"
  [[register.field]]
    name = "RED_CLEAR_VALUE"
    bits = "7:0"
    type = "rw"
[[register]]
  name = "PP1_ABGR_CLEAR_VALUE_2"
  type = "rw"
  width = 32
  description = "ABGR Clear Value 2 Register"
  default = "0x00000000"
  offset = "0x0000A020"
  [[register.field]]
    name = "ALPHA_CLEAR_VALUE"
    bits = "31:24"
    type = "rw"
  [[register.field]]
    name = "BLUE_CLEAR_VALUE"
    bits = "23:16"
    type = "rw"
  [[register.field]]
    name = "GREEN_CLEAR_VALUE"
    bits = "15:8"
    type = "rw"
  [[register.field]]
    name = "RED_CLEAR_VALUE"
    bits = "7:0"
    type = "rw"
[[register]]
  name = "PP1_ABGR_CLEAR_VALUE_3"
  type = "rw"
  width = 32
  description = "ABGR Clear Value 3 Register"
  default = "0x00000000"
  offset = "0x0000A024"
  [[register.field]]
    name = "ALPHA_CLEAR_VALUE"
    bits = "31:24"
    type = "rw"
  [[register.field]]
    name = "BLUE_CLEAR_VALUE"
    bits = "23:16"
    type = "rw"
  [[register.field]]
    name = "GREEN_CLEAR_VALUE"
    bits = "15:8"
    type = "rw"
  [[register.field]]
    name = "RED_CLEAR_VALUE"
    bits = "7:0"
    type = "rw"
[[register]]
  name = "PP1_BOUNDING_BOX_LEFT_RIGHT"
  type = "rw"
  width = 32
  description = "Bounding Box Left Right Register"
  default = "0x00000000"
  offset = "0x0000A028"
  [[register.field]]
    name = "RESERVED"
    bits = "31:20"
    type = "rw"
  [[register.field]]
    name = "BOUNDING_BOX_LEFT"
    bits = "19:16"
    type = "rw"
    shortdesc = '''Bits [3:0] of the number of pixels from the left initial framebuffer edge to exclude from write-back, if the bounding box is honored.'''
    longdesc = '''Bits [13:4] are always 0. If a greater bounding box than 16 is required, the modulo 16 of the bounding box is placed in this register. The remaining part is subtracted from all vertices.'''
  [[register.field]]
    name = "RESERVED"
    bits = "15:14"
    type = "rw"
  [[register.field]]
    name = "BOUNDING_BOX_RIGHT"
    bits = "13:0"
    type = "rw"
[[register]]
  name = "PP1_BOUNDING_BOX_BOTTOM"
  type = "rw"
  width = 32
  description = "Bounding Box Bottom Register"
  default = "0x00000000"
  offset = "0x0000A02C"
  [[register.field]]
    name = "BOUNDING_BOX_BOTTOM"
    bits = "13:0"
    type = "rw"
[[register]]
  name = "PP1_FS_STACK_ADDR"
  type = "rw"
  width = 32
  description = "FS Stack Address Register"
  default = "0x00000000"
  offset = "0x0000A030"
  [[register.field]]
    name = "FS_STACK_ADDR"
    bits = "31:6"
    type = "rw"
[[register]]
  name = "PP1_FS_STACK_SIZE_AND_INIT_VAL"
  type = "rw"
  width = 32
  description = "FS Stack Size and Initial Value Register"
  default = "0x00000000"
  offset = "0x0000A034"
  [[register.field]]
    name = "FS_STACK_INIT_VAL"
    bits = "31:16"
    type = "rw"
    shortdesc = '''The initial value that the stack pointer is set to at the start of executing a fragment shader.'''
    longdesc = '''This is achieved by setting this field to a non-zero value to enable the main function of a fragment shader to have a stack frame. This register must be set to the size of the largest stack frame of the active fragment shader main function requirements. If the stack pointer is decremented to a value less than FS_STACK_INIT_VAL as a result of a function return, then the fragment shader terminates, and is considered to have executed successfully. This functionality enables the main-function to be recursive, as any other function.'''
  [[register.field]]
    name = "FS_STACK_SIZE"
    bits = "15:0"
    type = "rw"
    shortdesc = '''The fragment shader stack size in number of 8-byte elements that the fragment shader stack is permitted to contain.'''
    longdesc = '''The amount of memory that must be allocated for the fragment shader stack is 1KB x FS_STACK_SIZE. Note: The fragment shader requires 128 stacks to keep stack data for all active fragments in the pipeline. An increment of 1 unit in FS_STACK_SIZE means 8-byte elements for each stack for each fragment. This gives 8-byte x 128 stacks/fragment = 1024 bytes.'''
[[register]]
  name = "PP1_ORIGIN_OFFSET_X"
  type = "rw"
  width = 32
  description = "Origin Offset X Register"
  default = "0x00000000"
  offset = "0x0000A040"
  [[register.field]]
    name = "ORIGIN_OFFSET_X"
    bits = "15:0"
    type = "rw"
[[register]]
  name = "PP1_ORIGIN_OFFSET_Y"
  type = "rw"
  width = 32
  description = "Origin Offset Y Register"
  default = "0x00000000"
  offset = "0x0000A044"
  [[register.field]]
    name = "ORIGIN_OFFSET_Y"
    bits = "15:0"
    type = "rw"
[[register]]
  name = "PP1_SUBPIXEL_SPECIFIER"
  type = "rw"
  width = 32
  description = "Subpixel Specifier Register"
  default = "0x00000000"
  offset = "0x0000A048"
  [[register.field]]
    name = "SUBPIXEL_SPECIFIER"
    bits = "7:0"
    type = "rw"
    shortdesc = '''The default value is 117, and is 127 minus the number of subpixel bits.'''
    longdesc = '''Write to this register as follows: 117 for resolutions below 1024x1024 118 for resolutions between 1024x1024-2048x2048 119 for resolutions above 2048x2048 to guarantee robust rasterization.'''
[[register]]
  name = "PP1_TIEBREAK_MODE"
  type = "rw"
  width = 32
  description = "Tiebreak mode Register"
  default = "0x00000000"
  offset = "0x0000A04C"
  [[register.field]]
    name = "TIEBREAK_MODE"
    bits = "2:0"
    type = "rw"
[[register]]
  name = "PP1_PLIST_CONFIG"
  type = "rw"
  width = 32
  description = "Polygon List Format Register"
  default = "0x00000000"
  offset = "0x0000A050"
  [[register.field]]
    name = "RESERVED"
    bits = "31:30"
    type = "rw"
  [[register.field]]
    name = "LIST_FORMAT"
    bits = "29:28"
    type = "rw"
  [[register.field]]
    name = "RESERVED"
    bits = "27:22"
    type = "rw"
  [[register.field]]
    name = "SCALE_Y"
    bits = "21:16"
    type = "rw"
  [[register.field]]
    name = "RESERVED"
    bits = "15:6"
    type = "rw"
  [[register.field]]
    name = "SCALE_X"
    bits = "5:0"
    type = "rw"
[[register]]
  name = "PP1_SCALING_CONFIG"
  type = "rw"
  width = 32
  description = "Scaling Register"
  default = "0x00000000"
  offset = "0x0000A054"
  [[register.field]]
    name = "RESERVED"
    bits = "31:23"
    type = "rw"
  [[register.field]]
    name = "SCALE_Y"
    bits = "22:20"
    type = "rw"
  [[register.field]]
    name = "RESERVED"
    bits = "19"
    type = "rw"
  [[register.field]]
    name = "SCALE_X"
    bits = "18:16"
    type = "rw"
  [[register.field]]
    name = "RESERVED"
    bits = "15:12"
    type = "rw"
  [[register.field]]
    name = "FLIP_DERIVATIVE_Y"
    bits = "11"
    type = "rw"
    shortdesc = '''Flips the sign of the y derivative.'''
    longdesc = '''It changes the sign on the y-coordinate when using the derivative instruction in adder4 and adder1.'''
  [[register.field]]
    name = "FLIP_FRAGCOORD"
    bits = "10"
    type = "rw"
    shortdesc = '''Flips the coordinate system as read by fragcoord.'''
    longdesc = '''When set to 1, the xy-coordinate system has the origin in the lower left corner. If set to 0, the origin is at the upper left corner. Only the fragcoord y-value is affected.'''
  [[register.field]]
    name = "FLIP_DITHERING_MATRIX"
    bits = "9"
    type = "rw"
    shortdesc = '''Flips the dithering matrix enabled by RSW 14, bit 13 upside down.'''
    longdesc = '''See Subword 14: Stencil clear tag, number of uniforms, dithering/ROP4 enable, polygon orientation flag on page 3-145 The dithering enabled by WBx_DITHER_ENABLE in the WBx_TARGET_FLAGS Register is not affected. Note: There are no offsets to the dithering matrix, consequently a framebuffer with a height divisible by four is required for a 1:1 mapping with the non-flipped content.'''
  [[register.field]]
    name = "FLIP_POINT_SPRITES"
    bits = "8"
    type = "rw"
    shortdesc = '''Flips the point sprites upside down.'''
    longdesc = '''This is achieved by flipping the y-coordinate of the point sprites when using varying instruction 12.'''
  [[register.field]]
    name = "DERIVATIVE_SCALE_ENABLE"
    bits = "3"
    type = "rw"
    shortdesc = '''Enables scaling of the derivative instruction.'''
    longdesc = '''This is achieved by multiplying the result from the derivative instructions in adder4 and adder1 by 2**SCALEX for the x-direction and 2**SCALEY for the y-direction.'''
  [[register.field]]
    name = "FRAGCOORD_SCALE_ENABLE"
    bits = "2"
    type = "rw"
    shortdesc = '''Enables inverse scaling of fragcoord values.'''
    longdesc = '''This is achieved by dividing the result of the varying instruction Position Register with 2**SCALEX for the x-direction and 2**SCALEY for the y-direction.'''
  [[register.field]]
    name = "DITHERING_SCALE_ENABLE"
    bits = "1"
    type = "rw"
    shortdesc = '''Enables scaling of dithering values.'''
    longdesc = '''This is achieved by dividing the x and y position with 2**SCALEX and 2**SCALEY before applying the dithering offset table. There are two offset tables, one in the blending unit and one in the writeback unit. Both are affected. Note: * The dither scaling is only valid for the dithering enabled by the RSW. Writeback dithering, that is, dithering enabled by the writeback registers, is not affected. * The dithering matrix can only be scaled up to the size of the tile, making scaling values greater than 3 ineffective. This is an implementation limit.'''
  [[register.field]]
    name = "POINT_AND_LINE_SCALE_ENABLE"
    bits = "0"
    type = "rw"
    shortdesc = '''Enables scaling of point and line sizes.'''
    longdesc = '''This feature multiplies the line width and point size in both x and y direction by 2*SCALEX and 2*SCALEY. The major axis for aliased lines is affected so that dx and dy are divided by 2*SCALEX and 2*SCALEY before the major axis is selected. Because of the diamond-exit rulea, the line offset is not affected by the scaling.'''
[[register]]
  name = "PP1_TILEBUFFER_BITS"
  type = "rw"
  width = 32
  description = "Tilebuffer configuration Register"
  default = "0x00000000"
  offset = "0x0000A058"
  [[register.field]]
    name = "TILEBUFFER_A_BITS"
    bits = "15:12"
    type = "rw"
  [[register.field]]
    name = "TILEBUFFER_B_BITS"
    bits = "11:8"
    type = "rw"
  [[register.field]]
    name = "TILEBUFFER_G_BITS"
    bits = "7:4"
    type = "rw"
  [[register.field]]
    name = "TILEBUFFER_R_BITS"
    bits = "3:0"
    type = "rw"
[[register]]
  name = "PP1_WB0_SOURCE_SELECT"
  type = "rw"
  width = 32
  description = "WB0 Source Select Register"
  default = "0x00000000"
  offset = "0x0000A100"
  [[register.field]]
    name = "WB0_SOURCE_SELECT"
    bits = "1:0"
    type = "rw"
    shortdesc = '''Tile buffer source for the write-back unit.'''
    longdesc = '''0 = None, WB is disabled 1 = Z/Stencil buffer 2 = ARGB buffer 3 = Reserved/undefined.'''
[[register]]
  name = "PP1_WB0_TARGET_ADDR"
  type = "rw"
  width = 32
  description = "WB0 Target Address Register"
  default = "0x00000000"
  offset = "0x0000A104"
  [[register.field]]
    name = "WB0_TARGET_ADDR"
    bits = "31:3"
    type = "rw"
  [[register.field]]
    name = "RESERVED"
    bits = "2:0"
    type = "rw"
[[register]]
  name = "PP1_WB0_TARGET_PIXEL_FORMAT"
  type = "rw"
  width = 32
  description = "WB0 Target Pixel Format Register"
  default = "0x00000000"
  offset = "0x0000A108"
  [[register.field]]
    name = "RESERVED"
    bits = "31:4"
    type = "rw"
  [[register.field]]
    name = "WB0_TARGET_PIXEL_FORMAT"
    bits = "3:0"
    type = "rw"
[[register]]
  name = "PP1_WB0_TARGET_AA_FORMAT"
  type = "rw"
  width = 32
  description = "WB0 Target AA Format Register"
  default = "0x00000000"
  offset = "0x0000A10C"
  [[register.field]]
    name = "RESERVED"
    bits = "31:15"
    type = "rw"
  [[register.field]]
    name = "WB0_TARGET_AA_Y"
    bits = "14:12"
    type = "rw"
  [[register.field]]
    name = "RESERVED"
    bits = "11:10"
    type = "rw"
  [[register.field]]
    name = "WB0_TARGET_AA_X"
    bits = "9:8"
    type = "rw"
  [[register.field]]
    name = "RESERVED"
    bits = "7:3"
    type = "rw"
  [[register.field]]
    name = "WB0_TARGET_AA_FORMAT"
    bits = "2:0"
    type = "rw"
    shortdesc = '''Blocked AA Note: WB0_TARGET_AA_FORMAT is deprecated.'''
    longdesc = '''Consequently you are advised not to use these bits and to set them to zero.'''
[[register]]
  name = "PP1_WB0_TARGET_LAYOUT"
  type = "rw"
  width = 32
  description = "WB0 Target Layout"
  default = "0x00000000"
  offset = "0x0000A110"
  [[register.field]]
    name = "RESERVED"
    bits = "31:2"
    type = "rw"
  [[register.field]]
    name = "WB0_TARGET_LAYOUT"
    bits = "1:0"
    type = "rw"
    shortdesc = '''0 Linear layout.'''
    longdesc = '''The pixels are stored in normal linear layout in memory. 1 Interleaved layout. This is a fully interleaved mode where pixels are stored in u-order in memory for best possible 2D locality. This normally requires a quadratic framebuffer with power of two sides, but can also be used if the width is twice the height and both sides are powers of two. 2 Interleaved blocks. Each 16x16 pixel block is interleaved u-order internally and then the blocks are stored linearly in the framebuffer. 3 Reserved = Undefined.'''
[[register]]
  name = "PP1_WB0_TARGET_SCANLINE_LENGTH"
  type = "rw"
  width = 32
  description = "WB0 Target Scanline Length"
  default = "0x00000000"
  offset = "0x0000A114"
  [[register.field]]
    name = "RESERVED"
    bits = "31:16"
    type = "rw"
  [[register.field]]
    name = "WB0_TARGET_SCANLINE_LENGTH"
    bits = "15:0"
    type = "rw"
    shortdesc = '''Specifies the offset between the beginning of two lines of the target buffer.'''
    longdesc = '''The actual meaning depends on the value of WB0_TARGET_LAYOUT.'''
[[register]]
  name = "PP1_WB0_TARGET_FLAGS"
  type = "rw"
  width = 32
  description = "WB0 Target Flags Register"
  default = "0x00000000"
  offset = "0x0000A118"
  [[register.field]]
    name = "RESERVED"
    bits = "31:6"
    type = "rw"
  [[register.field]]
    name = "WB0_BIG_ENDIAN"
    bits = "5"
    type = "rw"
    shortdesc = '''When enabled, pixels are written in big-endian byte order.'''
    longdesc = '''When disabled, pixels are written in little-endian byte order.'''
  [[register.field]]
    name = "WB0_DITHER_ENABLE"
    bits = "4"
    type = "rw"
    shortdesc = '''When enabled, dithering of the write-back data is performed using Bayer ordered dithering.'''
    longdesc = '''Dithering is only possible when FP_TILEBUF_ENABLE is off. Note: Dithering only is supported when the tilebuffer is not downsampled more than a factor of four in either dimension, that is, the tilebuffer size is not less than 4x4 pixels.'''
  [[register.field]]
    name = "WB0_INV_COMPONENT_ORDER_ENABLE"
    bits = "3"
    type = "rw"
    shortdesc = '''When enabled, color formats get the order of their components inverted, for example: RGBA -> ARGB.'''
    longdesc = '''This, together with WB0_SWAP_RED_BLUE_ENABLE makes it possible to support different component permutations of WB0_TARGET_PIXEL_FORMAT.'''
  [[register.field]]
    name = "WB0_SWAP_RED_BLUE_ENABLE"
    bits = "2"
    type = "rw"
    shortdesc = '''When enabled, color formats get their red and blue components swapped, for example: RGBA->BGRA.'''
    longdesc = '''This, together with WB0_INV_COMPONENT_ORDER_ENABLE makes it possible to support different component permutations of WB0_TARGET_PIXEL_FORMAT.'''
  [[register.field]]
    name = "WB0_BOUNDING_BOX_ENABLE"
    bits = "1"
    type = "rw"
  [[register.field]]
    name = "WB0_DIRTY_BIT_ENABLE"
    bits = "0"
    type = "rw"
[[register]]
  name = "PP1_WB0_MRT_ENABLE"
  type = "rw"
  width = 32
  description = "WB0 MRT Enable Register"
  default = "0x00000000"
  offset = "0x0000A11C"
  [[register.field]]
    name = "RESERVED"
    bits = "31:4"
    type = "rw"
  [[register.field]]
    name = "WB0_MRT_ENABLE"
    bits = "3:0"
    type = "rw"
[[register]]
  name = "PP1_WB0_MRT_OFFSET"
  type = "rw"
  width = 32
  description = "WB0 MRT Offset Register"
  default = "0x00000000"
  offset = "0x0000A120"
  [[register.field]]
    name = "WB0_MRT_OFFSET"
    bits = "31:3"
    type = "rw"
  [[register.field]]
    name = "RESERVED"
    bits = "2:0"
    type = "rw"
[[register]]
  name = "PP1_WB0_GLOBAL_TEST_ENABLE"
  type = "rw"
  width = 32
  description = "WB0 Global Test Enable Register"
  default = "0x00000000"
  offset = "0x0000A124"
  [[register.field]]
    name = "RESERVED"
    bits = "31:1"
    type = "rw"
  [[register.field]]
    name = "WB0_GLOBAL_TEST_ENABLE"
    bits = "0"
    type = "rw"
[[register]]
  name = "PP1_WB0_GLOBAL_TEST_REF_VALUE"
  type = "rw"
  width = 32
  description = "WB0 Global Test Reference Value Register"
  default = "0x00000000"
  offset = "0x0000A128"
  [[register.field]]
    name = "RESERVED"
    bits = "31:16"
    type = "rw"
[[register]]
  name = "PP1_WB0_GLOBAL_TEST_CMP_FUNC"
  type = "rw"
  width = 32
  description = "WB0 Global Test Compare Function Register"
  default = "0x00000000"
  offset = "0x0000A12C"
  [[register.field]]
    name = "RESERVED"
    bits = "31:3"
    type = "rw"
[[register]]
  name = "PP1_WB1_SOURCE_SELECT"
  type = "rw"
  width = 32
  description = "WB1 Source Select Register"
  default = "0x00000000"
  offset = "0x0000A200"
  [[register.field]]
    name = "RESERVED"
    bits = "31:2"
    type = "rw"
  [[register.field]]
    name = "WB1_SOURCE_SELECT"
    bits = "1:0"
    type = "rw"
    shortdesc = '''Tile buffer source for the write-back unit.'''
    longdesc = '''0 = None, WB is disabled 1 = Z/Stencil buffer 2 = ARGB buffer 3 = Reserved/undefined.'''
[[register]]
  name = "PP1_WB1_TARGET_ADDR"
  type = "rw"
  width = 32
  description = "WB1 Target Address Register"
  default = "0x00000000"
  offset = "0x0000A204"
  [[register.field]]
    name = "WB1_TARGET_ADDR"
    bits = "31:3"
    type = "rw"
  [[register.field]]
    name = "RESERVED"
    bits = "2:0"
    type = "rw"
[[register]]
  name = "PP1_WB1_TARGET_PIXEL_FORMAT"
  type = "rw"
  width = 32
  description = "WB1 Target Pixel Format Register"
  default = "0x00000000"
  offset = "0x0000A208"
  [[register.field]]
    name = "RESERVED"
    bits = "31:4"
    type = "rw"
  [[register.field]]
    name = "WB1_TARGET_PIXEL_FORMAT"
    bits = "3:0"
    type = "rw"
[[register]]
  name = "PP1_WB1_TARGET_AA_FORMAT"
  type = "rw"
  width = 32
  description = "WB1 Target AA Format Register"
  default = "0x00000000"
  offset = "0x0000A20C"
  [[register.field]]
    name = "RESERVED"
    bits = "31:15"
    type = "rw"
  [[register.field]]
    name = "WB1_TARGET_AA_Y"
    bits = "14:12"
    type = "rw"
  [[register.field]]
    name = "RESERVED"
    bits = "11:10"
    type = "rw"
  [[register.field]]
    name = "WB1_TARGET_AA_X"
    bits = "9:8"
    type = "rw"
  [[register.field]]
    name = "RESERVED"
    bits = "7:3"
    type = "rw"
  [[register.field]]
    name = "WB1_TARGET_AA_FORMAT"
    bits = "2:0"
    type = "rw"
    shortdesc = '''Blocked AA Note: WB1_TARGET_AA_FORMAT is deprecated.'''
    longdesc = '''Consequently you are advised not to use these bits and to set them to zero.'''
[[register]]
  name = "PP1_WB1_TARGET_LAYOUT"
  type = "rw"
  width = 32
  description = "WB1 Target Layout"
  default = "0x00000000"
  offset = "0x0000A210"
  [[register.field]]
    name = "RESERVED"
    bits = "31:2"
    type = "rw"
  [[register.field]]
    name = "WB1_TARGET_LAYOUT"
    bits = "1:0"
    type = "rw"
    shortdesc = '''0 Linear layout.'''
    longdesc = '''The pixels are stored in normal linear layout in memory. 1 Interleaved layout. This is a fully interleaved mode where pixels are stored in u-order in memory for best possible 2D locality. This normally requires a quadratic framebuffer with power of two sides, but can also be used if the width is twice the height and both sides are powers of two. 2 Interleaved blocks. Each 16x16 pixel block is interleaved u-order internally and then the blocks are stored linearly in the framebuffer. 3 Reserved = Undefined.'''
[[register]]
  name = "PP1_WB1_TARGET_SCANLINE_LENGTH"
  type = "rw"
  width = 32
  description = "WB1 Target Scanline Length"
  default = "0x00000000"
  offset = "0x0000A214"
  [[register.field]]
    name = "WB2_TARGET_SCANLINE_LENGTH"
    bits = "15:0"
    type = "rw"
    shortdesc = '''Specifies the offset between the beginning of two lines of the target buffer.'''
    longdesc = '''The actual meaning depends on the value of WB1_TARGET_LAYOUT.'''
[[register]]
  name = "PP1_WB1_TARGET_FLAGS"
  type = "rw"
  width = 32
  description = "WB1 Target Flags Register"
  default = "0x00000000"
  offset = "0x0000A218"
  [[register.field]]
    name = "RESERVED"
    bits = "31:6"
    type = "rw"
  [[register.field]]
    name = "WB1_BIG_ENDIAN"
    bits = "5"
    type = "rw"
    shortdesc = '''When enabled, pixels are written in big-endian byte order.'''
    longdesc = '''When disabled, pixels are written in little-endian byte order.'''
  [[register.field]]
    name = "WB1_DITHER_ENABLE"
    bits = "4"
    type = "rw"
    shortdesc = '''When enabled, dithering of the write-back data is performed using Bayer ordered dithering.'''
    longdesc = '''Dithering is only possible when FP_TILEBUF_ENABLE is off. Note: Dithering only is supported when the tilebuffer is not downsampled more than a factor of four in either dimension, that is, the tilebuffer size is not less than 4x4 pixels.'''
  [[register.field]]
    name = "WB1_INV_COMPONENT_ORDER_ENABLE"
    bits = "3"
    type = "rw"
    shortdesc = '''When enabled, color formats get the order of their components inverted, for example: RGBA -> ARGB.'''
    longdesc = '''This, together with WB0_SWAP_RED_BLUE_ENABLE makes it possible to support different component permutations of WB1_TARGET_PIXEL_FORMAT.'''
  [[register.field]]
    name = "WB1_SWAP_RED_BLUE_ENABLE"
    bits = "2"
    type = "rw"
    shortdesc = '''When enabled, color formats get their red and blue components swapped, for example: RGBA->BGRA.'''
    longdesc = '''This, together with WB1_INV_COMPONENT_ORDER_ENABLE makes it possible to support different component permutations of WB1_TARGET_PIXEL_FORMAT.'''
  [[register.field]]
    name = "WB1_BOUNDING_BOX_ENABLE"
    bits = "1"
    type = "rw"
  [[register.field]]
    name = "WB1_DIRTY_BIT_ENABLE"
    bits = "0"
    type = "rw"
[[register]]
  name = "PP1_WB1_MRT_ENABLE"
  type = "rw"
  width = 32
  description = "WB1 MRT Enable Register"
  default = "0x00000000"
  offset = "0x0000A21C"
  [[register.field]]
    name = "WB1_MRT_ENABLE"
    bits = "3:0"
    type = "rw"
[[register]]
  name = "PP1_WB1_MRT_OFFSET"
  type = "rw"
  width = 32
  description = "WB1 MRT Offset Register"
  default = "0x00000000"
  offset = "0x0000A220"
  [[register.field]]
    name = "WB1_MRT_OFFSET"
    bits = "31:3"
    type = "rw"
  [[register.field]]
    name = "RESERVED"
    bits = "2:0"
    type = "rw"
[[register]]
  name = "PP1_WB1_GLOBAL_TEST_ENABLE"
  type = "rw"
  width = 32
  description = "WB1 Global Test Enable Register"
  default = "0x00000000"
  offset = "0x0000A224"
  [[register.field]]
    name = "RESERVED"
    bits = "31:1"
    type = "rw"
  [[register.field]]
    name = "WB1_GLOBAL_TEST_ENABLE"
    bits = "0"
    type = "rw"
[[register]]
  name = "PP1_WB1_GLOBAL_TEST_REF_VALUE"
  type = "rw"
  width = 32
  description = "WB1 Global Test Reference Value Register"
  default = "0x00000000"
  offset = "0x0000A228"
  [[register.field]]
    name = "RESERVED"
    bits = "31:16"
    type = "rw"
[[register]]
  name = "PP1_WB1_GLOBAL_TEST_CMP_FUNC"
  type = "rw"
  width = 32
  description = "WB1 Global Test Compare Function Register"
  default = "0x00000000"
  offset = "0x0000A22C"
  [[register.field]]
    name = "RESERVED"
    bits = "31:3"
    type = "rw"
[[register]]
  name = "PP1_WB2_SOURCE_SELECT"
  type = "rw"
  width = 32
  description = "WB2 Source Select Register"
  default = "0x00000000"
  offset = "0x0000A300"
  [[register.field]]
    name = "RESERVED"
    bits = "31:2"
    type = "rw"
  [[register.field]]
    name = "WB2_SOURCE_SELECT"
    bits = "1:0"
    type = "rw"
    shortdesc = '''Tile buffer source for the write-back unit.'''
    longdesc = '''0 = None, WB is disabled 1 = Z/Stencil buffer 2 = ARGB buffer 3 = Reserved/undefined.'''
[[register]]
  name = "PP1_WB2_TARGET_ADDR"
  type = "rw"
  width = 32
  description = "WB2 Target Address Register"
  default = "0x00000000"
  offset = "0x0000A304"
  [[register.field]]
    name = "WB2_TARGET_ADDR"
    bits = "31:3"
    type = "rw"
  [[register.field]]
    name = "RESERVED"
    bits = "2:0"
    type = "rw"
[[register]]
  name = "PP1_WB2_TARGET_PIXEL_FORMAT"
  type = "rw"
  width = 32
  description = "WB2 Target Pixel Format Register"
  default = "0x00000000"
  offset = "0x0000A308"
  [[register.field]]
    name = "WB2_TARGET_PIXEL_FORMAT"
    bits = "3:0"
    type = "rw"
[[register]]
  name = "PP1_WB2_TARGET_AA_FORMAT"
  type = "rw"
  width = 32
  description = "WB2 Target AA Format Register"
  default = "0x00000000"
  offset = "0x0000A30C"
  [[register.field]]
    name = "RESERVED"
    bits = "31:15"
    type = "rw"
  [[register.field]]
    name = "WB2_TARGET_AA_Y"
    bits = "14:12"
    type = "rw"
  [[register.field]]
    name = "RESERVED"
    bits = "11:10"
    type = "rw"
  [[register.field]]
    name = "WB2_TARGET_AA_X"
    bits = "9:8"
    type = "rw"
  [[register.field]]
    name = "RESERVED"
    bits = "7:3"
    type = "rw"
  [[register.field]]
    name = "WB2_TARGET_AA_FORMAT"
    bits = "2:0"
    type = "rw"
    shortdesc = '''Blocked AA Note: WB2_TARGET_AA_FORMAT is deprecated.'''
    longdesc = '''Consequently you are advised not to use these bits and to set them to zero.'''
[[register]]
  name = "PP1_WB2_TARGET_LAYOUT"
  type = "rw"
  width = 32
  description = "WB2 Target Layout"
  default = "0x00000000"
  offset = "0x0000A310"
  [[register.field]]
    name = "WB2_TARGET_LAYOUT"
    bits = "1:0"
    type = "rw"
    shortdesc = '''0 Linear layout.'''
    longdesc = '''The pixels are stored in normal linear layout in memory. 1 Interleaved layout. This is a fully interleaved mode where pixels are stored in u-order in memory for best possible 2D locality. This normally requires a quadratic framebuffer with power of two sides, but can also be used if the width is twice the height and both sides are powers of two. 2 Interleaved blocks. Each 16x16 pixel block is interleaved u-order internally and then the blocks are stored linearly in the framebuffer. 3 Reserved = Undefined.'''
[[register]]
  name = "PP1_WB2_TARGET_SCANLINE_LENGTH"
  type = "rw"
  width = 32
  description = "WB2 Target Scanline Length"
  default = "0x00000000"
  offset = "0x0000A314"
  [[register.field]]
    name = "WB2_TARGET_SCANLINE_LENGTH"
    bits = "15:0"
    type = "rw"
    shortdesc = '''Specifies the offset between the beginning of two lines of the target buffer.'''
    longdesc = '''The actual meaning depends on the value of WB2_TARGET_LAYOUT.'''
[[register]]
  name = "PP1_WB2_TARGET_FLAGS"
  type = "rw"
  width = 32
  description = "WB2 Target Flags Register"
  default = "0x00000000"
  offset = "0x0000A318"
  [[register.field]]
    name = "WB2_BIG_ENDIAN"
    bits = "5"
    type = "rw"
    shortdesc = '''When enabled, pixels are written in big-endian byte order.'''
    longdesc = '''When disabled, pixels are written in little-endian byte order.'''
  [[register.field]]
    name = "WB2_DITHER_ENABLE"
    bits = "4"
    type = "rw"
    shortdesc = '''When enabled, dithering of the write-back data is performed using Bayer ordered dithering.'''
    longdesc = '''Dithering is only possible when FP_TILEBUF_ENABLE is off. Note: Dithering only is supported when the tilebuffer is not downsampled more than a factor of four in either dimension, that is, the tilebuffer size is not less than 4x4 pixels.'''
  [[register.field]]
    name = "WB2_INV_COMPONENT_ORDER_ENABLE"
    bits = "3"
    type = "rw"
    shortdesc = '''When enabled, color formats get the order of their components inverted, for example: RGBA -> ARGB.'''
    longdesc = '''This, together with WB2_SWAP_RED_BLUE_ENABLE makes it possible to support different component permutations of WB2_TARGET_PIXEL_FORMAT.'''
  [[register.field]]
    name = "WB2_SWAP_RED_BLUE_ENABLE"
    bits = "2"
    type = "rw"
    shortdesc = '''When enabled, color formats get their red and blue components swapped, for example: RGBA->BGRA.'''
    longdesc = '''This, together with WB2_INV_COMPONENT_ORDER_ENABLE makes it possible to support different component permutations of WB2_TARGET_PIXEL_FORMAT.'''
  [[register.field]]
    name = "WB2_BOUNDING_BOX_ENABLE"
    bits = "1"
    type = "rw"
  [[register.field]]
    name = "WB2_DIRTY_BIT_ENABLE"
    bits = "0"
    type = "rw"
[[register]]
  name = "PP1_WB2_MRT_ENABLE"
  type = "rw"
  width = 32
  description = "WB2 MRT Enable Register"
  default = "0x00000000"
  offset = "0x0000A31C"
  [[register.field]]
    name = "RESERVED"
    bits = "31:4"
    type = "rw"
  [[register.field]]
    name = "WB2_MRT_ENABLE"
    bits = "3:0"
    type = "rw"
[[register]]
  name = "PP1_WB2_MRT_OFFSET"
  type = "rw"
  width = 32
  description = "WB2 MRT Offset Register"
  default = "0x00000000"
  offset = "0x0000A320"
  [[register.field]]
    name = "WB2_MRT_OFFSET"
    bits = "31:3"
    type = "rw"
[[register]]
  name = "PP1_WB2_GLOBAL_TEST_ENABLE"
  type = "rw"
  width = 32
  description = "WB2 Global Test Enable Register"
  default = "0x00000000"
  offset = "0x0000A324"
  [[register.field]]
    name = "RESERVED"
    bits = "31:1"
    type = "rw"
  [[register.field]]
    name = "WB2_GLOBAL_TEST_ENABLE"
    bits = "0"
    type = "rw"
[[register]]
  name = "PP1_WB2_GLOBAL_TEST_REF_VALUE"
  type = "rw"
  width = 32
  description = "WB2 Global Test Reference Value Register"
  default = "0x00000000"
  offset = "0x0000A328"
  [[register.field]]
    name = "RESERVED"
    bits = "31:16"
    type = "rw"
[[register]]
  name = "PP1_WB2_GLOBAL_TEST_CMP_FUNC"
  type = "rw"
  width = 32
  description = "WB2 Global Test Compare Function Register"
  default = "0x00000000"
  offset = "0x0000A32C"
  [[register.field]]
    name = "RESERVED"
    bits = "31:3"
    type = "rw"
[[register]]
  name = "PP1_VERSION"
  type = "rw"
  width = 32
  description = "Version Register"
  default = "0x00CD0007"
  offset = "0x0000B000"
  [[register.field]]
    name = "PRODUCT_ID"
    bits = "31:16"
    type = "rw"
  [[register.field]]
    name = "VERSION_MAJOR"
    bits = "15:8"
    type = "rw"
  [[register.field]]
    name = "VERSION_MINOR"
    bits = "7:0"
    type = "rw"
[[register]]
  name = "PP1_CURRENT_REND_LIST_ADDR"
  type = "rw"
  width = 32
  description = "Current Renderer List Address Register"
  default = "0x00000000"
  offset = "0x0000B004"
  [[register.field]]
    name = "CURRENT_REND_LIST_ADDR"
    bits = "31:5"
    type = "rw"
  [[register.field]]
    name = "RESERVED"
    bits = "4:0"
    type = "rw"
[[register]]
  name = "PP1_STATUS"
  type = "rw"
  width = 32
  description = "Pixel Processor Status Register"
  default = "0x00000000"
  offset = "0x0000B008"
  [[register.field]]
    name = "RESERVED"
    bits = "31:8"
    type = "rw"
  [[register.field]]
    name = "CLK_OVERRIDE"
    bits = "7"
    type = "rw"
    shortdesc = '''Shows that the block level clock gates have been disabled.'''
    longdesc = '''This bit is set by the CLK_OVERRIDE command in the CTRL_MGMT Register. When this bit is set, all the architectural clock gates in the design are overridden so all clocks are always active.'''
  [[register.field]]
    name = "INTERRUPT_ASSERTED"
    bits = "6"
    type = "rw"
  [[register.field]]
    name = "WRITE_BOUNDARY_ERROR"
    bits = "5"
    type = "rw"
  [[register.field]]
    name = "BUS_STOPPED"
    bits = "4"
    type = "rw"
    shortdesc = '''Shows that the master bus interface of the pixel processor has been stopped because of a STOP_BUS command or a performance counter limit event.'''
    longdesc = '''The bus interface can be restarted by using the START_BUS command.'''
  [[register.field]]
    name = "BUS_ERROR"
    bits = "3"
    type = "rw"
    shortdesc = '''A bus transaction has ended with error.'''
    longdesc = '''The pixel processor has been stopped and has to be reset before rendering can be started again.'''
  [[register.field]]
    name = "HANG"
    bits = "2"
    type = "rw"
    shortdesc = '''Watchdog timer limit reached.'''
    longdesc = '''This state can also be triggered under normal rendering if you are running a shader where it is near to a never-ending inner loop. From the software perspective, you can ignore this state, because this is merely a hint from the HW that something might be wrong. The SW then decides to either reset the processor, or continue to let it run.'''
  [[register.field]]
    name = "TILE_STOPPED"
    bits = "1"
    type = "rw"
    shortdesc = '''Rendering of the current tile has been completed as if it was the last tile of the frame.'''
    longdesc = '''Indicates that an END_AFTER_TILE command has been issued.'''
  [[register.field]]
    name = "RENDERING_ACTIVE"
    bits = "0"
    type = "rw"
[[register]]
  name = "PP1_CTRL_MGMT"
  type = "rw"
  width = 32
  description = "Control Management Register"
  default = "0x00000000"
  offset = "0x0000B00C"
  [[register.field]]
    name = "RESERVED"
    bits = "31:9"
    type = "rw"
  [[register.field]]
    name = "CLK_OVERRIDE"
    bits = "8"
    type = "rw"
    shortdesc = '''Disable block level clock gates.'''
    longdesc = '''Writing a 1 to this bit overrides all the architectural clock gates in the design, so all clocks are always active. The status of the clock override is shown as the CLK_OVERRIDE bit in the STATUS Register. The only way to disable the clock override is by performing a pixel processor reset.'''
  [[register.field]]
    name = "SOFT_RESET"
    bits = "7"
    type = "rw"
    shortdesc = '''Writing to this bit resets the pixel processor after all outstanding bus-transfers have completed.'''
    longdesc = '''Use the RESET_COMPLETED interrupt bit to discover when the reset has actually completed.'''
  [[register.field]]
    name = "START_RENDERING"
    bits = "6"
    type = "rw"
    shortdesc = '''Writing to this bit initiates rendering.'''
    longdesc = '''Do not write this value during rendering.'''
  [[register.field]]
    name = "FORCE_RESET"
    bits = "5"
    type = "rw"
    shortdesc = '''Writing to this bit resets the pixel processor, so that it can be brought out of a hang in a reasonably clean manner.'''
    longdesc = '''If FORCE_RESET is asserted while there is a bus transaction in progress the AXI interconnect might operate at reduced efficiency or lockup. To ensure a safe reset: 1. Write 1 to STOP_BUS. 2. Wait until all transactions have completed. The BUS_STOP interrupt is asserted when the bus is idle. 3. Write 1 to FORCE_RESET. The use of FORCE_RESET must be deprecated, unless you require backwards compatibility with Mali-200.'''
  [[register.field]]
    name = "FORCE_HANG"
    bits = "4"
    type = "rw"
    shortdesc = '''Writing to this bit causes the pixel processor to hang.'''
    longdesc = '''Only useful for debugging.'''
  [[register.field]]
    name = "FLUSH_CACHES"
    bits = "3"
    type = "rw"
    shortdesc = '''Writing to this bit causes all the vertex, RSW and texture caches to be flushed immediately.'''
    longdesc = '''This must be done only when the renderer is idle, otherwise the hardware cannot guarantee that caches become clean or that renderer glitches do not occur. The pixel processor must have an active clock for the flush to have an effect. The pixel processor might have the clock shut off when idle to conserve power, depending on the processor integration. This means that the FLUSH_CACHES command must be issued in of the following states of operation: 1. At the beginning of a frame, after the APB registers have been written to, but before the START_RENDERING command has been issued. 2. At the end of a frame, after the interrupt has been received but before the interrupt signal has been masked or acknowledged. If neither is possible, you can use a FORCE_RESET command to flush the caches. FLUSH_CACHES is performed implicitly every time the pixel processor starts rendering, so explicitly using this bit is rarely required.'''
  [[register.field]]
    name = "END_AFTER_TILE"
    bits = "2"
    type = "rw"
    shortdesc = '''Writing to this bit causes the renderer to treat a BEGIN-NEW-TILE command, that is, Cmd 14, as an End-Of-List command, that is Cmd 15.'''
    longdesc = '''This action finalizes the rendering of the current tile, leaving the framebuffer incomplete in most situations, except when the current tile is the last tile of the frame. Rendering of the rest of the frame can be initiated by writing the CURRENT_REND_LIST_ADDR value to the REND_LIST_ADDR Register and issuing the START_RENDERING command.'''
  [[register.field]]
    name = "START_BUS"
    bits = "1"
    type = "rw"
    shortdesc = '''Writing to this bit reactivates the bus interface after it has been stopped by a STOP_BUS command or a WRITE_BOUNDARY_LIMIT event.'''
    longdesc = '''The effect of issuing a START_BUS and a STOP_BUS command at the same time is not defined.'''
  [[register.field]]
    name = "STOP_BUS"
    bits = "0"
    type = "rw"
    shortdesc = '''Writing to this bit causes the bus interface to hold back future transactions on the bus.'''
    longdesc = '''Any current bus transactions are completed before the interface is stopped. The bus can be restarted by issuing a START_BUS command. The effect of issuing a START_BUS and a STOP_BUS command at the same time is not defined.'''
[[register]]
  name = "PP1_LAST_TILE_POS_START"
  type = "rw"
  width = 32
  description = "Last Tile Where Processing Started Register"
  default = "0x00000000"
  offset = "0x0000B010"
  [[register.field]]
    name = "RESERVED"
    bits = "31:24"
    type = "rw"
  [[register.field]]
    name = "TILEY_START"
    bits = "23:16"
    type = "rw"
    shortdesc = '''The y position of the last file that processing has begun.'''
    longdesc = '''Note: Scaling is equal to that of the Begin New Tile command 15 in the polygon list.'''
  [[register.field]]
    name = "TILEX_START"
    bits = "7:0"
    type = "rw"
    shortdesc = '''The x position of the last file that processing has begun.'''
    longdesc = '''Note: Scaling is equal to that of the Begin New Tile command 15 in the polygon list.'''
[[register]]
  name = "PP1_LAST_TILE_POS_END"
  type = "rw"
  width = 32
  description = "Last Tile Where Processing Completed Register"
  default = "0x00000000"
  offset = "0x0000B014"
  [[register.field]]
    name = "RESERVED"
    bits = "31:24"
    type = "rw"
  [[register.field]]
    name = "TILEY_END"
    bits = "23:16"
    type = "rw"
    shortdesc = '''The y position of the last tile that processing has ended, that is written back.'''
    longdesc = '''Note: Scaling is equal to that of the Begin New Tile command 15 in the polygon list.'''
  [[register.field]]
    name = "RESERVED"
    bits = "15:8"
    type = "rw"
  [[register.field]]
    name = "TILEX_END"
    bits = "7:0"
    type = "rw"
    shortdesc = '''The x position of the last tile that processing has ended, that is written back.'''
    longdesc = '''Note: Scaling is equal to that of the Begin New Tile command 15 in the polygon list.'''
[[register]]
  name = "PP1_INT_RAWSTAT"
  type = "rw"
  width = 32
  description = "Interrupt Rawstat Register"
  default = "0x00000000"
  offset = "0x0000B020"
  [[register.field]]
    name = "RESERVED"
    bits = "31:13"
    type = "rw"
  [[register.field]]
    name = "RESET_COMPLETED"
    bits = "12"
    type = "rw"
  [[register.field]]
    name = "CALL_STACK_OVERFLOW"
    bits = "11"
    type = "rw"
    shortdesc = '''The polygon list command call has been executed to many times recursively.'''
    longdesc = '''It is treated as an end of list command and rendering stops.'''
  [[register.field]]
    name = "CALL_STACK_UNDERFLOW"
    bits = "10"
    type = "rw"
    shortdesc = '''The polygon list command return was executed without a call first.'''
    longdesc = '''The return command is then treated as an end of list command and rendering stops.'''
  [[register.field]]
    name = "INVALID_PLIST_COMMAND"
    bits = "9"
    type = "rw"
    shortdesc = '''A command in the polygon list was invalid and rendering could not continue.'''
    longdesc = '''The invalid command is treated as an end of list command.'''
  [[register.field]]
    name = "WRITE_BOUNDARY_ERROR"
    bits = "8"
    type = "rw"
    shortdesc = '''The pixel processor has attempted to write outside the write boundary set by the WRITE_BOUNDARY registers.'''
    longdesc = '''The bus interface completes the previous bus transaction but does not initialize any new transactions before the WRITE_BOUNDARY is modified or disabled, or the renderer is reset.'''
  [[register.field]]
    name = "CNT_1_LIMIT"
    bits = "7"
    type = "rw"
    shortdesc = '''Performance counter PERF_CNT_1 has passed the limit set in PERF_CNT_1_LIMIT.'''
    longdesc = '''The bus interface is stopped as with STOP_BUS, and this interrupt source set. The BUS_STOP interrupt is asserted when the bus is actually stopped. This is likely to occur after CNT_1_LIMIT has been triggered.'''
  [[register.field]]
    name = "CNT_0_LIMIT"
    bits = "6"
    type = "rw"
    shortdesc = '''Performance counter PERF_CNT_0 has passed the limit set in PERF_CNT_0_LIMIT.'''
    longdesc = '''The bus interface is stopped as with STOP_BUS, and this interrupt source set. The BUS_STOP interrupt is asserted when the bus is actually stopped. This is likely to occur after CNT_0_LIMIT has been triggered.'''
  [[register.field]]
    name = "BUS_STOP"
    bits = "5"
    type = "rw"
    shortdesc = '''The renderer has been stopped by a STOP_BUS command.'''
    longdesc = '''BUS_STOP is triggered only after the bus is actually stopped, making it likely that BUS_STOP is delayed a bit after CNT_x_LIMIT has been triggered. Operation can be continued by issuing the START_BUS command.'''
  [[register.field]]
    name = "BUS_ERROR"
    bits = "4"
    type = "rw"
    shortdesc = '''A bus transaction has ended with error.'''
    longdesc = '''The pixel processor has been stopped and has to be reset before rendering can be started again.'''
  [[register.field]]
    name = "FORCE_HANG"
    bits = "3"
    type = "rw"
    shortdesc = '''The pixel processor has been forced into an illegal state by the FORCE_HANG command.'''
    longdesc = '''The renderer must be reset before rendering can be started again.'''
  [[register.field]]
    name = "HANG"
    bits = "2"
    type = "rw"
    shortdesc = '''Watchdog timer limit reached.'''
    longdesc = '''This state can also be triggered under normal rendering if you are running a shader where it is near to a never-ending inner loop. From the software perspective, you can ignore this state, because this is merely a hint from the HW that something might be wrong. The SW then decides to either reset the processor, or continue to let it run.'''
  [[register.field]]
    name = "END_OF_TILE"
    bits = "1"
    type = "rw"
    shortdesc = '''Rendering has been ended by an END_AFTER_TILE command.'''
    longdesc = '''The framebuffer might be incomplete.'''
  [[register.field]]
    name = "END_OF_FRAME"
    bits = "0"
    type = "rw"
    shortdesc = '''Rendering has ended by completion of the polygon list.'''
    longdesc = '''The framebuffer is complete. The interrupt is delayed until all outstanding write requests have completed.'''
[[register]]
  name = "PP1_INT_CLEAR"
  type = "rw"
  width = 32
  description = "Interrupt Clear Register"
  default = "0x00000000"
  offset = "0x0000B024"
  [[register.field]]
    name = "RESERVED"
    bits = "31:13"
    type = "rw"
  [[register.field]]
    name = "RESET_COMPLETED"
    bits = "12"
    type = "rw"
  [[register.field]]
    name = "CALL_STACK_OVERFLOW"
    bits = "11"
    type = "rw"
  [[register.field]]
    name = "CALL_STACK_UNDERFLOW"
    bits = "10"
    type = "rw"
  [[register.field]]
    name = "INVALID_PLIST_COMMAND"
    bits = "9"
    type = "rw"
  [[register.field]]
    name = "WRITE_BOUNDARY_ERROR"
    bits = "8"
    type = "rw"
  [[register.field]]
    name = "CNT_1_LIMIT"
    bits = "7"
    type = "rw"
  [[register.field]]
    name = "CNT_0_LIMIT"
    bits = "6"
    type = "rw"
  [[register.field]]
    name = "BUS_STOP"
    bits = "5"
    type = "rw"
  [[register.field]]
    name = "BUS_ERROR"
    bits = "4"
    type = "rw"
  [[register.field]]
    name = "FORCE_HANG"
    bits = "3"
    type = "rw"
  [[register.field]]
    name = "HANG"
    bits = "2"
    type = "rw"
  [[register.field]]
    name = "END_OF_TILE"
    bits = "1"
    type = "rw"
  [[register.field]]
    name = "END_OF_FRAME"
    bits = "0"
    type = "rw"
[[register]]
  name = "PP1_INT_MASK"
  type = "rw"
  width = 32
  description = "Interrupt Mask Register"
  default = "0x00000FFF"
  offset = "0x0000B028"
  [[register.field]]
    name = "RESERVED"
    bits = "31:13"
    type = "rw"
  [[register.field]]
    name = "RESET_COMPLETED"
    bits = "12"
    type = "rw"
  [[register.field]]
    name = "CALL_STACK_OVERFLOW"
    bits = "11"
    type = "rw"
  [[register.field]]
    name = "CALL_STACK_UNDERFLOW"
    bits = "10"
    type = "rw"
  [[register.field]]
    name = "INVALID_PLIST_COMMAND"
    bits = "9"
    type = "rw"
  [[register.field]]
    name = "WRITE_BOUNDARY_ERROR"
    bits = "8"
    type = "rw"
  [[register.field]]
    name = "CNT_1_LIMIT"
    bits = "7"
    type = "rw"
  [[register.field]]
    name = "CNT_0_LIMIT"
    bits = "6"
    type = "rw"
  [[register.field]]
    name = "BUS_STOP"
    bits = "5"
    type = "rw"
  [[register.field]]
    name = "BUS_ERROR"
    bits = "4"
    type = "rw"
  [[register.field]]
    name = "FORCE_HANG"
    bits = "3"
    type = "rw"
  [[register.field]]
    name = "HANG"
    bits = "2"
    type = "rw"
  [[register.field]]
    name = "END_OF_TILE"
    bits = "1"
    type = "rw"
  [[register.field]]
    name = "END_OF_FRAME"
    bits = "0"
    type = "rw"
[[register]]
  name = "PP1_INT_STATUS"
  type = "rw"
  width = 32
  description = "Interrupt Status Register"
  default = "0x00000000"
  offset = "0x0000B02C"
  [[register.field]]
    name = "RESERVED"
    bits = "31:13"
    type = "rw"
  [[register.field]]
    name = "RESET_COMPLETED"
    bits = "12"
    type = "rw"
  [[register.field]]
    name = "CALL_STACK_OVERFLOW"
    bits = "11"
    type = "rw"
  [[register.field]]
    name = "CALL_STACK_UNDERFLOW"
    bits = "10"
    type = "rw"
  [[register.field]]
    name = "INVALID_PLIST_COMMAND"
    bits = "9"
    type = "rw"
  [[register.field]]
    name = "WRITE_BOUNDARY_ERROR"
    bits = "8"
    type = "rw"
  [[register.field]]
    name = "CNT_1_LIMIT"
    bits = "7"
    type = "rw"
  [[register.field]]
    name = "CNT_0_LIMIT"
    bits = "6"
    type = "rw"
  [[register.field]]
    name = "BUS_STOP"
    bits = "5"
    type = "rw"
  [[register.field]]
    name = "BUS_ERROR"
    bits = "4"
    type = "rw"
  [[register.field]]
    name = "FORCE_HANG"
    bits = "3"
    type = "rw"
  [[register.field]]
    name = "HANG"
    bits = "2"
    type = "rw"
  [[register.field]]
    name = "END_OF_TILE"
    bits = "1"
    type = "rw"
  [[register.field]]
    name = "END_OF_FRAME"
    bits = "0"
    type = "rw"
[[register]]
  name = "PP1_WRITE_BOUNDARY_ENABLE"
  type = "rw"
  width = 32
  description = "Write Boundary Enable Register"
  default = "0x00000000"
  offset = "0x0000B040"
  [[register.field]]
    name = "RESERVED"
    bits = "31:1"
    type = "rw"
[[register]]
  name = "PP1_WRITE_BOUNDARY_LOW"
  type = "rw"
  width = 32
  description = "Write Boundary Low Register"
  default = "0x00000000"
  offset = "0x0000B044"
  [[register.field]]
    name = "WRITE_BOUNDARY_LOW"
    bits = "31:8"
    type = "rw"
  [[register.field]]
    name = "RESERVED"
    bits = "7:0"
    type = "rw"
[[register]]
  name = "PP1_WRITE_BOUNDARY_HIGH"
  type = "rw"
  width = 32
  description = "Write Boundary High Register"
  default = "0x00000000"
  offset = "0x0000B048"
  [[register.field]]
    name = "WRITE_BOUNDARY_HIGH"
    bits = "31:8"
    type = "rw"
[[register]]
  name = "PP1_WRITE_BOUNDARY_ADDRESS"
  type = "rw"
  width = 32
  description = "Write Boundary Address Register"
  default = "0x00000000"
  offset = "0x0000B04C"
  [[register.field]]
    name = "WRITE_BOUNDARY_ADDRESS"
    bits = "31:2"
    type = "rw"
[[register]]
  name = "PP1_BUS_ERROR_STATUS"
  type = "rw"
  width = 32
  description = "Bus Error Status Register"
  default = "0x00000000"
  offset = "0x0000B050"
  [[register.field]]
    name = "RESERVED"
    bits = "31:10"
    type = "rw"
  [[register.field]]
    name = "READ_ERROR_ID"
    bits = "9:6"
    type = "rw"
  [[register.field]]
    name = "WRITE_ERROR_ID"
    bits = "5:2"
    type = "rw"
  [[register.field]]
    name = "READ_ERROR"
    bits = "1"
    type = "rw"
  [[register.field]]
    name = "WRITE_ERROR"
    bits = "0"
    type = "rw"
[[register]]
  name = "PP1_WATCHDOG_DISABLE"
  type = "rw"
  width = 32
  description = "Watchdog Disable Register"
  default = "0x00000000"
  offset = "0x0000B060"
  [[register.field]]
    name = "RESERVED"
    bits = "31:1"
    type = "rw"
[[register]]
  name = "PP1_WATCHDOG_TIMEOUT"
  type = "rw"
  width = 32
  description = "Watchdog Timeout Register"
  default = "0x00000000"
  offset = "0x0000B064"
  [[register.field]]
    name = "WATCHDOG_TIMEOUT"
    bits = "31:0"
    type = "rw"
[[register]]
  name = "PP1_PERF_CNT_0_ENABLE"
  type = "rw"
  width = 32
  description = "WB2 Global Test Compare Function Register"
  default = "0x00000000"
  offset = "0x0000B080"
  [[register.field]]
    name = "RESERVED"
    bits = "31:2"
    type = "rw"
  [[register.field]]
    name = "PERF_CNT_0_LIM_EN"
    bits = "1"
    type = "rw"
    shortdesc = '''When set to 1, the PERF_CNT_0_LIMIT Register becomes active.'''
    longdesc = '''If the PERF_CNT_0_VALUE Register exceeds the Performance Counter 0 Limit value, then an interrupt is asserted and the BUS_STOPPED mechanism stops the bus. The PERF_CNT_0_VALUE Register is reset to zero if you write to PERF_CNT_0_ENABLE while the counter is enabled, that is, the PERF_CNT_0_ENABLE bit is 1.'''
  [[register.field]]
    name = "PERF_CNT_0_ENABLE"
    bits = "0"
    type = "rw"
    shortdesc = '''When set to 1, the performance counter 0 is reset to zero and activated.'''
    longdesc = '''The PERF_CNT_0_SRC Register selects the event to be counted during a frame.'''
[[register]]
  name = "PP1_PERF_CNT_0_SRC"
  type = "rw"
  width = 32
  description = "Performance Counter 0 SRC Register"
  default = "0x00000000"
  offset = "0x0000B084"
  [[register.field]]
    name = "RESERVED"
    bits = "31:6"
    type = "rw"
  [[register.field]]
    name = "PERF_CNT_0_SRC"
    bits = "5:0"
    type = "rw"
[[register]]
  name = "PP1_PERF_CNT_0_LIMIT"
  type = "rw"
  width = 32
  description = "Performance Counter 0 Limit Register"
  default = "0x00000000"
  offset = "0x0000B088"
  [[register.field]]
    name = "PERF_CNT_0_LIMIT"
    bits = "31:0"
    type = "rw"
[[register]]
  name = "PP1_PERF_CNT_0_VALUE"
  type = "rw"
  width = 32
  description = "Performance Counter 0 Value Register"
  default = "0x00000000"
  offset = "0x0000B08C"
  [[register.field]]
    name = "PERF_CNT_0_VALUE"
    bits = "31:0"
    type = "rw"
[[register]]
  name = "PP1_PERF_CNT_1_ENABLE"
  type = "rw"
  width = 32
  description = "Performance Counter 1 Enable Register"
  default = "0x00000000"
  offset = "0x0000B0A0"
  [[register.field]]
    name = "RESERVED"
    bits = "31:2"
    type = "rw"
  [[register.field]]
    name = "PERF_CNT_1_LIM_EN"
    bits = "1"
    type = "rw"
    shortdesc = '''When set to 1, the PERF_CNT_1_LIMIT Register becomes active.'''
    longdesc = '''If the PERF_CNT_1_VALUE Register exceeds the Performance Counter 1 limit value, then an interrupt is asserted and the BUS_STOPPED mechanism stops the bus. The PERF_CNT_1_VALUE Register is reset to zero if you write to PERF_CNT_1_ENABLE while the counter is enabled, that is, the PERF_CNT_1_ENABLE bit is 1.'''
  [[register.field]]
    name = "PERF_CNT_1_ENABLE"
    bits = "0"
    type = "rw"
    shortdesc = '''When set to 1, the performance counter 1 is reset to zero and activated.'''
    longdesc = '''The PERF_CNT_1_SRC Register selects the event to be counted during a frame.'''
[[register]]
  name = "PP1_PERF_CNT_1_SRC"
  type = "rw"
  width = 32
  description = "Performance Counter 1 SRC Register"
  default = "0x00000000"
  offset = "0x0000B0A4"
  [[register.field]]
    name = "RESERVED"
    bits = "31:6"
    type = "rw"
  [[register.field]]
    name = "PERF_CNT_1_SRC"
    bits = "5:0"
    type = "rw"
[[register]]
  name = "PP1_PERF_CNT_1_LIMIT"
  type = "rw"
  width = 32
  description = "Performance Counter 1 Limit Register"
  default = "0x00000000"
  offset = "0x0000B0A8"
  [[register.field]]
    name = "PERF_CNT_1_LIMIT"
    bits = "31:0"
    type = "rw"
[[register]]
  name = "PP1_PERF_CNT_1_VALUE"
  type = "rw"
  width = 32
  description = "Performance Counter 1 Value Register"
  default = "0x00000000"
  offset = "0x0000B0AC"
  [[register.field]]
    name = "PERF_CNT_1_VALUE"
    bits = "31:26"
    type = "rw"
[[register]]
  name = "PP1_PERFMON_CONTR"
  type = "rw"
  width = 32
  description = "Performance Monitor Control Register"
  default = "0x00000000"
  offset = "0x0000B0B0"
  [[register.field]]
    name = "RESERVED"
    bits = "31:26"
    type = "rw"
  [[register.field]]
    name = "NUMBER_TILE_X_DIR"
    bits = "25:16"
    type = "rw"
  [[register.field]]
    name = "RESERVED"
    bits = "15:1"
    type = "rw"
  [[register.field]]
    name = "PERFMON_ENABLE"
    bits = "0"
    type = "rw"
[[register]]
  name = "PP1_PERFMON_BASE"
  type = "rw"
  width = 32
  description = "Performance Monitor Base Address Register"
  default = "0x00000000"
  offset = "0x0000B0B4"
  [[register.field]]
    name = "RESERVED"
    bits = "2:0"
    type = "rw"
