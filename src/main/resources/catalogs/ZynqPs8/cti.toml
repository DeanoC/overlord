description = "R5 Cross Trigger Interface with to/from broadcast"
[[bank]]
  name = "CORESIGHT_R5_CTI"
  address = "0xfebf8000"
[[bank]]
  name = "CORESIGHT_R5_CTI_1"
  address = "0xfebf9000"
[[bank]]
  name = "CORESIGHT_SOC_CTI"
  address = "0xfe990000"
[[bank]]
  name = "CORESIGHT_SOC_CTI_1"
  address = "0xfe9a0000"
[[bank]]
  name = "CORESIGHT_SOC_CTI_2"
  address = "0xfe9b0000"
[[register]]
  name = "CTICONTROL"
  type = "rw"
  width = 32
  description = "The CTI Control Register enables the CTI."
  default = "0x00000000"
  offset = "0x00000000"
  [[register.field]]
    name = "GLBEN"
    bits = "0"
    type = "rw"
[[register]]
  name = "CTIINTACK"
  type = "wo"
  width = 32
  description = "The CTI Interrupt Acknowledge Register is write-only. Any bits written as a 1 cause the ctitrigout output signal to be acknowledged. The acknowledgement is cleared when MAPTRIGOUT is deactivated. This register is used when the ctitrigout is used as a sticky output, that is, no hardware acknowledge is supplied, and a software acknowledge is required."
  default = "0x00000000"
  offset = "0x00000010"
  [[register.field]]
    name = "INTACK"
    bits = "7:0"
    type = "wo"
    shortdesc = '''Acknowledges the corresponding ctitrigout output.'''
    longdesc = '''There is one bit of the register for each ctitrigout output.When a 1 is written to a bit in this register, the corresponding ctitrigout is acknowledged and is cleared when MAPTRIGOUT is LOW. Writing a 0 to any of the bits in this register has no effect.'''
[[register]]
  name = "CTIAPPSET"
  type = "wo"
  width = 32
  description = "The CTI Application Trigger Set Register is read/write. A write to this register causes a channel event to be raised, corresponding to the bit written to."
  default = "0x00000000"
  offset = "0x00000014"
  [[register.field]]
    name = "APPSET"
    bits = "3:0"
    type = "wo"
    shortdesc = '''Setting a bit HIGH generates a channel event for the selected channel.'''
    longdesc = '''There is one bit of the register for each channel.Read: 0 = application trigger inactive (reset). 1 = application trigger active.Write: 0 = no effect. 1 = generate channel event.'''
[[register]]
  name = "CTIAPPCLEAR"
  type = "wo"
  width = 32
  description = "The CTI Interrupt Acknowledge Register is write-only. A write to this register causes a channel event to be cleared, corresponding to the bit written to."
  default = "0x00000000"
  offset = "0x00000018"
  [[register.field]]
    name = "APPCLEAR"
    bits = "3:0"
    type = "wo"
    shortdesc = '''Clears corresponding bits in the CTIAPPSET register.'''
    longdesc = '''There is one bit of the register for each channel.When a 1 is written to a bit in this register, the corresponding application trigger is disabled in the CTIAPPSET register. Writing a 0 to any of the bits in this register has no effect.'''
[[register]]
  name = "CTIAPPPULSE"
  type = "wo"
  width = 32
  description = "The CTI Application Pulse Register is write-only. A write to this register causes a channel event pulse, one cticlk period, to be generated, corresponding to the bit written to. The pulse external to the ECT can be extended to multi-cycle by the handshaking interface circuits. This register clears itself immediately, so it can be repeatedly written to without software having to clear it."
  default = "0x00000000"
  offset = "0x0000001C"
  [[register.field]]
    name = "APPULSE"
    bits = "3:0"
    type = "wo"
    shortdesc = '''Setting a bit HIGH generates a channel event pulse for the selected channel.'''
    longdesc = '''There is one bit of the register for each channel.When a 1 is written to a bit in this register, a corresponding channel event pulse is generated for one cticlk period. Writing a 0 to any of the bits in this register has no effect.'''
[[register]]
  name = "CTIINEN0"
  type = "rw"
  width = 32
  description = "The CTI Trigger 0 to Channel Enable Register enables the signalling of an event on CTM channels when the core issues a trigger, ctitrigin, to the CTI. Within this register there is one bit for each of the four channels implemented. This register does not affect the application trigger operations."
  default = "0x00000000"
  offset = "0x00000020"
  [[register.field]]
    name = "TRIGINEN"
    bits = "3:0"
    type = "rw"
    shortdesc = '''Enables a cross trigger event to the corresponding channel when an ctitrigin is activated.'''
    longdesc = '''There is one bit of the field for each of the four channels.When a 1 is written to a bit in this register, it enables the ctitrigin signal to generate an event on the respective channel of the CTM. For example, TRIGINEN[0] set to 1 enables ctitrigin onto channel 0. Writing a 0 to any of the bits in this register disables the ctitrigin signal from generating an event on the respective channel of the CTM.Reading this register returns the programmed value.'''
[[register]]
  name = "CTIINEN1"
  type = "rw"
  width = 32
  description = "The CTI Trigger 1 to Channel Enable Register enables the signalling of an event on CTM channels when the core issues a trigger, ctitrigin, to the CTI. Within this register there is one bit for each of the four channels implemented. This register does not affect the application trigger operations."
  default = "0x00000000"
  offset = "0x00000024"
  [[register.field]]
    name = "TRIGINEN"
    bits = "3:0"
    type = "rw"
    shortdesc = '''Enables a cross trigger event to the corresponding channel when an ctitrigin is activated.'''
    longdesc = '''There is one bit of the field for each of the four channels.When a 1 is written to a bit in this register, it enables the ctitrigin signal to generate an event on the respective channel of the CTM. For example, TRIGINEN[0] set to 1 enables ctitrigin onto channel 0. Writing a 0 to any of the bits in this register disables the ctitrigin signal from generating an event on the respective channel of the CTM.Reading this register returns the programmed value.'''
[[register]]
  name = "CTIINEN2"
  type = "rw"
  width = 32
  description = "The CTI Trigger to Channel Enable Register 0 enables the signalling of an event on CTM channels when the core issues a trigger, ctitrigin, to the CTI. Within this register there is one bit for each of the four channels implemented. This register does not affect the application trigger operations."
  default = "0x00000000"
  offset = "0x00000028"
  [[register.field]]
    name = "TRIGINEN"
    bits = "3:0"
    type = "rw"
    shortdesc = '''Enables a cross trigger event to the corresponding channel when an ctitrigin is activated.'''
    longdesc = '''There is one bit of the field for each of the four channels.When a 1 is written to a bit in this register, it enables the ctitrigin signal to generate an event on the respective channel of the CTM. For example, TRIGINEN[0] set to 1 enables ctitrigin onto channel 0. Writing a 0 to any of the bits in this register disables the ctitrigin signal from generating an event on the respective channel of the CTM.Reading this register returns the programmed value.'''
[[register]]
  name = "CTIINEN3"
  type = "rw"
  width = 32
  description = "The CTI Trigger to Channel Enable Register 0 enables the signalling of an event on CTM channels when the core issues a trigger, ctitrigin, to the CTI. Within this register there is one bit for each of the four channels implemented. This register does not affect the application trigger operations."
  default = "0x00000000"
  offset = "0x0000002C"
  [[register.field]]
    name = "TRIGINEN"
    bits = "3:0"
    type = "rw"
    shortdesc = '''Enables a cross trigger event to the corresponding channel when an ctitrigin is activated.'''
    longdesc = '''There is one bit of the field for each of the four channels.When a 1 is written to a bit in this register, it enables the ctitrigin signal to generate an event on the respective channel of the CTM. For example, TRIGINEN[0] set to 1 enables ctitrigin onto channel 0. Writing a 0 to any of the bits in this register disables the ctitrigin signal from generating an event on the respective channel of the CTM.Reading this register returns the programmed value.'''
[[register]]
  name = "CTIINEN4"
  type = "rw"
  width = 32
  description = "The CTI Trigger to Channel Enable Register 0 enables the signalling of an event on CTM channels when the core issues a trigger, ctitrigin, to the CTI. Within this register there is one bit for each of the four channels implemented. This register does not affect the application trigger operations."
  default = "0x00000000"
  offset = "0x00000030"
  [[register.field]]
    name = "TRIGINEN"
    bits = "3:0"
    type = "rw"
    shortdesc = '''Enables a cross trigger event to the corresponding channel when an ctitrigin is activated.'''
    longdesc = '''There is one bit of the field for each of the four channels.When a 1 is written to a bit in this register, it enables the ctitrigin signal to generate an event on the respective channel of the CTM. For example, TRIGINEN[0] set to 1 enables ctitrigin onto channel 0. Writing a 0 to any of the bits in this register disables the ctitrigin signal from generating an event on the respective channel of the CTM.Reading this register returns the programmed value.'''
[[register]]
  name = "CTIINEN5"
  type = "rw"
  width = 32
  description = "The CTI Trigger to Channel Enable Register 0 enables the signalling of an event on CTM channels when the core issues a trigger, ctitrigin, to the CTI. Within this register there is one bit for each of the four channels implemented. This register does not affect the application trigger operations."
  default = "0x00000000"
  offset = "0x00000034"
  [[register.field]]
    name = "TRIGINEN"
    bits = "3:0"
    type = "rw"
    shortdesc = '''Enables a cross trigger event to the corresponding channel when an ctitrigin is activated.'''
    longdesc = '''There is one bit of the field for each of the four channels.When a 1 is written to a bit in this register, it enables the ctitrigin signal to generate an event on the respective channel of the CTM. For example, TRIGINEN[0] set to 1 enables ctitrigin onto channel 0. Writing a 0 to any of the bits in this register disables the ctitrigin signal from generating an event on the respective channel of the CTM.Reading this register returns the programmed value.'''
[[register]]
  name = "CTIINEN6"
  type = "rw"
  width = 32
  description = "The CTI Trigger to Channel Enable Register 0 enables the signalling of an event on CTM channels when the core issues a trigger, ctitrigin, to the CTI. Within this register there is one bit for each of the four channels implemented. This register does not affect the application trigger operations."
  default = "0x00000000"
  offset = "0x00000038"
  [[register.field]]
    name = "TRIGINEN"
    bits = "3:0"
    type = "rw"
    shortdesc = '''Enables a cross trigger event to the corresponding channel when an ctitrigin is activated.'''
    longdesc = '''There is one bit of the field for each of the four channels.When a 1 is written to a bit in this register, it enables the ctitrigin signal to generate an event on the respective channel of the CTM. For example, TRIGINEN[0] set to 1 enables ctitrigin onto channel 0. Writing a 0 to any of the bits in this register disables the ctitrigin signal from generating an event on the respective channel of the CTM.Reading this register returns the programmed value.'''
[[register]]
  name = "CTIINEN7"
  type = "rw"
  width = 32
  description = "The CTI Trigger to Channel Enable Register 0 enables the signalling of an event on CTM channels when the core issues a trigger, ctitrigin, to the CTI. Within this register there is one bit for each of the four channels implemented. This register does not affect the application trigger operations."
  default = "0x00000000"
  offset = "0x0000003C"
  [[register.field]]
    name = "TRIGINEN"
    bits = "3:0"
    type = "rw"
    shortdesc = '''Enables a cross trigger event to the corresponding channel when an ctitrigin is activated.'''
    longdesc = '''There is one bit of the field for each of the four channels.When a 1 is written to a bit in this register, it enables the ctitrigin signal to generate an event on the respective channel of the CTM. For example, TRIGINEN[0] set to 1 enables ctitrigin onto channel 0. Writing a 0 to any of the bits in this register disables the ctitrigin signal from generating an event on the respective channel of the CTM.Reading this register returns the programmed value.'''
[[register]]
  name = "CTIOUTEN0"
  type = "rw"
  width = 32
  description = "The CTI Channel to Trigger 0 Enable Registers define which channels can generate a ctitrigout[0] output. Within this register there is one bit for each of the four channels implemented. This register affects the mapping from application trigger to trigger outputs."
  default = "0x00000000"
  offset = "0x000000A0"
  [[register.field]]
    name = "TRIGOUTEN"
    bits = "3:0"
    type = "rw"
    shortdesc = '''Changing the value of this bit from a 0 to a 1 enables a channel event for the corresponding channel to generate a ctitrigout[1] output.'''
    longdesc = '''There is one bit of the field for each of the four channels.When a 1 is written to a bit in this register, the channel input (ctichin) from the CTM is routed to the ctitrigout output. For example, enabling bit 0 enables ctichin[0] to cause a trigger event on the ctitrigout[0] output. When a 0 is written to any of the bits in this register, the channel input (ctichin) from the CTM is not routed to the ctitrigout output.Reading this register returns the programmed value.'''
[[register]]
  name = "CTIOUTEN1"
  type = "rw"
  width = 32
  description = "The CTI Channel to Trigger 1 Enable Registers define which channels can generate a ctitrigout[1] output. Within this register there is one bit for each of the four channels implemented. This register affects the mapping from application trigger to trigger outputs."
  default = "0x00000000"
  offset = "0x000000A4"
  [[register.field]]
    name = "TRIGOUTEN"
    bits = "3:0"
    type = "rw"
    shortdesc = '''Changing the value of this bit from a 0 to a 1 enables a channel event for the corresponding channel to generate a ctitrigout[1] output.'''
    longdesc = '''There is one bit of the field for each of the four channels.When a 1 is written to a bit in this register, the channel input (ctichin) from the CTM is routed to the ctitrigout output. For example, enabling bit 0 enables ctichin[0] to cause a trigger event on the ctitrigout[1] output. When a 0 is written to any of the bits in this register, the channel input (ctichin) from the CTM is not routed to the ctitrigout output.Reading this register returns the programmed value.'''
[[register]]
  name = "CTIOUTEN2"
  type = "rw"
  width = 32
  description = "The CTI Channel to Trigger 2 Enable Registers define which channels can generate a ctitrigout[2] output. Within this register there is one bit for each of the four channels implemented. This register affects the mapping from application trigger to trigger outputs."
  default = "0x00000000"
  offset = "0x000000A8"
  [[register.field]]
    name = "TRIGOUTEN"
    bits = "3:0"
    type = "rw"
    shortdesc = '''Changing the value of this bit from a 0 to a 1 enables a channel event for the corresponding channel to generate a ctitrigout[2] output.'''
    longdesc = '''There is one bit of the field for each of the four channels.When a 1 is written to a bit in this register, the channel input (ctichin) from the CTM is routed to the ctitrigout output. For example, enabling bit 0 enables ctichin[0] to cause a trigger event on the ctitrigout[2] output. When a 0 is written to any of the bits in this register, the channel input (ctichin) from the CTM is not routed to the ctitrigout output.Reading this register returns the programmed value.'''
[[register]]
  name = "CTIOUTEN3"
  type = "rw"
  width = 32
  description = "The CTI Channel to Trigger 3 Enable Registers define which channels can generate a ctitrigout[3] output. Within this register there is one bit for each of the four channels implemented. This register affects the mapping from application trigger to trigger outputs."
  default = "0x00000000"
  offset = "0x000000AC"
  [[register.field]]
    name = "TRIGOUTEN"
    bits = "3:0"
    type = "rw"
    shortdesc = '''Changing the value of this bit from a 0 to a 1 enables a channel event for the corresponding channel to generate a ctitrigout[3] output.'''
    longdesc = '''There is one bit of the field for each of the four channels.When a 1 is written to a bit in this register, the channel input (ctichin) from the CTM is routed to the ctitrigout output. For example, enabling bit 0 enables ctichin[0] to cause a trigger event on the ctitrigout[3] output. When a 0 is written to any of the bits in this register, the channel input (ctichin) from the CTM is not routed to the ctitrigout output.Reading this register returns the programmed value.'''
[[register]]
  name = "CTIOUTEN4"
  type = "rw"
  width = 32
  description = "The CTI Channel to Trigger 4 Enable Registers define which channels can generate a ctitrigout[4] output. Within this register there is one bit for each of the four channels implemented. This register affects the mapping from application trigger to trigger outputs."
  default = "0x00000000"
  offset = "0x000000B0"
  [[register.field]]
    name = "TRIGOUTEN"
    bits = "3:0"
    type = "rw"
    shortdesc = '''Changing the value of this bit from a 0 to a 1 enables a channel event for the corresponding channel to generate a ctitrigout[4] output.'''
    longdesc = '''There is one bit of the field for each of the four channels.When a 1 is written to a bit in this register, the channel input (ctichin) from the CTM is routed to the ctitrigout output. For example, enabling bit 0 enables ctichin[0] to cause a trigger event on the ctitrigout[4] output. When a 0 is written to any of the bits in this register, the channel input (ctichin) from the CTM is not routed to the ctitrigout output.Reading this register returns the programmed value.'''
[[register]]
  name = "CTIOUTEN5"
  type = "rw"
  width = 32
  description = "The CTI Channel to Trigger 5 Enable Registers define which channels can generate a ctitrigout[5] output. Within this register there is one bit for each of the four channels implemented. This register affects the mapping from application trigger to trigger outputs."
  default = "0x00000000"
  offset = "0x000000B4"
  [[register.field]]
    name = "TRIGOUTEN"
    bits = "3:0"
    type = "rw"
    shortdesc = '''Changing the value of this bit from a 0 to a 1 enables a channel event for the corresponding channel to generate a ctitrigout[5] output.'''
    longdesc = '''There is one bit of the field for each of the four channels.When a 1 is written to a bit in this register, the channel input (ctichin) from the CTM is routed to the ctitrigout output. For example, enabling bit 0 enables ctichin[0] to cause a trigger event on the ctitrigout[5] output. When a 0 is written to any of the bits in this register, the channel input (ctichin) from the CTM is not routed to the ctitrigout output.Reading this register returns the programmed value.'''
[[register]]
  name = "CTIOUTEN6"
  type = "rw"
  width = 32
  description = "The CTI Channel to Trigger 6 Enable Registers define which channels can generate a ctitrigout[6] output. Within this register there is one bit for each of the four channels implemented. This register affects the mapping from application trigger to trigger outputs."
  default = "0x00000000"
  offset = "0x000000B8"
  [[register.field]]
    name = "TRIGOUTEN"
    bits = "3:0"
    type = "rw"
    shortdesc = '''Changing the value of this bit from a 0 to a 1 enables a channel event for the corresponding channel to generate a ctitrigout[6] output.'''
    longdesc = '''There is one bit of the field for each of the four channels.When a 1 is written to a bit in this register, the channel input (ctichin) from the CTM is routed to the ctitrigout output. For example, enabling bit 0 enables ctichin[0] to cause a trigger event on the ctitrigout[6] output. When a 0 is written to any of the bits in this register, the channel input (ctichin) from the CTM is not routed to the ctitrigout output.Reading this register returns the programmed value.'''
[[register]]
  name = "CTIOUTEN7"
  type = "rw"
  width = 32
  description = "The CTI Channel to Trigger 7 Enable Registers define which channels can generate a ctitrigout[7] output. Within this register there is one bit for each of the four channels implemented. This register affects the mapping from application trigger to trigger outputs."
  default = "0x00000000"
  offset = "0x000000BC"
  [[register.field]]
    name = "TRIGOUTEN"
    bits = "3:0"
    type = "rw"
    shortdesc = '''Changing the value of this bit from a 0 to a 1 enables a channel event for the corresponding channel to generate a ctitrigout[7] output.'''
    longdesc = '''There is one bit of the field for each of the four channels.When a 1 is written to a bit in this register, the channel input (ctichin) from the CTM is routed to the ctitrigout output. For example, enabling bit 0 enables ctichin[0] to cause a trigger event on the ctitrigout[7] output. When a 0 is written to any of the bits in this register, the channel input (ctichin) from the CTM is not routed to the ctitrigout output.Reading this register returns the programmed value.'''
[[register]]
  name = "CTITRIGINSTATUS"
  type = "ro"
  width = 32
  description = "The CTI Trigger In Status Register provides the status of the ctitrigin inputs."
  default = "0x00000000"
  offset = "0x00000130"
  [[register.field]]
    name = "TRIGINSTATUS"
    bits = "7:0"
    type = "ro"
    shortdesc = '''Shows the status of the ctitrigin inputs.'''
    longdesc = '''1 = ctitrigin is active. 0 = ctitrigin is inactive.Because the register provides a view of the raw ctitrigin inputs, the reset value is unknown. There is one bit of the field for each trigger input.'''
[[register]]
  name = "CTITRIGOUTSTATUS"
  type = "ro"
  width = 32
  description = "The CTI Trigger Out Status Register provides the status of the ctitrigout outputs."
  default = "0x00000000"
  offset = "0x00000134"
  [[register.field]]
    name = "TRIGOUTSTATUS"
    bits = "7:0"
    type = "ro"
    shortdesc = '''Shows the status of the ctitrigout outputs.'''
    longdesc = '''1 = ctitrigout is active. 0 = ctitrigout is inactive.There is one bit of the field for each trigger output.'''
[[register]]
  name = "CTICHINSTATUS"
  type = "ro"
  width = 32
  description = "The CTI Channel In Status Register provides the status of the ctichin inputs."
  default = "0x00000000"
  offset = "0x00000138"
  [[register.field]]
    name = "CTICHINSTATUS"
    bits = "3:0"
    type = "ro"
    shortdesc = '''Shows the status of the ctichin inputs.'''
    longdesc = '''1 = ctichin is active. 0 = ctichin is inactive.Because the register provides a view of the raw ctichin inputs, the reset value is unknown. There is one bit of the field for each channel input.'''
[[register]]
  name = "CTICHOUTSTATUS"
  type = "ro"
  width = 32
  description = "The CTI Channel Out Status Register provides the status of the CTI ctichout outputs."
  default = "0x00000000"
  offset = "0x0000013C"
  [[register.field]]
    name = "CTICHOUTSTATUS"
    bits = "3:0"
    type = "ro"
    shortdesc = '''Shows the status of the ctichout outputs.'''
    longdesc = '''1 = ctichout is active. 0 = ctichout is inactive.There is one bit of the field for each channel output.'''
[[register]]
  name = "CTIGATE"
  type = "rw"
  width = 32
  description = "The Gate Enable Register prevents the channels from propagating through the CTM to other CTIs. This enables local cross-triggering, for example for causing an interrupt when the ETM trigger occurs. It can be used effectively with CTIAPPSET, CTIAPPCLEAR, and CTIAPPPULSE for asserting trigger outputs by asserting channels, without affecting the rest of the system. On reset, this register is 0xF, and channel propagation is enabled."
  default = "0x0000000F"
  offset = "0x00000140"
  [[register.field]]
    name = "CTIGATEEN"
    bits = "3:0"
    type = "rw"
    shortdesc = '''Enable CTICHOUT3-0 respectively.'''
    longdesc = '''Set to 0 to disable channel propagation.'''
[[register]]
  name = "ASICCTL"
  type = "rw"
  width = 32
  description = "Implementation-defined ASIC control, value written to the register is output on asicctl[7:0]."
  default = "0x00000000"
  offset = "0x00000144"
  [[register.field]]
    name = "ASICCTL"
    bits = "7:0"
    type = "rw"
    shortdesc = '''Implementation-defined ASIC control, value written to the register is output on asicctl[7:0].'''
    longdesc = '''If external multiplexing of trigger signals is implemented then the number of multiplexed signals on each trigger must be reflected within the Device ID Register. This is done within a Verilog define EXTMUXNUM.'''
[[register]]
  name = "ITCHINACK"
  type = "wo"
  width = 32
  description = "This register is a write-only register. It can be used to set the value of the CTCHINACK outputs."
  default = "0x00000000"
  offset = "0x00000EDC"
  [[register.field]]
    name = "CTCHINACK"
    bits = "3:0"
    type = "wo"
[[register]]
  name = "ITTRIGINACK"
  type = "wo"
  width = 32
  description = "This register is a write-only register. It can be used to set the value of the CTTRIGINACK outputs."
  default = "0x00000000"
  offset = "0x00000EE0"
  [[register.field]]
    name = "CTTRIGINACK"
    bits = "7:0"
    type = "wo"
[[register]]
  name = "ITCHOUT"
  type = "wo"
  width = 32
  description = "This register is a write-only register. It can be used to set the value of the CTCHOUT outputs."
  default = "0x00000000"
  offset = "0x00000EE4"
  [[register.field]]
    name = "CTCHOUT"
    bits = "3:0"
    type = "wo"
[[register]]
  name = "ITTRIGOUT"
  type = "wo"
  width = 32
  description = "This register is a write-only register. It can be used to set the value of the CTTRIGOUT outputs."
  default = "0x00000000"
  offset = "0x00000EE8"
  [[register.field]]
    name = "CTTRIGOUT"
    bits = "7:0"
    type = "wo"
[[register]]
  name = "ITCHOUTACK"
  type = "ro"
  width = 32
  description = "This register is a read-only register. It can be used to read the values of the CTCHOUTACK inputs."
  default = "0x00000000"
  offset = "0x00000EEC"
  [[register.field]]
    name = "CTCHOUTACK"
    bits = "3:0"
    type = "ro"
[[register]]
  name = "ITTRIGOUTACK"
  type = "ro"
  width = 32
  description = "This register is a read-only register. It can be used to read the values of the CTTRIGOUTACK inputs."
  default = "0x00000000"
  offset = "0x00000EF0"
  [[register.field]]
    name = "CTTRIGOUTACK"
    bits = "7:0"
    type = "ro"
[[register]]
  name = "ITCHIN"
  type = "ro"
  width = 32
  description = "This register is a read-only register. It can be used to read the values of the CTCHIN inputs."
  default = "0x00000000"
  offset = "0x00000EF4"
  [[register.field]]
    name = "CTCHIN"
    bits = "3:0"
    type = "ro"
[[register]]
  name = "ITTRIGIN"
  type = "ro"
  width = 32
  description = "This register is a read-only register. It can be used to read the values of the CTTRIGIN inputs."
  default = "0x00000000"
  offset = "0x00000EF8"
  [[register.field]]
    name = "CTTRIGIN"
    bits = "7:0"
    type = "ro"
[[register]]
  name = "ITCTRL"
  type = "rw"
  width = 32
  description = "This register is used to enable topology detection. For more information see the CoreSight Architecture Specification. This register enables the component to switch from a functional mode, the default behavior, to integration mode where the inputs and outputs of the component can be directly controlled for the purpose of integration testing and topology solving. Note: When a device has been in integration mode, it might not function with the original behavior. After performing integration or topology detection, you must reset the system to ensure correct behavior of CoreSight and other connected system components that are affected by the integration or topology detection."
  default = "0x00000000"
  offset = "0x00000F00"
  [[register.field]]
    name = "IME"
    bits = "0"
    type = "rw"
[[register]]
  name = "CLAIMSET"
  type = "rw"
  width = 32
  description = "This is used in conjunction with Claim Tag Clear Register, CLAIMCLR. This register forms one half of the Claim Tag value. This location allows individual bits to be set, write, and returns the number of bits that can be set, read."
  default = "0x0000000F"
  offset = "0x00000FA0"
  [[register.field]]
    name = "CLAIMSET"
    bits = "3:0"
    type = "rw"
[[register]]
  name = "CLAIMCLR"
  type = "rw"
  width = 32
  description = "This register is used in conjunction with Claim Tag Set Register, CLAIMSET. This register forms one half of the Claim Tag value. This location enables individual bits to be cleared, write, and returns the current Claim Tag value, read."
  default = "0x00000000"
  offset = "0x00000FA4"
  [[register.field]]
    name = "CLAIMCLR"
    bits = "3:0"
    type = "rw"
[[register]]
  name = "LAR"
  type = "wo"
  width = 32
  description = "This is used to enable write access to device registers. External accesses from a debugger (paddrdbg31 = 1) are not subject to the Lock Registers. A debugger does not have to unlock the component in order to write and modify the registers in the component."
  default = "0x00000000"
  offset = "0x00000FB0"
  [[register.field]]
    name = "KEY"
    bits = "31:0"
    type = "wo"
    shortdesc = '''A write of 0xC5ACCE55 enables further write access to this device.'''
    longdesc = '''A write of any value other than 0xC5ACCE55 will have the affect of removing write access.'''
[[register]]
  name = "LSR"
  type = "ro"
  width = 32
  description = "This indicates the status of the Lock control mechanism. This lock prevents accidental writes by code under debug. When locked, write access is blocked to all registers, except the Lock Access Register.External accesses from a debugger (paddrdbg31 = 1) are not subject to the Lock Registers. This register reads as 0 when read from an external debugger (paddrdbg31 = 1)."
  default = "0x00000003"
  offset = "0x00000FB4"
  [[register.field]]
    name = "LOCKTYPE"
    bits = "2"
    type = "ro"
  [[register.field]]
    name = "LOCKGRANT"
    bits = "1"
    type = "ro"
    shortdesc = '''Returns the current status of the Lock.'''
    longdesc = '''This bit reads as 0 when read from an external debugger (paddrdbg31 = 1) since external debugger accesses are not subject to Lock Registers.'''
  [[register.field]]
    name = "LOCKEXIST"
    bits = "0"
    type = "ro"
    shortdesc = '''Indicates that a lock control mechanism exists for this device.'''
    longdesc = '''This bit reads as 0 when read from an external debugger (paddrdbg31 = 1) since external debugger accesses are not subject to Lock Registers.'''
[[register]]
  name = "AUTHSTATUS"
  type = "ro"
  width = 32
  description = "Reports what functionality is currently permitted by the authentication interface."
  default = "0x0000000A"
  offset = "0x00000FB8"
  [[register.field]]
    name = "SNID"
    bits = "7:6"
    type = "ro"
  [[register.field]]
    name = "SID"
    bits = "5:4"
    type = "ro"
  [[register.field]]
    name = "NSNID"
    bits = "3:2"
    type = "ro"
  [[register.field]]
    name = "NSID"
    bits = "1:0"
    type = "ro"
[[register]]
  name = "DEVID"
  type = "ro"
  width = 32
  description = "This register indicates the capabilities of the CTI."
  default = "0x00040800"
  offset = "0x00000FC8"
  [[register.field]]
    name = "NUMCH"
    bits = "19:16"
    type = "ro"
  [[register.field]]
    name = "NUMTRIG"
    bits = "15:8"
    type = "ro"
  [[register.field]]
    name = "EXTMUXNUM"
    bits = "4:0"
    type = "ro"
    shortdesc = '''Indicates the number of multiplexing available on Trigger Inputs and Trigger Outputs using asicctl.'''
    longdesc = '''Default value of 5'b00000 indicating no multiplexing present. Reflects the value of the Verilog `define EXTMUXNUM that the user must alter accordingly.'''
[[register]]
  name = "DEVTYPE"
  type = "ro"
  width = 32
  description = "It provides a debugger with information about the component when the Part Number field is not recognized. The debugger can then report this information."
  default = "0x00000014"
  offset = "0x00000FCC"
  [[register.field]]
    name = "SUB_TYPE"
    bits = "7:4"
    type = "ro"
  [[register.field]]
    name = "MAJOR_TYPE"
    bits = "3:0"
    type = "ro"
[[register]]
  name = "PIDR4"
  type = "ro"
  width = 32
  description = "Part of the set of Peripheral Identification registers. Contains part of the designer identity and the memory footprint indicator."
  default = "0x00000004"
  offset = "0x00000FD0"
  [[register.field]]
    name = "SIZE"
    bits = "7:4"
    type = "ro"
    shortdesc = '''This is a 4-bit value that indicates the total contiguous size of the memory window used by this component in powers of 2 from the standard 4KB.'''
    longdesc = '''If a component only requires the standard 4KB then this should read as 0x0, 4KB only, for 8KB set to 0x1, 16KB == 0x2, 32KB == 0x3, and so on.'''
  [[register.field]]
    name = "DES_2"
    bits = "3:0"
    type = "ro"
[[register]]
  name = "PIDR5"
  type = "ro"
  width = 32
  description = "Reserved"
  default = "0x00000000"
  offset = "0x00000FD4"
  [[register.field]]
    name = "RESERVED"
    bits = "31:0"
    type = "ro"
[[register]]
  name = "PIDR6"
  type = "ro"
  width = 32
  description = "Reserved"
  default = "0x00000000"
  offset = "0x00000FD8"
  [[register.field]]
    name = "RESERVED"
    bits = "31:0"
    type = "ro"
[[register]]
  name = "PIDR7"
  type = "ro"
  width = 32
  description = "Reserved"
  default = "0x00000000"
  offset = "0x00000FDC"
  [[register.field]]
    name = "RESERVED"
    bits = "31:0"
    type = "ro"
[[register]]
  name = "PIDR0"
  type = "ro"
  width = 32
  description = "Part of the set of Peripheral Identification registers. Contains part of the designer specific part number."
  default = "0x00000006"
  offset = "0x00000FE0"
  [[register.field]]
    name = "PART_0"
    bits = "7:0"
    type = "ro"
    shortdesc = '''Bits [7:0] of the component's part number.'''
    longdesc = '''This is selected by the designer of the component.'''
[[register]]
  name = "PIDR1"
  type = "ro"
  width = 32
  description = "Part of the set of Peripheral Identification registers. Contains part of the designer specific part number and part of the designer identity."
  default = "0x000000B9"
  offset = "0x00000FE4"
  [[register.field]]
    name = "DES_0"
    bits = "7:4"
    type = "ro"
  [[register.field]]
    name = "PART_1"
    bits = "3:0"
    type = "ro"
    shortdesc = '''Bits [11:8] of the component's part number.'''
    longdesc = '''This is selected by the designer of the component.'''
[[register]]
  name = "PIDR2"
  type = "ro"
  width = 32
  description = "Part of the set of Peripheral Identification registers. Contains part of the designer identity and the product revision."
  default = "0x0000004B"
  offset = "0x00000FE8"
  [[register.field]]
    name = "REVISION"
    bits = "7:4"
    type = "ro"
    shortdesc = '''The Revision field is an incremental value starting at 0x0 for the first design of this component.'''
    longdesc = '''This only increases by 1 for both major and minor revisions and is simply used as a look-up to establish the exact major/minor revision.'''
  [[register.field]]
    name = "JEDEC"
    bits = "3"
    type = "ro"
    shortdesc = '''Always set.'''
    longdesc = '''Indicates that a JEDEC assigned value is used'''
  [[register.field]]
    name = "DES_1"
    bits = "2:0"
    type = "ro"
[[register]]
  name = "PIDR3"
  type = "ro"
  width = 32
  description = "Part of the set of Peripheral Identification registers. Contains the RevAnd and Customer Modified fields."
  default = "0x00000000"
  offset = "0x00000FEC"
  [[register.field]]
    name = "REVAND"
    bits = "7:4"
    type = "ro"
    shortdesc = '''This field indicates minor errata fixes specific to this design, for example metal fixes after implementation.'''
    longdesc = '''In most cases this field is zero. It is recommended that component designers ensure this field can be changed by a metal fix if required, for example by driving it from registers that reset to zero.'''
  [[register.field]]
    name = "CMOD"
    bits = "3:0"
    type = "ro"
    shortdesc = '''Where the component is reusable IP, this value indicates if the customer has modified the behavior of the component.'''
    longdesc = '''In most cases this field is zero.'''
[[register]]
  name = "CIDR0"
  type = "ro"
  width = 32
  description = "A component identification register, that indicates that the identification registers are present."
  default = "0x0000000D"
  offset = "0x00000FF0"
  [[register.field]]
    name = "PRMBL_0"
    bits = "7:0"
    type = "ro"
[[register]]
  name = "CIDR1"
  type = "ro"
  width = 32
  description = "A component identification register, that indicates that the identification registers are present. This register also indicates the component class."
  default = "0x00000090"
  offset = "0x00000FF4"
  [[register.field]]
    name = "CLASS"
    bits = "7:4"
    type = "ro"
    shortdesc = '''Class of the component.'''
    longdesc = '''E.g. ROM table, CoreSight component etc. Constitutes bits [15:12] of the component identification.'''
  [[register.field]]
    name = "PRMBL_1"
    bits = "3:0"
    type = "ro"
[[register]]
  name = "CIDR2"
  type = "ro"
  width = 32
  description = "A component identification register, that indicates that the identification registers are present."
  default = "0x00000005"
  offset = "0x00000FF8"
  [[register.field]]
    name = "PRMBL_2"
    bits = "7:0"
    type = "ro"
[[register]]
  name = "CIDR3"
  type = "ro"
  width = 32
  description = "A component identification register, that indicates that the identification registers are present."
  default = "0x000000B1"
  offset = "0x00000FFC"
  [[register.field]]
    name = "PRMBL_3"
    bits = "7:0"
    type = "ro"
