description = "Gigabit Ethernet; GEM 0 Controller"
[[bank]]
  name = "GEM0"
  address = "0xff0b0000"
[[bank]]
  name = "GEM1"
  address = "0xff0c0000"
[[bank]]
  name = "GEM2"
  address = "0xff0d0000"
[[bank]]
  name = "GEM3"
  address = "0xff0e0000"
[[register]]
  name = "NETWORK_CONTROL"
  type = "mixed"
  width = 32
  description = "The network control register contains general MAC control functions for both receiver and transmitter."
  default = "0x00000000"
  offset = "0x00000000"
  [[register.field]]
    name = "RESERVED"
    bits = "31:26"
    type = "ro"
  [[register.field]]
    name = "RESERVED"
    bits = "25"
    type = "rw"
    shortdesc = '''Reserved.'''
    longdesc = '''Writeable register. Ignore on read.'''
  [[register.field]]
    name = "ONE_STEP_SYNC_MODE"
    bits = "24"
    type = "rw"
    shortdesc = '''1588 One Step Sync Mode.'''
    longdesc = '''Write 1 to enable. Replace timestamp field in the 1588 header for TX Sync Frames with current TSU timer value.'''
  [[register.field]]
    name = "EXT_TSU_PORT_ENABLE"
    bits = "23"
    type = "rw"
  [[register.field]]
    name = "STORE_UDP_OFFSET"
    bits = "22"
    type = "rw"
    shortdesc = '''Store UDP / TCP offset to memory.'''
    longdesc = '''Setting this bit to one will cause the upper 16-bits of the CRC of every received frame to be replaced with the offset from start of frame to the beginning of the UDP or TCP header. The lower 16-bits of the CRC are replaced with zero and reserved for future use. The offset is measured in units of 2 bytes. Set to zero for normal operation.'''
  [[register.field]]
    name = "ALT_SGMII_MODE"
    bits = "21"
    type = "rw"
    shortdesc = '''Alternative sgmii mode.'''
    longdesc = '''If asserted with sgmii_mode in the network control register the ACK bit is driven before ability detect during transfer of status information from the PHY to the MAC.'''
  [[register.field]]
    name = "PTP_UNICAST_ENA"
    bits = "20"
    type = "rw"
  [[register.field]]
    name = "TX_LPI_EN"
    bits = "19"
    type = "rw"
  [[register.field]]
    name = "FLUSH_RX_PKT_PCLK"
    bits = "18"
    type = "rw"
    shortdesc = '''Flush the next packet from the external RX DPRAM.'''
    longdesc = '''Writing one to this bit will only have an effect if the DMA is not currently writing a packet already stored in the DPRAM to memory. Self clearing register.'''
  [[register.field]]
    name = "TRANSMIT_PFC_PRIORITY_BASED_PAUSE_FRAME"
    bits = "17"
    type = "wo"
    shortdesc = '''Write a one to transmit PFC priority based pause frame.'''
    longdesc = '''Takes the values stored in the Transmit PFC Pause Register. Self clearing register.'''
  [[register.field]]
    name = "PFC_ENABLE"
    bits = "16"
    type = "rw"
    shortdesc = '''Enable PFC Priority Based Pause Reception capabilities.'''
    longdesc = '''Setting this bit will enable PFC negotiation and recognition of priority based pause frames.'''
  [[register.field]]
    name = "STORE_RX_TS"
    bits = "15"
    type = "rw"
    shortdesc = '''Store receive time stamp to memory.'''
    longdesc = '''Setting this bit to one will cause the CRC of every received frame to be replaced with the value of the nanoseconds field of the 1588 timer that was captured as the receive frame passed the message time stamp point. Set to zero for normal operation.'''
  [[register.field]]
    name = "RESERVED"
    bits = "14:13"
    type = "ro"
  [[register.field]]
    name = "TX_PAUSE_FRAME_ZERO"
    bits = "12"
    type = "wo"
    shortdesc = '''Transmit zero quantum pause frame - writing one to this bit causes a pause frame with zero quantum to be transmitted.'''
    longdesc = '''Self clearing register.'''
  [[register.field]]
    name = "TX_PAUSE_FRAME_REQ"
    bits = "11"
    type = "wo"
    shortdesc = '''Transmit pause frame - writing one to this bit causes a pause frame to be transmitted.'''
    longdesc = '''Self clearing register.'''
  [[register.field]]
    name = "TX_HALT_PCLK"
    bits = "10"
    type = "rw"
    shortdesc = '''Transmit halt - writing one to this bit halts transmission as soon as any ongoing frame transmission ends.'''
    longdesc = '''Self clearing register.'''
  [[register.field]]
    name = "TX_START_PCLK"
    bits = "9"
    type = "rw"
    shortdesc = '''Start transmission - writing one to this bit starts transmission.'''
    longdesc = '''Self clearing register.'''
  [[register.field]]
    name = "BACK_PRESSURE"
    bits = "8"
    type = "rw"
    shortdesc = '''Back pressure if set in 10M or 100M half duplex mode will force collisions on all received frames.'''
    longdesc = '''Ignored in gigabit half duplex mode.'''
  [[register.field]]
    name = "STATS_WRITE_EN"
    bits = "7"
    type = "rw"
  [[register.field]]
    name = "INC_ALL_STATS_REGS"
    bits = "6"
    type = "rw"
    shortdesc = '''Incremental statistics registers - this bit is write only.'''
    longdesc = '''Writing a one increments all the statistics registers by one for test purposes. Self clearing register.'''
  [[register.field]]
    name = "CLEAR_ALL_STATS_REGS"
    bits = "5"
    type = "rw"
    shortdesc = '''Clear statistics registers - this bit is write only.'''
    longdesc = '''Writing a one clears the statistics registers. Self clearing register.'''
  [[register.field]]
    name = "MAN_PORT_EN"
    bits = "4"
    type = "rw"
    shortdesc = '''Management port enable - set to one to enable the management port.'''
    longdesc = '''When zero forces mdio to high impedance state and mdc low.'''
  [[register.field]]
    name = "ENABLE_TRANSMIT"
    bits = "3"
    type = "rw"
    shortdesc = '''Transmit enable - when set, it enables the GEM transmitter to send data.'''
    longdesc = '''When reset transmission will stop immediately, the transmit pipeline and control registers will be cleared and the transmit queue pointer register will reset to point to the start of the transmit descriptor list.'''
  [[register.field]]
    name = "ENABLE_RECEIVE"
    bits = "2"
    type = "rw"
    shortdesc = '''Receive enable - when set, it enables the GEM to receive data.'''
    longdesc = '''When reset frame reception will stop immediately and the receive pipeline will be cleared. The receive queue pointer register is unaffected.'''
  [[register.field]]
    name = "LOOPBACK_LOCAL"
    bits = "1"
    type = "rw"
    shortdesc = '''Loopback local - asserts the loopback_local signal to the system clock generator.'''
    longdesc = '''Also connects txd to rxd, tx_en to rx_dv and forces full duplex mode. Bit 11 of the network configuration register must be set low to disable TBI mode when in internal loopback. rx_clk and tx_clk may malfunction as the GEM is switched into and out of internal loopback. It is important that receive and transmit circuits have already been disabled when making the switch into and out of internal loopback. Local loopback functionality is optional and may not be supported by some instantiations of the GEM.'''
  [[register.field]]
    name = "LOOPBACK"
    bits = "0"
    type = "rw"
[[register]]
  name = "NETWORK_CONFIG"
  type = "rw"
  width = 32
  description = "The network configuration register contains functions for setting the mode of operation for the Gigabit Ethernet MAC."
  default = "0x00280000"
  offset = "0x00000004"
  [[register.field]]
    name = "UNI_DIRECTION_ENABLE"
    bits = "31"
    type = "rw"
    shortdesc = '''Uni-direction-enable.'''
    longdesc = '''When low the PCS will transmit idle symbols if the link goes down. When high the PCS can transmit frame data when the link is down.'''
  [[register.field]]
    name = "IGNORE_IPG_RX_ER"
    bits = "30"
    type = "rw"
    shortdesc = '''Ignore IPG rx_er.'''
    longdesc = '''When set rx_er has no effect on the GEMs operation when rx_dv is low. Set this when using the RGMII wrapper in half-duplex mode.'''
  [[register.field]]
    name = "NSP_CHANGE"
    bits = "29"
    type = "rw"
    shortdesc = '''Receive bad preamble.'''
    longdesc = '''When set frames with non-standard preamble are not rejected.'''
  [[register.field]]
    name = "IPG_STRETCH_ENABLE"
    bits = "28"
    type = "rw"
  [[register.field]]
    name = "SGMII_MODE_ENABLE"
    bits = "27"
    type = "rw"
    shortdesc = '''SGMII mode enable - changes behaviour of the auto-negotiation advertisement and link partner ability registers to meet the requirements of SGMII and reduces the duration of the link timer from 10 ms to 1.'''
    longdesc = '''6 ms.'''
  [[register.field]]
    name = "IGNORE_RX_FCS"
    bits = "26"
    type = "rw"
    shortdesc = '''Ignore RX FCS - when set frames with FCS/CRC errors will not be rejected.'''
    longdesc = '''FCS error statistics will still be collected for frames with bad FCS and FCS status will be recorded in frame's DMA descriptor. For normal operation this bit must be set to zero.'''
  [[register.field]]
    name = "EN_HALF_DUPLEX_RX"
    bits = "25"
    type = "rw"
  [[register.field]]
    name = "RECEIVE_CHECKSUM_OFFLOAD_ENABLE"
    bits = "24"
    type = "rw"
    shortdesc = '''Receive checksum offload enable - when set, the receive checksum engine is enabled.'''
    longdesc = '''Frames with bad IP, TCP or UDP checksums are discarded.'''
  [[register.field]]
    name = "DISABLE_COPY_OF_PAUSE_FRAMES"
    bits = "23"
    type = "rw"
    shortdesc = '''Disable copy of pause frames - set to one to prevent valid pause frames being copied to memory.'''
    longdesc = '''When set, pause frames are not copied to memory regardless of the state of the copy all frames bit; whether a hash match is found or whether a type ID match is identified. If a destination address match is found the pause frame will be copied to memory. Note that valid pause frames received will still increment pause statistics and pause the transmission of frames as required.'''
  [[register.field]]
    name = "DATA_BUS_WIDTH"
    bits = "22:21"
    type = "rw"
    shortdesc = '''Data bus width - set according to AMBA AXI or external FIFO data bus width.'''
    longdesc = '''00: 32 bit data bus width (External FIFO mode) 01: 64 bit AMBA AXI data bus width (AMBA AXI DMA mode) 10: Reserved 11: Reserved'''
  [[register.field]]
    name = "MDC_CLOCK_DIVISION"
    bits = "20:18"
    type = "rw"
    shortdesc = '''MDC clock division - set according to pclk speed.'''
    longdesc = '''These three bits determine the number pclk will be divided by to generate MDC. For conformance with the 802.3 specification, MDC must not exceed 2.5 MHz (MDC is only active during MDIO read and write operations). The reset value for this can be changed by defining a new value for gem_mdc_clock_div in gem_defs.v000: divide pclk by 8 (pclk up to 20 MHz)001: divide pclk by 16 (pclk up to 40 MHz)010: divide pclk by 32 (pclk up to 80 MHz)011: divide pclk by 48 (pclk up to 120MHz)100: divide pclk by 64 (pclk up to 160 MHz)101: divide pclk by 96 (pclk up to 240 MHz)110: divide pclk by 128 (pclk up to 320 MHz)111: divide pclk by 224 (pclk up to 540 MHz).Note. The reset value of this field is equal to the gem_mdc_clock_div define, which is user configurable.'''
  [[register.field]]
    name = "FCS_REMOVE"
    bits = "17"
    type = "rw"
    shortdesc = '''FCS remove - setting this bit will cause received frames to be written to memory without their frame check sequence (last 4 bytes).'''
    longdesc = '''The frame length indicated will be reduced by four bytes in this mode.'''
  [[register.field]]
    name = "LENGTH_FIELD_ERROR_FRAME_DISCARD"
    bits = "16"
    type = "rw"
    shortdesc = '''Length field error frame discard - setting this bit causes frames with a measured length shorter than the extracted length field (as indicated by bytes 13 and 14 in a non-VLAN tagged frame) to be discarded.'''
    longdesc = '''This only applies to frames with a length field less than 0x0600.'''
  [[register.field]]
    name = "RECEIVE_BUFFER_OFFSET"
    bits = "15:14"
    type = "rw"
  [[register.field]]
    name = "PAUSE_ENABLE"
    bits = "13"
    type = "rw"
    shortdesc = '''Pause enable - when set, transmission will pause if a non zero 802.'''
    longdesc = '''3 classic pause frame is received and PFC has not been negotiated.'''
  [[register.field]]
    name = "RETRY_TEST"
    bits = "12"
    type = "rw"
    shortdesc = '''Retry test - must be set to zero for normal operation.'''
    longdesc = '''If set to one the backoff between collisions will always be one slot time. Setting this bit to one helps test the too many retries condition. Also used in the pause frame tests to reduce the pause counter's decrement time from 512 bit times, to every rx_clk cycle.'''
  [[register.field]]
    name = "PCS_SELECT"
    bits = "11"
    type = "rw"
    shortdesc = '''PCS select - selects between MII/GMII and TBI.'''
    longdesc = '''Must be set for SGMII operation.0: GMII/MII interface enabled, TBI disabled1: TBI enabled, GMII/MII disabled'''
  [[register.field]]
    name = "GIGABIT_MODE_ENABLE"
    bits = "10"
    type = "rw"
    shortdesc = '''Gigabit mode enable - setting this bit configures the GEM for 1000 Mbps operation.'''
    longdesc = '''0: 10/100 operation using MII or TBI interface1: Gigabit operation using GMII or TBI interface'''
  [[register.field]]
    name = "EXTERNAL_ADDRESS_MATCH_ENABLE"
    bits = "9"
    type = "rw"
  [[register.field]]
    name = "RECEIVE_1536_BYTE_FRAMES"
    bits = "8"
    type = "rw"
    shortdesc = '''Receive 1536 byte frames - setting this bit means the GEM will accept frames up to 1536 bytes in length.'''
    longdesc = '''Normally the GEM would reject any frame above 1518 bytes.'''
  [[register.field]]
    name = "UNICAST_HASH_ENABLE"
    bits = "7"
    type = "rw"
  [[register.field]]
    name = "MULTICAST_HASH_ENABLE"
    bits = "6"
    type = "rw"
  [[register.field]]
    name = "NO_BROADCAST"
    bits = "5"
    type = "rw"
  [[register.field]]
    name = "COPY_ALL_FRAMES"
    bits = "4"
    type = "rw"
  [[register.field]]
    name = "JUMBO_FRAMES"
    bits = "3"
    type = "rw"
    shortdesc = '''Jumbo frames - set to one to enable jumbo frames up to `gem_jumbo_max_length bytes to be accepted.'''
    longdesc = '''The default length is 10,240 bytes.'''
  [[register.field]]
    name = "DISCARD_NON_VLAN_FRAMES"
    bits = "2"
    type = "rw"
  [[register.field]]
    name = "FULL_DUPLEX"
    bits = "1"
    type = "rw"
    shortdesc = '''Full duplex - if set to logic one, the transmit block ignores the state of collision and carrier sense and allows receive while transmitting.'''
    longdesc = '''Also controls the half_duplex pin.'''
  [[register.field]]
    name = "SPEED"
    bits = "0"
    type = "rw"
    shortdesc = '''Speed - set to logic one to indicate 100Mbps operation, logic zero for 10Mbps.'''
    longdesc = '''The value of this pin is reflected on the speed_mode[0] output pin.'''
[[register]]
  name = "NETWORK_STATUS"
  type = "ro"
  width = 32
  description = "The network status register returns status information with respect to the PHY management interface."
  default = "0x00000004"
  offset = "0x00000008"
  [[register.field]]
    name = "RESERVED"
    bits = "31:8"
    type = "ro"
  [[register.field]]
    name = "LPI_INDICATE_PCLK"
    bits = "7"
    type = "ro"
    shortdesc = '''LPI Indication - Low power idle has been detected on receive.'''
    longdesc = '''This bit is set when LPI is detected and reset when normal idle is detected. An interrupt is generated when the state of this bit changes.'''
  [[register.field]]
    name = "PFC_NEGOTIATE_PCLK"
    bits = "6"
    type = "ro"
  [[register.field]]
    name = "MAC_PAUSE_TX_EN"
    bits = "5"
    type = "ro"
  [[register.field]]
    name = "MAC_PAUSE_RX_EN"
    bits = "4"
    type = "ro"
  [[register.field]]
    name = "MAC_FULL_DUPLEX"
    bits = "3"
    type = "ro"
    shortdesc = '''PCS auto-negotiation duplex resolution.'''
    longdesc = '''Set to one if the resolution function determines that both devices are capable of full duplex operation. If zero half-duplex operation is possible as long as bit 0 (PCS link state) is also one.'''
  [[register.field]]
    name = "MAN_DONE"
    bits = "2"
    type = "ro"
    shortdesc = '''The PHY management logic is idle (i.'''
    longdesc = '''e. has completed).'''
  [[register.field]]
    name = "MDIO_IN"
    bits = "1"
    type = "ro"
  [[register.field]]
    name = "PCS_LINK_STATE"
    bits = "0"
    type = "ro"
    shortdesc = '''Returns status of PCS link state.'''
    longdesc = '''If auto-negotiation is disabled this returns the synchronisation status. If auto-negotiation is enabled it is set in the LINK_OK state as long as a compatible duplex mode is resolved, it is always set in the LINK_OK state in SGMII mode.'''
[[register]]
  name = "DMA_CONFIG"
  type = "mixed"
  width = 32
  description = "DMA Configuration Register"
  default = "0x00020784"
  offset = "0x00000010"
  [[register.field]]
    name = "RESERVED"
    bits = "31"
    type = "ro"
  [[register.field]]
    name = "DMA_ADDR_BUS_WIDTH_1"
    bits = "30"
    type = "rw"
    shortdesc = '''DMA address bus width.'''
    longdesc = '''0 = 32b, 1 = 64b.'''
  [[register.field]]
    name = "TX_BD_EXTENDED_MODE_EN"
    bits = "29"
    type = "rw"
    shortdesc = '''Enable TX extended BD mode.'''
    longdesc = '''See TX BD control register definition for description of feature.'''
  [[register.field]]
    name = "RX_BD_EXTENDED_MODE_EN"
    bits = "28"
    type = "rw"
    shortdesc = '''Enable RX extended BD mode.'''
    longdesc = '''See RX BD control register definition for description of feature.'''
  [[register.field]]
    name = "RESERVED"
    bits = "27"
    type = "ro"
  [[register.field]]
    name = "FORCE_MAX_AMBA_BURST_TX"
    bits = "26"
    type = "rw"
    shortdesc = '''Force max length bursts on TX.'''
    longdesc = '''Force the TX DMA to always issue max length bursts on EOP(end of packet) or EOB(end of buffer) transfers as defined by bits 4:0 of this register, even when there is less that max burst data bytes to read. Residual data read is ignored. Does not apply on bursts that break 1k boundary rule.'''
  [[register.field]]
    name = "FORCE_MAX_AMBA_BURST_RX"
    bits = "25"
    type = "rw"
    shortdesc = '''Force max length bursts on RX.'''
    longdesc = '''Force the RX DMA to always issue max length bursts on EOP(end of packet) or EOB(end of buffer)transfers, even if there is less than max burst real packet data required to write. Any extra bytes of pad data is set to 0x00. Does not apply on bursts that break 1k boundary rule.'''
  [[register.field]]
    name = "FORCE_DISCARD_ON_ERR"
    bits = "24"
    type = "rw"
    shortdesc = '''Auto Discard RX pkts during lack of resource.'''
    longdesc = '''When set, the GEM DMA will automatically discard receive packets from the receiver packet buffer memory when no AMBA (AHB/AXI) resource is available. When low, then received packets will remain to be stored in the SRAM based packet buffer until AMBA (AHB/AXI) buffer resource next becomes available. A write to this bit is ignored if the DMA is not configured in the packet buffer full store and forward mode.'''
  [[register.field]]
    name = "RX_BUF_SIZE"
    bits = "23:16"
    type = "rw"
    shortdesc = '''DMA receive buffer size in external AMBA (AHB/AXI) system memory.'''
    longdesc = '''The value defined by these bits determines the size of buffer to use in main system memory when writing received data. The value is defined in multiples of 64 bytes.0x01 corresponds to buffers of 64 bytes0x02 corresponds to 128 bytes etc.For example:0x02: 128 byte.0x18: 1536 byte (1*max length frame/buffer)0xA0: 10240 byte (1*10K jumbo frame/buffer)Note that this value should never be written as zero.Note. The reset value of this field is equal to the gem_rx_buffer_length_def define, which is user configurable.'''
  [[register.field]]
    name = "RESERVED"
    bits = "15:12"
    type = "ro"
  [[register.field]]
    name = "TX_PBUF_TCP_EN"
    bits = "11"
    type = "rw"
    shortdesc = '''Transmitter IP, TCP and UDP checksum generation offload enable (not supported when in TX Partial Store and Forward mode).'''
    longdesc = '''When set, the transmitter checksum generation engine is enabled, to calculate and substitute checksums for transmit frames. When clear, frame data is unaffected. If the GEM is not configured to use the DMA packet buffer, this bit is not implemented and will be treated as reserved, read as zero, ignored on write.'''
  [[register.field]]
    name = "TX_PBUF_SIZE"
    bits = "10"
    type = "rw"
    shortdesc = '''Transmitter packet buffer memory size select.'''
    longdesc = '''Having this bit at zero halves the amount of memory used for the transmit packet buffer. This reduces the amount of memory used by the GEM. It is important to set this bit to one if the full configured physical memory is available. The value in brackets below represents the size that would result for the default maximum configured memory size of 4 Kbytes.1: Use full configured addressable space (4 Kb)0: Do not use top address bit (2 Kb)If the GEM is not configured to use the DMA packet buffer, this bit is not implemented and will be treated as reserved, read as zero, ignored on write.Note. The reset value of this field is equal to the gem_tx_pbuf_size_def define, which is user configurable.'''
  [[register.field]]
    name = "RX_PBUF_SIZE"
    bits = "9:8"
    type = "rw"
    shortdesc = '''Receiver packet buffer memory size select.'''
    longdesc = '''Having these bits at less than 11 reduces the amount of memory used for the receive packet buffer. This reduces the amount of memory used by the GEM. It is important to set these bits both to one if the full configured physical memory is available. The value in brackets below represents the size that would result for the default maximum configured memory size of 8 Kbytes.11: Use full configured addressable space (8 Kb)10: Do not use top address bit (4 Kb)01: Do not use top two address bits (2 Kb)00: Do not use top three address bits (1 Kb)If the GEM is not configured to use the DMA packet buffer, these bits are not implemented and will be treated as reserved, read as zero, ignored on write.Note. The reset value of this field is equal to the gem_rx_pbuf_size_def define, which is user configurable.'''
  [[register.field]]
    name = "ENDIAN_SWAP_PACKET"
    bits = "7"
    type = "rw"
    shortdesc = '''endian swap mode enable for packet data accesses.'''
    longdesc = '''When set, selects swapped endianism for AMBA (AHB/AXI) transfers. When clear, selects little endian mode.'''
  [[register.field]]
    name = "ENDIAN_SWAP_MANAGEMENT"
    bits = "6"
    type = "rw"
    shortdesc = '''endian swap mode enable for management descriptor accesses.'''
    longdesc = '''When set, selects swapped endianism for AMBA (AHB/AXI) transfers. When clear, selects little endian mode.'''
  [[register.field]]
    name = "RESERVED"
    bits = "5"
    type = "ro"
  [[register.field]]
    name = "AMBA_BURST_LENGTH"
    bits = "4:0"
    type = "rw"
    shortdesc = '''Selects the burst length to attempt to use on the AMBA (AHB/AXI) when transferring frame data.'''
    longdesc = '''Not used for DMA management operations and only used where space and data size allow and respecting AXI/AHB burst boundary rules. One-hot priority encoding enforced automatically on register writes as follows, where x represents don't care:1xxxx: Attempt to use bursts of up to 16.01xxx: Attempt to use bursts of up to 8.001xx: Attempt to use bursts of up to 4.0001x: Always use SINGLE bursts.00001: Always use SINGLE bursts.00000: In AXI mode, a setting of 5'b00000 means the core will optimally decide the best AXI burst length possible up to 256 beats, whilst respecting the 4KB boundary rule.'''
[[register]]
  name = "TRANSMIT_STATUS"
  type = "mixed"
  width = 32
  description = "This register, when read, provides details of the status of a transmit. Once read, individual bits may be cleared by writing 1 to them. It is not possible to set a bit to 1 by writing to the register."
  default = "0x00000000"
  offset = "0x00000014"
  [[register.field]]
    name = "RESERVED"
    bits = "31:9"
    type = "ro"
  [[register.field]]
    name = "RESP_NOT_OK"
    bits = "8"
    type = "rw"
    shortdesc = '''bresp/hresp not OK - set when the DMA block sees bresp/hresp not OK.'''
    longdesc = '''Cleared by writing a one to this bit.'''
  [[register.field]]
    name = "LATE_COLLISION_OCCURRED"
    bits = "7"
    type = "rw"
    shortdesc = '''Late collision occurred - only set if the condition occurs in gigabit mode, as retry is not attempted.'''
    longdesc = '''Cleared by writing a one to this bit.'''
  [[register.field]]
    name = "TRANSMIT_UNDER_RUN"
    bits = "6"
    type = "rw"
    shortdesc = '''Transmit under run - this bit is set if the transmitter was forced to terminate a frame that it had already began transmitting due to further data being unavailable.'''
    longdesc = '''This bit is set if a transmitter status write back has not completed when another status write back is attempted. When using the DMA interface configured for internal FIFO mode, this bit is also set when the transmit DMA has written the SOP data into the FIFO and either the AHB bus was not granted in time for further data, or because an AHB not OK response was returned, or because a used bit was read. When using the DMA interface configured for packet buffer mode, this bit will never be set. When using the external FIFO interface, this bit is also set when the tx_r_underflow input is asserted during a frame transfer. Cleared by writing a 1.'''
  [[register.field]]
    name = "TRANSMIT_COMPLETE"
    bits = "5"
    type = "rw"
    shortdesc = '''Transmit complete - set when a frame has been transmitted.'''
    longdesc = '''Cleared by writing a one to this bit.'''
  [[register.field]]
    name = "AMBA_ERROR"
    bits = "4"
    type = "rw"
    shortdesc = '''Transmit frame corruption due to AMBA (AHB/AXI) errors.'''
    longdesc = '''Set if an error occurs whilst midway through reading transmit frame from external memory including HRESP(AHB), RRESP or BRESP(AXI) errors and buffers exhausted mid frame (if the buffers run out during transmission of a frame then transmission stops, FCS shall be bad and tx_er asserted). Also set in DMA packet buffer mode if single frame is too large for configured packet buffer memory size. Cleared by writing a one to this bit.'''
  [[register.field]]
    name = "TRANSMIT_GO"
    bits = "3"
    type = "ro"
    shortdesc = '''Transmit go - if high transmit is active.'''
    longdesc = '''When using the exposed FIFO interface, this bit represents bit 3 of the network control register. When using the DMA interface this bit represents the tx_go variable as specified in the transmit buffer description.'''
  [[register.field]]
    name = "RETRY_LIMIT_EXCEEDED"
    bits = "2"
    type = "rw"
  [[register.field]]
    name = "COLLISION_OCCURRED"
    bits = "1"
    type = "rw"
    shortdesc = '''Collision occurred - set by the assertion of collision.'''
    longdesc = '''Cleared by writing a one to this bit. When operating in 10/100 mode, this status indicates either a collision or a late collision. In gigabit mode, this status is not set for a late collision.'''
  [[register.field]]
    name = "USED_BIT_READ"
    bits = "0"
    type = "rw"
    shortdesc = '''Used bit read - set when a transmit buffer descriptor is read with its used bit set.'''
    longdesc = '''Cleared by writing a one to this bit.'''
[[register]]
  name = "RECEIVE_Q_PTR"
  type = "mixed"
  width = 32
  description = "This register holds the start address of the receive buffer queue (receive buffers descriptor list). The receive buffer queue base address must be initialized before receive is enabled through bit 2 of the network control register. Once reception is enabled, any write to the receive buffer queue base address register is ignored. Reading this register returns the location of the descriptor currently being accessed. This value increments as buffers are used. Software should not use this register for determining where to remove received frames from the queue as it constantly changes as new frames are received. Software should instead work its way through the buffer descriptor queue checking the used bits. In terms of AMBA (AHB/AXI) operation, the receive descriptors are read from memory using a single 32bit AHB/AXI access. When the datapath is configured at 64bit, the receive descriptors should be aligned at 64-bit boundaries and each pair of 32-bit descriptors is written to using a single 64bit AHB/AXI access. For 32bit datapaths, the receive descriptors should be aligned at 32-bit boundaries and are written to using two individual non sequential 32-bit accesses."
  default = "0x00000000"
  offset = "0x00000018"
  [[register.field]]
    name = "DMA_RX_Q_PTR"
    bits = "31:2"
    type = "rw"
  [[register.field]]
    name = "RESERVED"
    bits = "1:0"
    type = "ro"
[[register]]
  name = "TRANSMIT_Q_PTR"
  type = "mixed"
  width = 32
  description = "This register holds the start address of the transmit buffer queue (transmit buffers descriptor list). The transmit buffer queue base address register must be initialized before transmit is started through bit 9 of the network control register. Once transmission has started, any write to the transmit buffer queue base address register is illegal and therefore ignored. Note that due to clock boundary synchronization, it takes a maximum of four pclk cycles from the writing of the transmit start bit before the transmitter is active. Writing to the transmit buffer queue base address register during this time may produce unpredictable results. Reading this register returns the location of the descriptor currently being accessed. Since the DMA handles two frames at once, this may not necessarily be pointing to the current frame being transmitted. In terms of AMBA (AHB/AXI) AHB/AXI operation, the transmit descriptors are written to memory using a single 32bit AHB access. When the datapath is configured at 64bit, the transmit descriptors should be aligned at 64-bit boundaries and each pair of 32-bit descriptors is read from memory using a single AHB access. For 32bit datapaths, the descriptors should be aligned at 32-bit boundaries and the descriptors are read from memory using two individual 32-bit non sequential accesses."
  default = "0x00000000"
  offset = "0x0000001C"
  [[register.field]]
    name = "DMA_TX_Q_PTR"
    bits = "31:2"
    type = "rw"
  [[register.field]]
    name = "RESERVED"
    bits = "1:0"
    type = "ro"
[[register]]
  name = "RECEIVE_STATUS"
  type = "mixed"
  width = 32
  description = "This register, when read provides details of the status of a receive. Once read, individual bits may be cleared by writing 1 to them. It is not possible to set a bit to 1 by writing to the register."
  default = "0x00000000"
  offset = "0x00000020"
  [[register.field]]
    name = "RESERVED"
    bits = "31:4"
    type = "ro"
  [[register.field]]
    name = "RESP_NOT_OK"
    bits = "3"
    type = "rw"
    shortdesc = '''bresp/hresp not OK - set when the DMA block sees bresp/hresp not OK.'''
    longdesc = '''Cleared by writing a one to this bit.'''
  [[register.field]]
    name = "RECEIVE_OVERRUN"
    bits = "2"
    type = "rw"
    shortdesc = '''Receive overrun - this bit is set if either the gem_dma RX FIFO or external RX FIFO were unable to store the receive frame due to a FIFO overflow, or if the receive status, reported by the gem_rx module to the gem_dma was not taken at end of frame.'''
    longdesc = '''This bit is also set in DMA packet buffer mode if the packet buffer overflows. For DMA operation the buffer will be recovered if an overrun occurs. This bit is cleared by writing a one to it.'''
  [[register.field]]
    name = "FRAME_RECEIVED"
    bits = "1"
    type = "rw"
    shortdesc = '''Frame received - one or more frames have been received and placed in memory.'''
    longdesc = '''Cleared by writing a one to this bit.'''
  [[register.field]]
    name = "BUFFER_NOT_AVAILABLE"
    bits = "0"
    type = "rw"
    shortdesc = '''Buffer not available - an attempt was made to get a new buffer and the pointer indicated that it was owned by the processor.'''
    longdesc = '''The DMA will reread the pointer each time an end of frame is received until a valid pointer is found. This bit is set following each descriptor read attempt that fails, even if consecutive pointers are unsuccessful and software has in the mean time cleared the status flag. Cleared by writing a one to this bit.'''
[[register]]
  name = "INT_STATUS"
  type = "mixed"
  width = 32
  description = "If not configured for priority queueing, the GEM generates a single interrupt. This register indicates the source of this interrupt. The corresponding bit in the mask register must be clear for a bit to be set. If any bit is set in this register the ethernet_int signal will be asserted. For test purposes each bit can be set or reset by writing to the interrupt mask register. The default configuration is shown below whereby all bits are reset to zero on read. Changing the validity of the `gem_irq_read_clear define will instead require a one to be written to the appropriate bit in order to clear it. In this mode reading has no affect on the status of the bit."
  default = "0x00000000"
  offset = "0x00000024"
  [[register.field]]
    name = "RESERVED"
    bits = "31"
    type = "ro"
  [[register.field]]
    name = "RESERVED"
    bits = "30"
    type = "ro"
  [[register.field]]
    name = "TSU_TIMER_COMPARISON_INTERRUPT"
    bits = "29"
    type = "rw"
    shortdesc = '''TSU timer comparison interrupt.'''
    longdesc = '''Indicates when TSU timer count value is equal to programmed value.'''
  [[register.field]]
    name = "WOL_INTERRUPT"
    bits = "28"
    type = "rw"
    shortdesc = '''WOL interrupt.'''
    longdesc = '''Indicates a WOL event has been received.'''
  [[register.field]]
    name = "RECEIVE_LPI_INDICATION_STATUS_BIT_CHANGE"
    bits = "27"
    type = "rw"
  [[register.field]]
    name = "TSU_SECONDS_REGISTER_INCREMENT"
    bits = "26"
    type = "rw"
    shortdesc = '''TSU seconds register increment indicates the register has incremented.'''
    longdesc = '''Cleared on read.'''
  [[register.field]]
    name = "PTP_PDELAY_RESP_FRAME_TRANSMITTED"
    bits = "25"
    type = "rw"
    shortdesc = '''PTP pdelay_resp frame transmitted indicates a PTP pdelay_resp frame has been transmitted.'''
    longdesc = '''Cleared on read.'''
  [[register.field]]
    name = "PTP_PDELAY_REQ_FRAME_TRANSMITTED"
    bits = "24"
    type = "rw"
    shortdesc = '''PTP pdelay_req frame transmitted indicates a PTP pdelay_req frame has been transmitted.'''
    longdesc = '''Cleared on read.'''
  [[register.field]]
    name = "PTP_PDELAY_RESP_FRAME_RECEIVED"
    bits = "23"
    type = "rw"
    shortdesc = '''PTP pdelay_resp frame received indicates a PTP pdelay_resp frame has been received.'''
    longdesc = '''Cleared on read.'''
  [[register.field]]
    name = "PTP_PDELAY_REQ_FRAME_RECEIVED"
    bits = "22"
    type = "rw"
    shortdesc = '''PTP pdelay_req frame received indicates a PTP pdelay_req frame has been received.'''
    longdesc = '''Cleared on read.'''
  [[register.field]]
    name = "PTP_SYNC_FRAME_TRANSMITTED"
    bits = "21"
    type = "rw"
    shortdesc = '''PTP sync frame transmitted indicates a PTP sync frame has been transmitted.'''
    longdesc = '''Cleared on read.'''
  [[register.field]]
    name = "PTP_DELAY_REQ_FRAME_TRANSMITTED"
    bits = "20"
    type = "rw"
    shortdesc = '''PTP delay_req frame transmitted indicates a PTP delay_req frame has been transmitted.'''
    longdesc = '''Cleared on read.'''
  [[register.field]]
    name = "PTP_SYNC_FRAME_RECEIVED"
    bits = "19"
    type = "rw"
    shortdesc = '''PTP sync frame received indicates a PTP sync frame has been received.'''
    longdesc = '''Cleared on read.'''
  [[register.field]]
    name = "PTP_DELAY_REQ_FRAME_RECEIVED"
    bits = "18"
    type = "rw"
    shortdesc = '''PTP delay_req frame received indicates a PTP delay_req frame has been received.'''
    longdesc = '''Cleared on read.'''
  [[register.field]]
    name = "PCS_LINK_PARTNER_PAGE_RECEIVED"
    bits = "17"
    type = "rw"
    shortdesc = '''PCS link partner page received - set when a new base page or next page is received from the link partner.'''
    longdesc = '''The first time this interrupt is received, it will indicate base page received and subsequent reads will indicate next pages. The next page and base page registers should only be read when this interrupt is signalled. For next pages, the link partner next page register should be read first to avoid the register being over written. This interrupt also indicates when the host should write a new page into the next page register. If further next page exchange is only required by the link partner, this register should be written with a null message page (0x2001). Cleared on read.'''
  [[register.field]]
    name = "PCS_AUTO_NEGOTIATION_COMPLETE"
    bits = "16"
    type = "rw"
    shortdesc = '''PCS auto-negotiation complete - set once the internal PCS layer has completed auto-negotiation.'''
    longdesc = '''Cleared on read.'''
  [[register.field]]
    name = "EXTERNAL_INTERRUPT"
    bits = "15"
    type = "rw"
    shortdesc = '''External interrupt - set when a rising edge has been detected on the ext_interrupt_in input pin.'''
    longdesc = '''Cleared on read.'''
  [[register.field]]
    name = "PAUSE_FRAME_TRANSMITTED"
    bits = "14"
    type = "rw"
    shortdesc = '''Pause frame transmitted - indicates a pause frame has been successfully transmitted after being initiated from the network control register or from the tx_pause control pin.'''
    longdesc = '''Cleared on read.'''
  [[register.field]]
    name = "PAUSE_TIME_ELAPSED"
    bits = "13"
    type = "rw"
    shortdesc = '''Pause Time elapsed.'''
    longdesc = '''set when either the pause time register at address 0x38 decrements to zero, or when a valid pause frame is received with a zero pause quantum field. Cleared on read.'''
  [[register.field]]
    name = "PAUSE_FRAME_WITH_NON_ZERO_PAUSE_QUANTUM_RECEIVED"
    bits = "12"
    type = "rw"
    shortdesc = '''Pause frame with non-zero pause quantum received - indicates a valid pause has been received that has a non-zero pause quantum field.'''
    longdesc = '''Cleared on read.'''
  [[register.field]]
    name = "RESP_NOT_OK"
    bits = "11"
    type = "rw"
    shortdesc = '''bresp/hresp not OK - set when the DMA block sees bresp/hresp not OK.'''
    longdesc = '''Cleared on read.'''
  [[register.field]]
    name = "RECEIVE_OVERRUN"
    bits = "10"
    type = "rw"
    shortdesc = '''Receive overrun - set when the receive overrun status bit gets set.'''
    longdesc = '''Cleared on read.'''
  [[register.field]]
    name = "LINK_CHANGE"
    bits = "9"
    type = "rw"
    shortdesc = '''Link change - set when the state of the link detected by the internal PCS changes state.'''
    longdesc = '''Cleared on read.'''
  [[register.field]]
    name = "RESERVED"
    bits = "8"
    type = "ro"
  [[register.field]]
    name = "TRANSMIT_COMPLETE"
    bits = "7"
    type = "rw"
    shortdesc = '''Transmit complete - set when a frame has been transmitted.'''
    longdesc = '''Cleared on read.'''
  [[register.field]]
    name = "AMBA_ERROR"
    bits = "6"
    type = "rw"
    shortdesc = '''Transmit frame corruption due to AMBA (AHB/AXI) error.'''
    longdesc = '''Set if an error occurs whilst midway through reading transmit frame from external system memory, including HRESP errors(AHB), RRESP or BRESP(AXI) errors and buffers exhausted mid frame (if the buffers run out during transmission of a frame then transmission stops, FCS shall be bad and tx_er asserted). Also set in DMA packet buffer mode if single frame is too large for configured packet buffer memory size. Cleared on a read.'''
  [[register.field]]
    name = "RETRY_LIMIT_EXCEEDED_OR_LATE_COLLISION"
    bits = "5"
    type = "rw"
    shortdesc = '''Retry limit exceeded or late collision - transmit error.'''
    longdesc = '''Late collision will only cause this status bit to be set in gigabit mode (as a retry is not attempted). Cleared on read.'''
  [[register.field]]
    name = "TRANSMIT_UNDER_RUN"
    bits = "4"
    type = "rw"
    shortdesc = '''Transmit under run - this interrupt is set if the transmitter was forced to terminate a frame that it has already began transmitting due to further data being unavailable.'''
    longdesc = '''If an under run occurs, the transmitter will force bad crc and tx_er high. This interrupt is set if a transmitter status write back has not completed when another status write back is attempted. When using the DMA interface configured for internal FIFO mode, this interrupt is also set when the transmit DMA has written the SOP data into the FIFO and either the AHB bus was not granted in time for further data, or because an AHB/AXI error response was returned by the connected slave, or because a used bit was read. When using the DMA interface configured for packet buffer mode, this bit will never be set. When using the external FIFO interface, this interrupt is also set when the tx_r_underflow input was asserted during a frame transfer. Cleared on read.'''
  [[register.field]]
    name = "TX_USED_BIT_READ"
    bits = "3"
    type = "rw"
    shortdesc = '''TX used bit read - set when a transmit buffer descriptor is read with its used bit set.'''
    longdesc = '''Cleared on read.'''
  [[register.field]]
    name = "RX_USED_BIT_READ"
    bits = "2"
    type = "rw"
    shortdesc = '''RX used bit read - set when a receive buffer descriptor is read with its used bit set.'''
    longdesc = '''Cleared on read.'''
  [[register.field]]
    name = "RECEIVE_COMPLETE"
    bits = "1"
    type = "rw"
    shortdesc = '''Receive complete - a frame has been stored in memory.'''
    longdesc = '''Cleared on read.'''
  [[register.field]]
    name = "MANAGEMENT_FRAME_SENT"
    bits = "0"
    type = "rw"
    shortdesc = '''Management frame sent - the PHY maintenance register has completed its operation.'''
    longdesc = '''Cleared on read.'''
[[register]]
  name = "INT_ENABLE"
  type = "mixed"
  width = 32
  description = "At reset all interrupts are disabled. Writing a one to the relevant bit location enables the required interrupt. This register is write only and when read will return zero."
  default = "0x00000000"
  offset = "0x00000028"
  [[register.field]]
    name = "RESERVED"
    bits = "31"
    type = "ro"
  [[register.field]]
    name = "RESERVED"
    bits = "30"
    type = "ro"
  [[register.field]]
    name = "ENABLE_TSU_TIMER_COMPARISON_INTERRUPT"
    bits = "29"
    type = "wo"
  [[register.field]]
    name = "ENABLE_WOL_EVENT_RECEIVED_INTERRUPT"
    bits = "28"
    type = "wo"
  [[register.field]]
    name = "ENABLE_RX_LPI_INDICATION_INTERRUPT"
    bits = "27"
    type = "wo"
  [[register.field]]
    name = "ENABLE_TSU_SECONDS_REGISTER_INCREMENT"
    bits = "26"
    type = "wo"
  [[register.field]]
    name = "ENABLE_PTP_PDELAY_RESP_FRAME_TRANSMITTED"
    bits = "25"
    type = "wo"
  [[register.field]]
    name = "ENABLE_PTP_PDELAY_REQ_FRAME_TRANSMITTED"
    bits = "24"
    type = "wo"
  [[register.field]]
    name = "ENABLE_PTP_PDELAY_RESP_FRAME_RECEIVED"
    bits = "23"
    type = "wo"
  [[register.field]]
    name = "ENABLE_PTP_PDELAY_REQ_FRAME_RECEIVED"
    bits = "22"
    type = "wo"
  [[register.field]]
    name = "ENABLE_PTP_SYNC_FRAME_TRANSMITTED"
    bits = "21"
    type = "wo"
  [[register.field]]
    name = "ENABLE_PTP_DELAY_REQ_FRAME_TRANSMITTED"
    bits = "20"
    type = "wo"
  [[register.field]]
    name = "ENABLE_PTP_SYNC_FRAME_RECEIVED"
    bits = "19"
    type = "wo"
  [[register.field]]
    name = "ENABLE_PTP_DELAY_REQ_FRAME_RECEIVED"
    bits = "18"
    type = "wo"
  [[register.field]]
    name = "ENABLE_PCS_LINK_PARTNER_PAGE_RECEIVED"
    bits = "17"
    type = "wo"
  [[register.field]]
    name = "ENABLE_PCS_AUTO_NEGOTIATION_COMPLETE_INTERRUPT"
    bits = "16"
    type = "wo"
  [[register.field]]
    name = "ENABLE_EXTERNAL_INTERRUPT"
    bits = "15"
    type = "wo"
  [[register.field]]
    name = "ENABLE_PAUSE_FRAME_TRANSMITTED_INTERRUPT"
    bits = "14"
    type = "wo"
  [[register.field]]
    name = "ENABLE_PAUSE_TIME_ZERO_INTERRUPT"
    bits = "13"
    type = "wo"
  [[register.field]]
    name = "ENABLE_PAUSE_FRAME_WITH_NON_ZERO_PAUSE_QUANTUM_INTERRUPT"
    bits = "12"
    type = "wo"
  [[register.field]]
    name = "ENABLE_RESP_NOT_OK_INTERRUPT"
    bits = "11"
    type = "wo"
  [[register.field]]
    name = "ENABLE_RECEIVE_OVERRUN_INTERRUPT"
    bits = "10"
    type = "wo"
  [[register.field]]
    name = "ENABLE_LINK_CHANGE_INTERRUPT"
    bits = "9"
    type = "wo"
  [[register.field]]
    name = "NOT_USED"
    bits = "8"
    type = "ro"
  [[register.field]]
    name = "ENABLE_TRANSMIT_COMPLETE_INTERRUPT"
    bits = "7"
    type = "wo"
  [[register.field]]
    name = "ENABLE_TRANSMIT_FRAME_CORRUPTION_DUE_TO_AMBA_ERROR_INTERRUPT"
    bits = "6"
    type = "wo"
  [[register.field]]
    name = "ENABLE_RETRY_LIMIT_EXCEEDED_OR_LATE_COLLISION_INTERRUPT"
    bits = "5"
    type = "wo"
  [[register.field]]
    name = "ENABLE_TRANSMIT_BUFFER_UNDER_RUN_INTERRUPT"
    bits = "4"
    type = "wo"
  [[register.field]]
    name = "ENABLE_TRANSMIT_USED_BIT_READ_INTERRUPT"
    bits = "3"
    type = "wo"
  [[register.field]]
    name = "ENABLE_RECEIVE_USED_BIT_READ_INTERRUPT"
    bits = "2"
    type = "wo"
  [[register.field]]
    name = "ENABLE_RECEIVE_COMPLETE_INTERRUPT"
    bits = "1"
    type = "wo"
  [[register.field]]
    name = "ENABLE_MANAGEMENT_DONE_INTERRUPT"
    bits = "0"
    type = "wo"
[[register]]
  name = "INT_DISABLE"
  type = "mixed"
  width = 32
  description = "Writing a 1 to the relevant bit location disables that particular interrupt. This register is write only and when read will return zero."
  default = "0x00000000"
  offset = "0x0000002C"
  [[register.field]]
    name = "RESERVED"
    bits = "31"
    type = "ro"
  [[register.field]]
    name = "RESERVED"
    bits = "30"
    type = "ro"
  [[register.field]]
    name = "DISABLE_TSU_TIMER_COMPARISON_INTERRUPT"
    bits = "29"
    type = "wo"
  [[register.field]]
    name = "DISABLE_WOL_EVENT_RECEIVED_INTERRUPT"
    bits = "28"
    type = "wo"
  [[register.field]]
    name = "DISABLE_RX_LPI_INDICATION_INTERRUPT"
    bits = "27"
    type = "wo"
  [[register.field]]
    name = "DISABLE_TSU_SECONDS_REGISTER_INCREMENT"
    bits = "26"
    type = "wo"
  [[register.field]]
    name = "DISABLE_PTP_PDELAY_RESP_FRAME_TRANSMITTED"
    bits = "25"
    type = "wo"
  [[register.field]]
    name = "DISABLE_PTP_PDELAY_REQ_FRAME_TRANSMITTED"
    bits = "24"
    type = "wo"
  [[register.field]]
    name = "DISABLE_PTP_PDELAY_RESP_FRAME_RECEIVED"
    bits = "23"
    type = "wo"
  [[register.field]]
    name = "DISABLE_PTP_PDELAY_REQ_FRAME_RECEIVED"
    bits = "22"
    type = "wo"
  [[register.field]]
    name = "DISABLE_PTP_SYNC_FRAME_TRANSMITTED"
    bits = "21"
    type = "wo"
  [[register.field]]
    name = "DISABLE_PTP_DELAY_REQ_FRAME_TRANSMITTED"
    bits = "20"
    type = "wo"
  [[register.field]]
    name = "DISABLE_PTP_SYNC_FRAME_RECEIVED"
    bits = "19"
    type = "wo"
  [[register.field]]
    name = "DISABLE_PTP_DELAY_REQ_FRAME_RECEIVED"
    bits = "18"
    type = "wo"
  [[register.field]]
    name = "DISABLE_PCS_LINK_PARTNER_PAGE_RECEIVED"
    bits = "17"
    type = "wo"
  [[register.field]]
    name = "DISABLE_PCS_AUTO_NEGOTIATION_COMPLETE_INTERRUPT"
    bits = "16"
    type = "wo"
  [[register.field]]
    name = "DISABLE_EXTERNAL_INTERRUPT"
    bits = "15"
    type = "wo"
  [[register.field]]
    name = "DISABLE_PAUSE_FRAME_TRANSMITTED_INTERRUPT"
    bits = "14"
    type = "wo"
  [[register.field]]
    name = "DISABLE_PAUSE_TIME_ZERO_INTERRUPT"
    bits = "13"
    type = "wo"
  [[register.field]]
    name = "DISABLE_PAUSE_FRAME_WITH_NON_ZERO_PAUSE_QUANTUM_INTERRUPT"
    bits = "12"
    type = "wo"
  [[register.field]]
    name = "DISABLE_RESP_NOT_OK_INTERRUPT"
    bits = "11"
    type = "wo"
  [[register.field]]
    name = "DISABLE_RECEIVE_OVERRUN_INTERRUPT"
    bits = "10"
    type = "wo"
  [[register.field]]
    name = "DISABLE_LINK_CHANGE_INTERRUPT"
    bits = "9"
    type = "wo"
  [[register.field]]
    name = "NOT_USED"
    bits = "8"
    type = "ro"
  [[register.field]]
    name = "DISABLE_TRANSMIT_COMPLETE_INTERRUPT"
    bits = "7"
    type = "wo"
  [[register.field]]
    name = "DISABLE_TRANSMIT_FRAME_CORRUPTION_DUE_TO_AMBA_ERROR_INTERRUPT"
    bits = "6"
    type = "wo"
  [[register.field]]
    name = "DISABLE_RETRY_LIMIT_EXCEEDED_OR_LATE_COLLISION_INTERRUPT"
    bits = "5"
    type = "wo"
  [[register.field]]
    name = "DISABLE_TRANSMIT_BUFFER_UNDER_RUN_INTERRUPT"
    bits = "4"
    type = "wo"
  [[register.field]]
    name = "DISABLE_TRANSMIT_USED_BIT_READ_INTERRUPT"
    bits = "3"
    type = "wo"
  [[register.field]]
    name = "DISABLE_RECEIVE_USED_BIT_READ_INTERRUPT"
    bits = "2"
    type = "wo"
  [[register.field]]
    name = "DISABLE_RECEIVE_COMPLETE_INTERRUPT"
    bits = "1"
    type = "wo"
  [[register.field]]
    name = "DISABLE_MANAGEMENT_DONE_INTERRUPT"
    bits = "0"
    type = "wo"
[[register]]
  name = "INT_MASK"
  type = "ro"
  width = 32
  description = "The interrupt mask register is a read only register indicating which interrupts are masked. All bits are set at reset and can be reset individually by writing to the interrupt enable register or set individually by writing to the interrupt disable register. Having separate address locations for enable and disable saves the need for performing a read modify write when updating the interrupt mask register. For test purposes there is a write-only function to this register that allows the bits in the interrupt status register to be set or cleared, regardless of the state of the mask register."
  default = "0x3FFFFFFF"
  offset = "0x00000030"
  [[register.field]]
    name = "RESERVED"
    bits = "31"
    type = "ro"
  [[register.field]]
    name = "RESERVED"
    bits = "30"
    type = "ro"
  [[register.field]]
    name = "TSU_TIMER_COMPARISON_MASK"
    bits = "29"
    type = "ro"
  [[register.field]]
    name = "WOL_EVENT_RECEIVED_MASK"
    bits = "28"
    type = "ro"
    shortdesc = '''A read of this register returns the value of the WOL event received mask.'''
    longdesc = '''0: Interrupt is enabled.1: Interrupt is disabled.A write to this register directly affects the state of the corresponding bit in the interrupt status register, causing an interrupt to be generated if a 1 is written.'''
  [[register.field]]
    name = "RX_LPI_INDICATION_MASK"
    bits = "27"
    type = "ro"
    shortdesc = '''A read of this register returns the value of the RX LPI indication mask.'''
    longdesc = '''0: Interrupt is enabled.1: Interrupt is disabled.A write to this register directly affects the state of the corresponding bit in the interrupt status register, causing an interrupt to be generated if a 1 is written'''
  [[register.field]]
    name = "TSU_SECONDS_REGISTER_INCREMENT_MASK"
    bits = "26"
    type = "ro"
    shortdesc = '''A read of this register returns the value of the TSU seconds register increment mask.'''
    longdesc = '''0: Interrupt is enabled.1: Interrupt is disabled.A write to this register directly affects the state of the corresponding bit in the interrupt status register, causing an interrupt to be generated if a 1 is written.'''
  [[register.field]]
    name = "PTP_PDELAY_RESP_FRAME_TRANSMITTED_MASK"
    bits = "25"
    type = "ro"
    shortdesc = '''A read of this register returns the value of the PTP pdelay_resp frame transmitted mask.'''
    longdesc = '''0: Interrupt is enabled.1: Interrupt is disabled.A write to this register directly affects the state of the corresponding bit in the interrupt status register, causing an interrupt to be generated if a 1 is written.'''
  [[register.field]]
    name = "PTP_PDELAY_REQ_FRAME_TRANSMITTED_MASK"
    bits = "24"
    type = "ro"
    shortdesc = '''A read of this register returns the value of the PTP pdelay_req frame transmitted mask.'''
    longdesc = '''0: Interrupt is enabled.1: Interrupt is disabled.A write to this register directly affects the state of the corresponding bit in the interrupt status register, causing an interrupt to be generated if a 1 is written.'''
  [[register.field]]
    name = "PTP_PDELAY_RESP_FRAME_RECEIVED_MASK"
    bits = "23"
    type = "ro"
    shortdesc = '''A read of this register returns the value of the PTP pdelay_resp frame received mask.'''
    longdesc = '''0: Interrupt is enabled.1: Interrupt is disabled.A write to this register directly affects the state of the corresponding bit in the interrupt status register, causing an interrupt to be generated if a 1 is written.'''
  [[register.field]]
    name = "PTP_PDELAY_REQ_FRAME_RECEIVED_MASK"
    bits = "22"
    type = "ro"
    shortdesc = '''A read of this register returns the value of the PTP pdelay_req frame received mask.'''
    longdesc = '''0: Interrupt is enabled.1: Interrupt is disabled.A write to this register directly affects the state of the corresponding bit in the interrupt status register, causing an interrupt to be generated if a 1 is written.'''
  [[register.field]]
    name = "PTP_SYNC_FRAME_TRANSMITTED_MASK"
    bits = "21"
    type = "ro"
    shortdesc = '''A read of this register returns the value of the PTP sync frame transmitted mask.'''
    longdesc = '''0: Interrupt is enabled.1: Interrupt is disabled.A write to this register directly affects the state of the corresponding bit in the interrupt status register, causing an interrupt to be generated if a 1 is written.'''
  [[register.field]]
    name = "PTP_DELAY_REQ_FRAME_TRANSMITTED_MASK"
    bits = "20"
    type = "ro"
    shortdesc = '''A read of this register returns the value of the PTP delay_req frame transmitted mask.'''
    longdesc = '''0: Interrupt is enabled.1: Interrupt is disabled.A write to this register directly affects the state of the corresponding bit in the interrupt status register, causing an interrupt to be generated if a 1 is written.'''
  [[register.field]]
    name = "PTP_SYNC_FRAME_RECEIVED_MASK"
    bits = "19"
    type = "ro"
    shortdesc = '''A read of this register returns the value of the PTP sync frame received mask.'''
    longdesc = '''0: Interrupt is enabled.1: Interrupt is disabled.A write to this register directly affects the state of the corresponding bit in the interrupt status register, causing an interrupt to be generated if a 1 is written.'''
  [[register.field]]
    name = "PTP_DELAY_REQ_FRAME_RECEIVED_MASK"
    bits = "18"
    type = "ro"
    shortdesc = '''A read of this register returns the value of the PTP delay_req frame received mask.'''
    longdesc = '''0: Interrupt is enabled.1: Interrupt is disabled.A write to this register directly affects the state of the corresponding bit in the interrupt status register, causing an interrupt to be generated if a 1 is written.'''
  [[register.field]]
    name = "PCS_LINK_PARTNER_PAGE_MASK"
    bits = "17"
    type = "ro"
    shortdesc = '''A read of this register returns the value of the PCS link partner page mask.'''
    longdesc = '''0: Interrupt is enabled.1: Interrupt is disabled.A write to this register directly affects the state of the corresponding bit in the interrupt status register, causing an interrupt to be generated if a 1 is written.'''
  [[register.field]]
    name = "PCS_AUTO_NEGOTIATION_COMPLETE_INTERRUPT_MASK"
    bits = "16"
    type = "ro"
    shortdesc = '''A read of this register returns the value of the PCS auto-negotiation complete interrupt mask.'''
    longdesc = '''0: Interrupt is enabled.1: Interrupt is disabled.A write to this register directly affects the state of the corresponding bit in the interrupt status register, causing an interrupt to be generated if a 1 is written.'''
  [[register.field]]
    name = "EXTERNAL_INTERRUPT_MASK"
    bits = "15"
    type = "ro"
    shortdesc = '''external interrupt mask.'''
    longdesc = '''0: Interrupt is enabled.1: Interrupt is disabled.A write to this register directly affects the state of the corresponding bit in the interrupt status register, causing an interrupt to be generated if a 1 is written.'''
  [[register.field]]
    name = "PAUSE_FRAME_TRANSMITTED_INTERRUPT_MASK"
    bits = "14"
    type = "ro"
    shortdesc = '''pause frame transmitted interrupt mask.'''
    longdesc = '''0: Interrupt is enabled.1: Interrupt is disabled.A write to this register directly affects the state of the corresponding bit in the interrupt status register, causing an interrupt to be generated if a 1 is written.'''
  [[register.field]]
    name = "PAUSE_TIME_ZERO_INTERRUPT_MASK"
    bits = "13"
    type = "ro"
    shortdesc = '''pause time zero interrupt mask.'''
    longdesc = '''0: Interrupt is enabled.1: Interrupt is disabled.A write to this register directly affects the state of the corresponding bit in the interrupt status register, causing an interrupt to be generated if a 1 is written.'''
  [[register.field]]
    name = "PAUSE_FRAME_WITH_NON_ZERO_PAUSE_QUANTUM_INTERRUPT_MASK"
    bits = "12"
    type = "ro"
    shortdesc = '''pause frame with non-zero pause quantum interrupt mask.'''
    longdesc = '''0: Interrupt is enabled.1: Interrupt is disabled. A write to this register directly affects the state of the corresponding bit in the interrupt status register, causing an interrupt to be generated if a 1 is written.'''
  [[register.field]]
    name = "RESP_NOT_OK_INTERRUPT_MASK"
    bits = "11"
    type = "ro"
    shortdesc = '''bresp/hresp not OK interrupt mask.'''
    longdesc = '''0: Interrupt is enabled.1: Interrupt is disabled.A write to this register directly affects the state of the corresponding bit in the interrupt status register, causing an interrupt to be generated if a 1 is written.'''
  [[register.field]]
    name = "RECEIVE_OVERRUN_INTERRUPT_MASK"
    bits = "10"
    type = "ro"
    shortdesc = '''receive overrun interrupt mask.'''
    longdesc = '''0: Interrupt is enabled.1: Interrupt is disabled.A write to this register directly affects the state of the corresponding bit in the interrupt status register, causing an interrupt to be generated if a 1 is written.'''
  [[register.field]]
    name = "LINK_CHANGE_INTERRUPT_MASK"
    bits = "9"
    type = "ro"
    shortdesc = '''A read of this register returns the value of the link change interrupt mask.'''
    longdesc = '''0: Interrupt is enabled.1: Interrupt is disabled.A write to this register directly affects the state of the corresponding bit in the interrupt status register, causing an interrupt to be generated if a 1 is written.'''
  [[register.field]]
    name = "NOT_USED"
    bits = "8"
    type = "ro"
  [[register.field]]
    name = "TRANSMIT_COMPLETE_INTERRUPT_MASK"
    bits = "7"
    type = "ro"
    shortdesc = '''transmit complete interrupt mask.'''
    longdesc = '''0: Interrupt is enabled.1: Interrupt is disabled.A write to this register directly affects the state of the corresponding bit in the interrupt status register, causing an interrupt to be generated if a 1 is written.'''
  [[register.field]]
    name = "AMBA_ERROR_INTERRUPT_MASK"
    bits = "6"
    type = "ro"
    shortdesc = '''transmit frame corruption due to AMBA (AHB/AXI) error interrupt mask.'''
    longdesc = '''0: Interrupt is enabled.1: Interrupt is disabled.A write to this register directly affects the state of the corresponding bit in the interrupt status register, causing an interrupt to be generated if a 1 is written.'''
  [[register.field]]
    name = "RETRY_LIMIT_EXCEEDED_OR_LATE_COLLISION"
    bits = "5"
    type = "ro"
    shortdesc = '''A read of this register returns the value of the retry limit exceeded or late collision (gigabit mode only) interrupt mask.'''
    longdesc = '''0: Interrupt is enabled.1: Interrupt is disabled.A write to this register directly affects the state of the corresponding bit in the interrupt status register, causing an interrupt to be generated if a 1 is written.'''
  [[register.field]]
    name = "TRANSMIT_BUFFER_UNDER_RUN_INTERRUPT_MASK"
    bits = "4"
    type = "ro"
    shortdesc = '''transmit buffer under run interrupt mask.'''
    longdesc = '''0: Interrupt is enabled.1: Interrupt is disabled.A write to this register directly affects the state of the corresponding bit in the interrupt status register, causing an interrupt to be generated if a 1 is written.'''
  [[register.field]]
    name = "TRANSMIT_USED_BIT_READ_INTERRUPT_MASK"
    bits = "3"
    type = "ro"
    shortdesc = '''transmit used bit read interrupt mask.'''
    longdesc = '''0: Interrupt is enabled.1: Interrupt is disabled.A write to this register directly affects the state of the corresponding bit in the interrupt status register, causing an interrupt to be generated if a 1 is written.'''
  [[register.field]]
    name = "RECEIVE_USED_BIT_READ_INTERRUPT_MASK"
    bits = "2"
    type = "ro"
    shortdesc = '''receive used bit read interrupt mask.'''
    longdesc = '''0: Interrupt is enabled.1: Interrupt is disabled.A write to this register directly affects the state of the corresponding bit in the interrupt status register, causing an interrupt to be generated if a 1 is written.'''
  [[register.field]]
    name = "RECEIVE_COMPLETE_INTERRUPT_MASK"
    bits = "1"
    type = "ro"
    shortdesc = '''receive complete interrupt mask.'''
    longdesc = '''0: Interrupt is enabled.1: Interrupt is disabled.A write to this register directly affects the state of the corresponding bit in the interrupt status register, causing an interrupt to be generated if a 1 is written.'''
  [[register.field]]
    name = "MANAGEMENT_DONE_INTERRUPT_MASK"
    bits = "0"
    type = "ro"
    shortdesc = '''management done interrupt mask.'''
    longdesc = '''0: Interrupt is enabled.1: Interrupt is disabled.A write to this register directly affects the state of the corresponding bit in the interrupt status register, causing an interrupt to be generated if a 1 is written.'''
[[register]]
  name = "PHY_MANAGEMENT"
  type = "rw"
  width = 32
  description = "The PHY maintenance register is implemented as a shift register. Writing to the register starts a shift operation which is signalled as complete when bit-2 is set in the network status register. It takes about 2000 pclk cycles to complete, when MDC is set for pclk divide by 32 in the network configuration register. An interrupt is generated upon completion. During this time, the MSB of the register is output on the MDIO pin and the LSB updated from the MDIO pin with each MDC cycle. This causes transmission of a PHY management frame on MDIO. See Section 22.2.4.5 of the IEEE 802.3 standard. Reading during the shift operation will return the current contents of the shift register. At the end of management operation, the bits will have shifted back to their original locations. For a read operation, the data bits will be updated with data read from the PHY. It is important to write the correct values to the register to ensure a valid PHY management frame is produced. The MDIO interface can read IEEE 802.3 clause 45 PHYs as well as clause 22 PHYs. To read clause 45 PHYs, bit 30 should be written with a 0 rather than a 1. For a description of MDC generation, see Network Configuration Register."
  default = "0x00000000"
  offset = "0x00000034"
  [[register.field]]
    name = "WRITE0"
    bits = "31"
    type = "rw"
  [[register.field]]
    name = "WRITE1"
    bits = "30"
    type = "rw"
  [[register.field]]
    name = "OPERATION"
    bits = "29:28"
    type = "rw"
    shortdesc = '''Operation.'''
    longdesc = '''For a Clause 45 frame: 00 is an addr, 01 is a write, 10 is a post read increment, 11 is a read frame. For a Clause 22 frame: 10 is a read, 01 is a write.'''
  [[register.field]]
    name = "PHY_ADDRESS"
    bits = "27:23"
    type = "rw"
  [[register.field]]
    name = "REGISTER_ADDRESS"
    bits = "22:18"
    type = "rw"
  [[register.field]]
    name = "WRITE10"
    bits = "17:16"
    type = "rw"
  [[register.field]]
    name = "PHY_WRITE_READ_DATA"
    bits = "15:0"
    type = "rw"
    shortdesc = '''For a write operation this is written with the data to be written to the PHY.'''
    longdesc = '''After a read operation this contains the data read from the PHY.'''
[[register]]
  name = "PAUSE_TIME"
  type = "ro"
  width = 32
  description = "Received Pause Quantum Register"
  default = "0x00000000"
  offset = "0x00000038"
  [[register.field]]
    name = "RESERVED"
    bits = "31:16"
    type = "ro"
  [[register.field]]
    name = "QUANTUM"
    bits = "15:0"
    type = "ro"
[[register]]
  name = "TX_PAUSE_QUANTUM"
  type = "mixed"
  width = 32
  description = "Transmit Pause Quantum Register"
  default = "0x0000FFFF"
  offset = "0x0000003C"
  [[register.field]]
    name = "RESERVED"
    bits = "31:16"
    type = "ro"
  [[register.field]]
    name = "QUANTUM"
    bits = "15:0"
    type = "rw"
[[register]]
  name = "PBUF_TXCUTTHRU"
  type = "mixed"
  width = 32
  description = "Partial store and forward is only applicable when using the the DMA configured in SRAM based packet buffer mode. It is also not available when using multi buffer frames. TX Partial Store and Forward"
  default = "0x00000FFF"
  offset = "0x00000040"
  [[register.field]]
    name = "DMA_TX_CUTTHRU"
    bits = "31"
    type = "rw"
  [[register.field]]
    name = "RESERVED"
    bits = "30:12"
    type = "ro"
  [[register.field]]
    name = "DMA_TX_CUTTHRU_THRESHOLD"
    bits = "11:0"
    type = "rw"
    shortdesc = '''Watermark value.'''
    longdesc = '''This value must be >= 0x14.'''
[[register]]
  name = "PBUF_RXCUTTHRU"
  type = "mixed"
  width = 32
  description = "RX Partial Store and Forward"
  default = "0x00000FFF"
  offset = "0x00000044"
  [[register.field]]
    name = "DMA_RX_CUTTHRU"
    bits = "31"
    type = "rw"
  [[register.field]]
    name = "RESERVED"
    bits = "30:12"
    type = "ro"
  [[register.field]]
    name = "DMA_RX_CUTTHRU_THRESHOLD"
    bits = "11:0"
    type = "rw"
[[register]]
  name = "JUMBO_MAX_LENGTH"
  type = "mixed"
  width = 32
  description = "Maximum Jumbo Frame Size."
  default = "0x00003FFF"
  offset = "0x00000048"
  [[register.field]]
    name = "RESERVED"
    bits = "31:16"
    type = "ro"
  [[register.field]]
    name = "JUMBO_MAX_LENGTH"
    bits = "15:0"
    type = "rw"
[[register]]
  name = "EXTERNAL_FIFO_INTERFACE"
  type = "mixed"
  width = 32
  description = "External FIFO Interface Enable (only valid when gem_host_if_soft_select is defined)"
  default = "0x00000000"
  offset = "0x0000004C"
  [[register.field]]
    name = "RESERVED"
    bits = "31:1"
    type = "ro"
  [[register.field]]
    name = "EXTERNAL_FIFO_INTERFACE"
    bits = "0"
    type = "rw"
    shortdesc = '''Enable external fifo interface.'''
    longdesc = '''1: Enabled.0: Disabled.'''
[[register]]
  name = "AXI_MAX_PIPELINE"
  type = "mixed"
  width = 32
  description = "Used to set the maximum amnount of outstanding transactions on the AXI bus between AR / R channels and AW / W channels. Cannot be more than the depth of the configured AXI pipeline FIFO (defined in verilog defs.v)"
  default = "0x00000101"
  offset = "0x00000054"
  [[register.field]]
    name = "RESERVED"
    bits = "31:16"
    type = "ro"
  [[register.field]]
    name = "AW2W_MAX_PIPELINE"
    bits = "15:8"
    type = "rw"
  [[register.field]]
    name = "AR2R_MAX_PIPELINE"
    bits = "7:0"
    type = "rw"
[[register]]
  name = "HASH_BOTTOM"
  type = "rw"
  width = 32
  description = "The unicast hash enable and the multicast hash enable bits in the network configuration register enable the reception of hash matched framesHash Register Bottom [31:0]"
  default = "0x00000000"
  offset = "0x00000080"
  [[register.field]]
    name = "ADDRESS"
    bits = "31:0"
    type = "rw"
[[register]]
  name = "HASH_TOP"
  type = "rw"
  width = 32
  description = "Hash Register Top 63:32"
  default = "0x00000000"
  offset = "0x00000084"
  [[register.field]]
    name = "ADDRESS"
    bits = "31:0"
    type = "rw"
[[register]]
  name = "SPEC_ADD1_BOTTOM"
  type = "rw"
  width = 32
  description = "The addresses stored in the specific address registers are deactivated at reset or when their corresponding specific address register bottom is written. They are activated when specific address register top is written."
  default = "0x00000000"
  offset = "0x00000088"
  [[register.field]]
    name = "ADDRESS"
    bits = "31:0"
    type = "rw"
    shortdesc = '''Least significant 32 bits of the destination address, that is bits 31:0.'''
    longdesc = '''Bit zero indicates whether the address is multicast or unicast and corresponds to the least significant bit of the first byte received.'''
[[register]]
  name = "SPEC_ADD1_TOP"
  type = "mixed"
  width = 32
  description = "Specific Address Top"
  default = "0x00000000"
  offset = "0x0000008C"
  [[register.field]]
    name = "RESERVED"
    bits = "31:17"
    type = "ro"
  [[register.field]]
    name = "FILTER_TYPE"
    bits = "16"
    type = "rw"
    shortdesc = '''This control bit selects whether this filter should be comparing the MAC source address or the MAC destination address of the received Ethernet frame.'''
    longdesc = '''When set to zero, the filter is a destination address filter. When set to one, the filter is a source address filter. Specific address 1. The most significant bits of the destination address, that is bits 47:32.'''
  [[register.field]]
    name = "ADDRESS"
    bits = "15:0"
    type = "rw"
    shortdesc = '''Specific address 1.'''
    longdesc = '''The most significant bits of the destination/source address that is to be compared, that is bits 47:32.'''
[[register]]
  name = "SPEC_ADD2_BOTTOM"
  type = "rw"
  width = 32
  description = "The addresses stored in the specific address registers are deactivated at reset or when their corresponding specific address register bottom is written. They are activated when specific address register top is written."
  default = "0x00000000"
  offset = "0x00000090"
  [[register.field]]
    name = "ADDRESS"
    bits = "31:0"
    type = "rw"
    shortdesc = '''Least significant 32 bits of the destination address, that is bits 31:0.'''
    longdesc = '''Bit zero indicates whether the address is multicast or unicast and corresponds to the least significant bit of the first byte received.'''
[[register]]
  name = "SPEC_ADD2_TOP"
  type = "mixed"
  width = 32
  description = "Specific Address Top"
  default = "0x00000000"
  offset = "0x00000094"
  [[register.field]]
    name = "RESERVED"
    bits = "31:30"
    type = "ro"
  [[register.field]]
    name = "FILTER_BYTE_MASK"
    bits = "29:24"
    type = "rw"
    shortdesc = '''When high, the associated byte of the specific address will not be compared.'''
    longdesc = '''Bit 24 controls whether the first byte received should be compared. Bit 29 controls whether the last byte received should be compared.'''
  [[register.field]]
    name = "RESERVED"
    bits = "23:17"
    type = "ro"
  [[register.field]]
    name = "FILTER_TYPE"
    bits = "16"
    type = "rw"
    shortdesc = '''This control bit selects whether this filter should be comparing the MAC source address or the MAC destination address of the received Ethernet frame.'''
    longdesc = '''When set to zero, the filter is a destination address filter. When set to one, the filter is a source address filter. Specific address 1. The most significant bits of the destination address, that is bits 47:32.'''
  [[register.field]]
    name = "ADDRESS"
    bits = "15:0"
    type = "rw"
    shortdesc = '''Specific address 1.'''
    longdesc = '''The most significant bits of the destination/source address that is to be compared, that is bits 47:32.'''
[[register]]
  name = "SPEC_ADD3_BOTTOM"
  type = "rw"
  width = 32
  description = "The addresses stored in the specific address registers are deactivated at reset or when their corresponding specific address register bottom is written. They are activated when specific address register top is written."
  default = "0x00000000"
  offset = "0x00000098"
  [[register.field]]
    name = "ADDRESS"
    bits = "31:0"
    type = "rw"
    shortdesc = '''Least significant 32 bits of the destination address, that is bits 31:0.'''
    longdesc = '''Bit zero indicates whether the address is multicast or unicast and corresponds to the least significant bit of the first byte received.'''
[[register]]
  name = "SPEC_ADD3_TOP"
  type = "mixed"
  width = 32
  description = "Specific Address Top"
  default = "0x00000000"
  offset = "0x0000009C"
  [[register.field]]
    name = "RESERVED"
    bits = "31:30"
    type = "ro"
  [[register.field]]
    name = "FILTER_BYTE_MASK"
    bits = "29:24"
    type = "rw"
    shortdesc = '''When high, the associated byte of the specific address will not be compared.'''
    longdesc = '''Bit 24 controls whether the first byte received should be compared. Bit 29 controls whether the last byte received should be compared.'''
  [[register.field]]
    name = "RESERVED"
    bits = "23:17"
    type = "ro"
  [[register.field]]
    name = "FILTER_TYPE"
    bits = "16"
    type = "rw"
    shortdesc = '''This control bit selects whether this filter should be comparing the MAC source address or the MAC destination address of the received Ethernet frame.'''
    longdesc = '''When set to zero, the filter is a destination address filter. When set to one, the filter is a source address filter. Specific address 1. The most significant bits of the destination address, that is bits 47:32.'''
  [[register.field]]
    name = "ADDRESS"
    bits = "15:0"
    type = "rw"
    shortdesc = '''Specific address 1.'''
    longdesc = '''The most significant bits of the destination/source address that is to be compared, that is bits 47:32.'''
[[register]]
  name = "SPEC_ADD4_BOTTOM"
  type = "rw"
  width = 32
  description = "The addresses stored in the specific address registers are deactivated at reset or when their corresponding specific address register bottom is written. They are activated when specific address register top is written."
  default = "0x00000000"
  offset = "0x000000A0"
  [[register.field]]
    name = "ADDRESS"
    bits = "31:0"
    type = "rw"
    shortdesc = '''Least significant 32 bits of the destination address, that is bits 31:0.'''
    longdesc = '''Bit zero indicates whether the address is multicast or unicast and corresponds to the least significant bit of the first byte received.'''
[[register]]
  name = "SPEC_ADD4_TOP"
  type = "mixed"
  width = 32
  description = "Specific Address Top"
  default = "0x00000000"
  offset = "0x000000A4"
  [[register.field]]
    name = "RESERVED"
    bits = "31:30"
    type = "ro"
  [[register.field]]
    name = "FILTER_BYTE_MASK"
    bits = "29:24"
    type = "rw"
    shortdesc = '''When high, the associated byte of the specific address will not be compared.'''
    longdesc = '''Bit 24 controls whether the first byte received should be compared. Bit 29 controls whether the last byte received should be compared.'''
  [[register.field]]
    name = "RESERVED"
    bits = "23:17"
    type = "ro"
  [[register.field]]
    name = "FILTER_TYPE"
    bits = "16"
    type = "rw"
    shortdesc = '''This control bit selects whether this filter should be comparing the MAC source address or the MAC destination address of the received Ethernet frame.'''
    longdesc = '''When set to zero, the filter is a destination address filter. When set to one, the filter is a source address filter. Specific address 1. The most significant bits of the destination address, that is bits 47:32.'''
  [[register.field]]
    name = "ADDRESS"
    bits = "15:0"
    type = "rw"
    shortdesc = '''Specific address 1.'''
    longdesc = '''The most significant bits of the destination/source address that is to be compared, that is bits 47:32.'''
[[register]]
  name = "SPEC_TYPE1"
  type = "mixed"
  width = 32
  description = "Type ID Match 1"
  default = "0x00000000"
  offset = "0x000000A8"
  [[register.field]]
    name = "ENABLE_COPY"
    bits = "31"
    type = "rw"
  [[register.field]]
    name = "RESERVED"
    bits = "30:16"
    type = "ro"
  [[register.field]]
    name = "MATCH"
    bits = "15:0"
    type = "rw"
    shortdesc = '''Type ID match 1.'''
    longdesc = '''For use in comparisons with received frames type ID/length field.'''
[[register]]
  name = "SPEC_TYPE2"
  type = "mixed"
  width = 32
  description = "Type ID Match 2"
  default = "0x00000000"
  offset = "0x000000AC"
  [[register.field]]
    name = "ENABLE_COPY"
    bits = "31"
    type = "rw"
  [[register.field]]
    name = "RESERVED"
    bits = "30:16"
    type = "ro"
  [[register.field]]
    name = "MATCH"
    bits = "15:0"
    type = "rw"
    shortdesc = '''Type ID match 2.'''
    longdesc = '''For use in comparisons with received frames type ID/length field.'''
[[register]]
  name = "SPEC_TYPE3"
  type = "mixed"
  width = 32
  description = "Type ID Match 3"
  default = "0x00000000"
  offset = "0x000000B0"
  [[register.field]]
    name = "ENABLE_COPY"
    bits = "31"
    type = "rw"
  [[register.field]]
    name = "RESERVED"
    bits = "30:16"
    type = "ro"
  [[register.field]]
    name = "MATCH"
    bits = "15:0"
    type = "rw"
    shortdesc = '''Type ID match 3.'''
    longdesc = '''For use in comparisons with received frames type ID/length field.'''
[[register]]
  name = "SPEC_TYPE4"
  type = "mixed"
  width = 32
  description = "Type ID Match 4"
  default = "0x00000000"
  offset = "0x000000B4"
  [[register.field]]
    name = "ENABLE_COPY"
    bits = "31"
    type = "rw"
  [[register.field]]
    name = "RESERVED"
    bits = "30:16"
    type = "ro"
  [[register.field]]
    name = "MATCH"
    bits = "15:0"
    type = "rw"
    shortdesc = '''Type ID match 4.'''
    longdesc = '''For use in comparisons with received frames type ID/length field.'''
[[register]]
  name = "WOL_REGISTER"
  type = "mixed"
  width = 32
  description = "Wake on LAN Register"
  default = "0x00000000"
  offset = "0x000000B8"
  [[register.field]]
    name = "RESERVED"
    bits = "31:20"
    type = "ro"
  [[register.field]]
    name = "WOL_MASK_3"
    bits = "19"
    type = "rw"
    shortdesc = '''Wake on LAN multicast hash event enable.'''
    longdesc = '''When set multicast hash events will cause the wol output to be asserted.'''
  [[register.field]]
    name = "WOL_MASK_2"
    bits = "18"
    type = "rw"
    shortdesc = '''Wake on LAN specific address register 1 event enable.'''
    longdesc = '''When set specific address 1 events will cause the wol output to be asserted.'''
  [[register.field]]
    name = "WOL_MASK_1"
    bits = "17"
    type = "rw"
    shortdesc = '''Wake on LAN ARP request event enable.'''
    longdesc = '''When set ARP request events will cause the wol output to be asserted.'''
  [[register.field]]
    name = "WOL_MASK_0"
    bits = "16"
    type = "rw"
    shortdesc = '''Wake on LAN magic packet event enable.'''
    longdesc = '''When set magic packet events will cause the wol output to be asserted.'''
  [[register.field]]
    name = "ADDR"
    bits = "15:0"
    type = "rw"
    shortdesc = '''Wake on LAN ARP request IP address.'''
    longdesc = '''Written to define the least significant 16 bits of the target IP address that is matched to generate a Wake on LAN event. A value of zero will not generate an event, even if this is matched by the received frame.'''
[[register]]
  name = "STRETCH_RATIO"
  type = "mixed"
  width = 32
  description = "IPG stretch register"
  default = "0x00000000"
  offset = "0x000000BC"
  [[register.field]]
    name = "RESERVED"
    bits = "31:16"
    type = "ro"
  [[register.field]]
    name = "IPG_STRETCH"
    bits = "15:0"
    type = "rw"
    shortdesc = '''IPG Stretch.'''
    longdesc = '''Bits 7:0 are multiplied with the previously transmitted frame length (including preamble) bits 15:8 +1 divide the frame length. If the resulting number is greater than 96 and bit 28 is set in the network configuration register then the resulting number is used for the transmit inter-packet-gap. 1 is added to bits 15:8 to prevent a divide by zero.'''
[[register]]
  name = "STACKED_VLAN"
  type = "mixed"
  width = 32
  description = "Stacked VLAN Register"
  default = "0x00000000"
  offset = "0x000000C0"
  [[register.field]]
    name = "ENABLE_PROCESSING"
    bits = "31"
    type = "rw"
  [[register.field]]
    name = "RESERVED"
    bits = "30:16"
    type = "ro"
  [[register.field]]
    name = "MATCH"
    bits = "15:0"
    type = "rw"
    shortdesc = '''User defined VLAN_TYPE field.'''
    longdesc = '''When Stacked VLAN is enabled, the first VLAN tag in a received frame will only be accepted if the VLAN type field is equal to this user defined VLAN_TYPE OR equal to the standard VLAN type (0x8100). Note that the second VLAN tag of a Stacked VLAN packet will only be matched correctly if its VLAN_TYPE field equals 0x8100.'''
[[register]]
  name = "TX_PFC_PAUSE"
  type = "mixed"
  width = 32
  description = "Transmit PFC Pause Register"
  default = "0x00000000"
  offset = "0x000000C4"
  [[register.field]]
    name = "RESERVED"
    bits = "31:16"
    type = "ro"
  [[register.field]]
    name = "VECTOR"
    bits = "15:8"
    type = "rw"
    shortdesc = '''Priority Vector Pause Size.'''
    longdesc = '''If bit 17 of the network control register is written with a one then for each entry equal to zero in the Transmit PFC Pause Register[15:8], the PFC pause frame's pause quantum field associated with that entry will be taken from the transmit pause quantum register. For each entry equal to one in the Transmit PFC Pause Register [15:8], the pause quantum associated with that entry will be zero.'''
  [[register.field]]
    name = "VECTOR_ENABLE"
    bits = "7:0"
    type = "rw"
    shortdesc = '''Priority Vector Enable.'''
    longdesc = '''If bit 17 of the network control register is written with a one then the priority enable vector of the PFC priority based pause frame will be set equal to the value stored in this register [7:0].'''
[[register]]
  name = "MASK_ADD1_BOTTOM"
  type = "rw"
  width = 32
  description = "Specific Address Mask 1 Bottom 31:0"
  default = "0x00000000"
  offset = "0x000000C8"
  [[register.field]]
    name = "ADDRESS_MASK"
    bits = "31:0"
    type = "rw"
    shortdesc = '''Specific Address Mask.'''
    longdesc = '''Setting a bit to one masks the corresponding bit in the specific address 1 register'''
[[register]]
  name = "MASK_ADD1_TOP"
  type = "mixed"
  width = 32
  description = "Specific Address Mask 1 Top 47:32"
  default = "0x00000000"
  offset = "0x000000CC"
  [[register.field]]
    name = "RESERVED"
    bits = "31:16"
    type = "ro"
  [[register.field]]
    name = "ADDRESS_MASK"
    bits = "15:0"
    type = "rw"
    shortdesc = '''Specific Address Mask.'''
    longdesc = '''Setting a bit to one masks the corresponding bit in the specific address 1 register'''
[[register]]
  name = "DMA_ADDR_OR_MASK"
  type = "mixed"
  width = 32
  description = "Receive DMA Data Buffer Address Mask"
  default = "0x00000000"
  offset = "0x000000D0"
  [[register.field]]
    name = "MASK_VALUE"
    bits = "31:28"
    type = "rw"
    shortdesc = '''Data Buffer Address Mask Value.'''
    longdesc = '''Values used to force bits 31:28 of the receive data buffer AHB/AXI address to a particular value when the associated enable bits stored in this register [3:0] are set. Any changes to this register will be ignored while the DMA is currently processing a receive packet. It will only affect the next full packet to be written to external system memory.'''
  [[register.field]]
    name = "RESERVED"
    bits = "27:4"
    type = "ro"
  [[register.field]]
    name = "MASK_ENABLE"
    bits = "3:0"
    type = "rw"
    shortdesc = '''Data Buffer Address Mask Enable.'''
    longdesc = '''These bits are associated directly with bits[31:28].When bit 0 is set, the AHB/AXI address bit 28 used for accessing the receive data buffers will be forced to the value stored in bit 28 of this register. When bit 1 is set, the AHB/AXI address bit 29 used for accessing the receive data buffers will be forced to the value stored in bit 29 of this register. When bit 2 is set, the AHB/AXI address bit 30 used for accessing the receive data buffers will be forced to the value stored in bit 30 of this register. When bit 3 is set, the AHB/AXI address bit 31 used for accessing the receive data buffers will be forced to the value stored in bit 31 of this register. When these bits are clear, the associated value stored in bits 31:28 have no effect on the AHB/AXI address used for receive data buffer accesses. Any changes to this register will be ignored while the DMA is currently processing a receive packet. It will only affect the next full packet to be written to external memory.'''
[[register]]
  name = "RX_PTP_UNICAST"
  type = "rw"
  width = 32
  description = "PTP RX unicast IP destination address"
  default = "0x00000000"
  offset = "0x000000D4"
  [[register.field]]
    name = "ADDRESS"
    bits = "31:0"
    type = "rw"
    shortdesc = '''Unicast IP destination address.'''
    longdesc = '''Used for detection of PTP frames on receive path.'''
[[register]]
  name = "TX_PTP_UNICAST"
  type = "rw"
  width = 32
  description = "PTP TX unicast IP destination address"
  default = "0x00000000"
  offset = "0x000000D8"
  [[register.field]]
    name = "ADDRESS"
    bits = "31:0"
    type = "rw"
    shortdesc = '''Unicast IP destination address.'''
    longdesc = '''Used for detection of PTP frames on transmit path.'''
[[register]]
  name = "TSU_NSEC_CMP"
  type = "mixed"
  width = 32
  description = "TSU timer comparison value nanoseconds"
  default = "0x00000000"
  offset = "0x000000DC"
  [[register.field]]
    name = "RESERVED"
    bits = "31:22"
    type = "ro"
  [[register.field]]
    name = "COMPARISON_VALUE"
    bits = "21:0"
    type = "rw"
    shortdesc = '''TSU timer comparison value (ns).'''
    longdesc = '''Value is compared to the bits[45:24] of the TSU timer count value (upper 22 bits of nanosecond value).'''
[[register]]
  name = "TSU_SEC_CMP"
  type = "rw"
  width = 32
  description = "TSU timer comparison value seconds 31:0"
  default = "0x00000000"
  offset = "0x000000E0"
  [[register.field]]
    name = "COMPARISON_VALUE"
    bits = "31:0"
    type = "rw"
    shortdesc = '''TSU timer comparison value (s).'''
    longdesc = '''Value is compared to seconds value bits [31:0] of the TSU timer count value.'''
[[register]]
  name = "TSU_MSB_SEC_CMP"
  type = "mixed"
  width = 32
  description = "TSU timer comparison value seconds 47:32"
  default = "0x00000000"
  offset = "0x000000E4"
  [[register.field]]
    name = "RESERVED"
    bits = "31:16"
    type = "ro"
  [[register.field]]
    name = "COMPARISON_VALUE"
    bits = "15:0"
    type = "rw"
    shortdesc = '''TSU timer comparison value (s).'''
    longdesc = '''Value is compared to the top 16 bits (most significant 16-bits {47:32] of seconds value) of the TSU timer count value.'''
[[register]]
  name = "TSU_PTP_TX_MSB_SEC"
  type = "ro"
  width = 32
  description = "PTP Event Frame Transmitted Seconds Register 47:32"
  default = "0x00000000"
  offset = "0x000000E8"
  [[register.field]]
    name = "RESERVED"
    bits = "31:16"
    type = "ro"
  [[register.field]]
    name = "TIMER_SECONDS"
    bits = "15:0"
    type = "ro"
    shortdesc = '''PTP Event Frame TX Seconds.'''
    longdesc = '''The register is updated with the value that the 1588 timer seconds register held when the SFD of a PTP transmit primary event crosses the MII interface. The actual update occurs when the GEM recognizes the frame as a PTP sync or delay_req frame. An interrupt is issued when the register is updated.'''
[[register]]
  name = "TSU_PTP_RX_MSB_SEC"
  type = "ro"
  width = 32
  description = "PTP Event Frame Received Seconds Register 47:32"
  default = "0x00000000"
  offset = "0x000000EC"
  [[register.field]]
    name = "RESERVED"
    bits = "31:16"
    type = "ro"
  [[register.field]]
    name = "TIMER_SECONDS"
    bits = "15:0"
    type = "ro"
    shortdesc = '''PTP Event Frame TX Seconds.'''
    longdesc = '''The register is updated with the value that the 1588 timer seconds register held when the SFD of a PTP receive primary event crosses the MII interface. The actual update occurs when the GEM recognizes the frame as a PTP sync or delay_req frame. An interrupt is issued when the register is updated.'''
[[register]]
  name = "TSU_PEER_TX_MSB_SEC"
  type = "ro"
  width = 32
  description = "PTP Peer Event Frame Transmitted Seconds Register 47:32"
  default = "0x00000000"
  offset = "0x000000F0"
  [[register.field]]
    name = "RESERVED"
    bits = "31:16"
    type = "ro"
  [[register.field]]
    name = "TIMER_SECONDS"
    bits = "15:0"
    type = "ro"
    shortdesc = '''PTP Peer Event Frame TX Seconds.'''
    longdesc = '''The register is updated with the value that the 1588 timer seconds register held when the SFD of a PTP transmit peer event crosses the MII interface. The actual update occurs when the GEM recognizes the frame as a PTP pdealy_req or pdelay_resp frame. An interrupt is issued when the register is updated.'''
[[register]]
  name = "TSU_PEER_RX_MSB_SEC"
  type = "ro"
  width = 32
  description = "PTP Peer Event Frame Received Seconds Register 47:32"
  default = "0x00000000"
  offset = "0x000000F4"
  [[register.field]]
    name = "RESERVED"
    bits = "31:16"
    type = "ro"
  [[register.field]]
    name = "TIMER_SECONDS"
    bits = "15:0"
    type = "ro"
    shortdesc = '''PTP Peer Event Frame RX Seconds.'''
    longdesc = '''The register is updated with the value that the 1588 timer seconds register held when the SFD of a PTP receive peer event crosses the MII interface. The actual update occurs when the GEM recognizes the frame as a PTP pdelay_req or pdelay_resp frame. An interrupt is issued when the register is updated.'''
[[register]]
  name = "DPRAM_FILL_DBG"
  type = "mixed"
  width = 32
  description = "The fill levels for the TX & RX packet buffers can be read using this register, including the fill level for each queue in the TX direction."
  default = "0x00000000"
  offset = "0x000000F8"
  [[register.field]]
    name = "DMA_TX_RX_FILL_LEVEL"
    bits = "31:16"
    type = "ro"
    shortdesc = '''Fill Level - TX or RX packet buffer fill level, selected by the tx_q_fill_level_select and tx_rx_fill_level_select registers.'''
    longdesc = '''Read this register to determine the fill level.'''
  [[register.field]]
    name = "RESERVED"
    bits = "15:8"
    type = "ro"
  [[register.field]]
    name = "DMA_TX_Q_FILL_LEVEL_SELECT"
    bits = "7:4"
    type = "rw"
  [[register.field]]
    name = "RESERVED"
    bits = "3:1"
    type = "ro"
  [[register.field]]
    name = "DMA_TX_RX_FILL_LEVEL_SELECT"
    bits = "0"
    type = "rw"
[[register]]
  name = "REVISION_REG"
  type = "ro"
  width = 32
  description = "This register indicates a module identification number and module revision. The value of this register is read only as defined by `gem_revision_reg_value"
  default = "0x40070106"
  offset = "0x000000FC"
  [[register.field]]
    name = "FIX_NUMBER"
    bits = "31:28"
    type = "ro"
  [[register.field]]
    name = "MODULE_IDENTIFICATION_NUMBER"
    bits = "27:16"
    type = "ro"
  [[register.field]]
    name = "MODULE_REVISION"
    bits = "15:0"
    type = "ro"
[[register]]
  name = "OCTETS_TXED_BOTTOM"
  type = "rw"
  width = 32
  description = "These registers reset to zero on a read and stick at all ones when they count to their maximum value. They should be read frequently enough to prevent loss of data. In order to reduce overall design area, the statistics registers may be optionally removed in the configuration file if they are deemed unnecsessary for a particular design. The receive statistics registers are only incremented when the receive enable bit is set in the network control register. The statistics registers optionally have a snapshot capability which, when exercised, will simultaneously store and clear the current values of all the statistics registers into a snapshot register set in order to allow a consistent set of statistics to be read by the processor. The snapshot is controlled using bit 13 of the network control register. The read snapshot control indicated by bit 14 of the network control register determines whether the processor reads the snapshot registers (logic 1) or the incrementing registers (logic 0). The default GEM configuration does not support the snapshot capability. See Parameterization section under Implementation Application Notes for an explanation of how to enable this function. All the statistics registers are read only. For test purposes they may be written by setting bit 7 (Write Enable) in the network control register. Setting bit 6 (increment statistics) in the network control register causes all the statistics registers to increment by one, again for test purposes. Once a statistics register has been read, it is automatically cleared. When reading the octets transmitted and octets received registers, bits 31:0 should be read prior to bits 47:32 to ensure reliable operation. The statistics register block contains the following registers. Octets Transmitted [31:0]"
  default = "0x00000000"
  offset = "0x00000100"
  [[register.field]]
    name = "COUNT"
    bits = "31:0"
    type = "rw"
    shortdesc = '''Transmitted octets in frame without errors [31:0].'''
    longdesc = '''The number of octets transmitted in valid frames of any type. This counter is 48-bits, and is read through two registers. This count does not include octets from automatically generated pause frames.'''
[[register]]
  name = "OCTETS_TXED_TOP"
  type = "mixed"
  width = 32
  description = "Octets Transmitted 47:32"
  default = "0x00000000"
  offset = "0x00000104"
  [[register.field]]
    name = "RESERVED"
    bits = "31:16"
    type = "ro"
  [[register.field]]
    name = "COUNT"
    bits = "15:0"
    type = "rw"
    shortdesc = '''Transmitted octets in frame without errors [47:32].'''
    longdesc = '''The number of octets transmitted in valid frames of any type. This counter is 48-bits, and is read through two registers. This count does not include octets from automatically generated pause frames.'''
[[register]]
  name = "FRAMES_TXED_OK"
  type = "rw"
  width = 32
  description = "Frames Transmitted"
  default = "0x00000000"
  offset = "0x00000108"
  [[register.field]]
    name = "COUNT"
    bits = "31:0"
    type = "rw"
    shortdesc = '''Frames transmitted without error.'''
    longdesc = '''A 32 bit register counting the number of frames successfully transmitted, i.e. no under run and not too many retries. Excludes pause frames.'''
[[register]]
  name = "BROADCAST_TXED"
  type = "rw"
  width = 32
  description = "Broadcast Frames Transmitted"
  default = "0x00000000"
  offset = "0x0000010C"
  [[register.field]]
    name = "COUNT"
    bits = "31:0"
    type = "rw"
    shortdesc = '''Broadcast frames transmitted without error.'''
    longdesc = '''A 32 bit register counting the number of broadcast frames successfully transmitted without error, i.e. no under run and not too many retries. Excludes pause frames.'''
[[register]]
  name = "MULTICAST_TXED"
  type = "rw"
  width = 32
  description = "Multicast Frames Transmitted"
  default = "0x00000000"
  offset = "0x00000110"
  [[register.field]]
    name = "COUNT"
    bits = "31:0"
    type = "rw"
    shortdesc = '''Multicast frames transmitted without error.'''
    longdesc = '''A 32 bit register counting the number of multicast frames successfully transmitted without error, i.e. no under run and not too many retries. Excludes pause frames.'''
[[register]]
  name = "PAUSE_FRAMES_TXED"
  type = "mixed"
  width = 32
  description = "Pause Frames Transmitted"
  default = "0x00000000"
  offset = "0x00000114"
  [[register.field]]
    name = "RESERVED"
    bits = "31:16"
    type = "ro"
  [[register.field]]
    name = "COUNT"
    bits = "15:0"
    type = "rw"
    shortdesc = '''Transmitted pause frames - a 16 bit register counting the number of pause frames transmitted.'''
    longdesc = '''Only pause frames triggered by the register interface or through the external pause pins are counted as pause frames. Pause frames received through the external FIFO interface are counted in the frames transmitted counter.'''
[[register]]
  name = "FRAMES_TXED_64"
  type = "rw"
  width = 32
  description = "64 Byte Frames Transmitted"
  default = "0x00000000"
  offset = "0x00000118"
  [[register.field]]
    name = "COUNT"
    bits = "31:0"
    type = "rw"
    shortdesc = '''64 byte frames transmitted without error.'''
    longdesc = '''A 32 bit register counting the number of 64 byte frames successfully transmitted without error, i.e. no under run and not too many retries. Excludes pause frames.'''
[[register]]
  name = "FRAMES_TXED_65"
  type = "rw"
  width = 32
  description = "65 to 127 Byte Frames Transmitted"
  default = "0x00000000"
  offset = "0x0000011C"
  [[register.field]]
    name = "COUNT"
    bits = "31:0"
    type = "rw"
    shortdesc = '''65 to127 byte frames transmitted without error.'''
    longdesc = '''A 32 bit register counting the number of 65 to127 byte frames successfully transmitted without error, i.e. no under run and not too many retries.'''
[[register]]
  name = "FRAMES_TXED_128"
  type = "rw"
  width = 32
  description = "128 to 255 Byte Frames Transmitted"
  default = "0x00000000"
  offset = "0x00000120"
  [[register.field]]
    name = "COUNT"
    bits = "31:0"
    type = "rw"
    shortdesc = '''128 to 255 byte frames transmitted without error.'''
    longdesc = '''A 32 bit register counting the number of 128 to 255 byte frames successfully transmitted without error, i.e. no under run and not too many retries.'''
[[register]]
  name = "FRAMES_TXED_256"
  type = "rw"
  width = 32
  description = "256 to 511 Byte Frames Transmitted"
  default = "0x00000000"
  offset = "0x00000124"
  [[register.field]]
    name = "COUNT"
    bits = "31:0"
    type = "rw"
    shortdesc = '''256 to 511 byte frames transmitted without error.'''
    longdesc = '''A 32 bit register counting the number of 256 to 511 byte frames successfully transmitted without error, i.e. no under run and not too many retries.'''
[[register]]
  name = "FRAMES_TXED_512"
  type = "rw"
  width = 32
  description = "512 to 1023 Byte Frames Transmitted"
  default = "0x00000000"
  offset = "0x00000128"
  [[register.field]]
    name = "COUNT"
    bits = "31:0"
    type = "rw"
    shortdesc = '''512 to 1023 byte frames transmitted without error.'''
    longdesc = '''A 32 bit register counting the number of 512 to 1023 byte frames successfully transmitted without error, i.e. no under run and not too many retries.'''
[[register]]
  name = "FRAMES_TXED_1024"
  type = "rw"
  width = 32
  description = "1024 to 1518 Byte Frames Transmitted"
  default = "0x00000000"
  offset = "0x0000012C"
  [[register.field]]
    name = "COUNT"
    bits = "31:0"
    type = "rw"
    shortdesc = '''1024 to 1518 byte frames transmitted without error.'''
    longdesc = '''A 32 bit register counting the number of 1024 to 1518 byte frames successfully transmitted without error, i.e. no under run and not too many retries.'''
[[register]]
  name = "FRAMES_TXED_1519"
  type = "rw"
  width = 32
  description = "Greater Than 1518 Byte Frames Transmitted"
  default = "0x00000000"
  offset = "0x00000130"
  [[register.field]]
    name = "COUNT"
    bits = "31:0"
    type = "rw"
    shortdesc = '''Greater than 1518 byte frames transmitted without error.'''
    longdesc = '''A 32 bit register counting the number of 1518 or above byte frames successfully transmitted without error, i.e. no under run and not too many retries.'''
[[register]]
  name = "TX_UNDERRUNS"
  type = "mixed"
  width = 32
  description = "Transmit Under Runs"
  default = "0x00000000"
  offset = "0x00000134"
  [[register.field]]
    name = "RESERVED"
    bits = "31:10"
    type = "ro"
  [[register.field]]
    name = "COUNT"
    bits = "9:0"
    type = "rw"
    shortdesc = '''Transmit under runs - a 10 bit register counting the number of frames not transmitted due to a transmit under run.'''
    longdesc = '''If this register is incremented then no other statistics register is incremented.'''
[[register]]
  name = "SINGLE_COLLISIONS"
  type = "mixed"
  width = 32
  description = "Single Collision Frames"
  default = "0x00000000"
  offset = "0x00000138"
  [[register.field]]
    name = "RESERVED"
    bits = "31:18"
    type = "ro"
  [[register.field]]
    name = "COUNT"
    bits = "17:0"
    type = "rw"
    shortdesc = '''Single collision frames - an 18 bit register counting the number of frames experiencing a single collision before being successfully transmitted, i.'''
    longdesc = '''e. no under run.'''
[[register]]
  name = "MULTIPLE_COLLISIONS"
  type = "mixed"
  width = 32
  description = "Multiple Collision Frames"
  default = "0x00000000"
  offset = "0x0000013C"
  [[register.field]]
    name = "RESERVED"
    bits = "31:18"
    type = "ro"
  [[register.field]]
    name = "COUNT"
    bits = "17:0"
    type = "rw"
    shortdesc = '''Multiple collision frames - an 18 bit register counting the number of frames experiencing between two and fifteen collisions prior to being successfully transmitted, i.'''
    longdesc = '''e. no under run and not too many retries.'''
[[register]]
  name = "EXCESSIVE_COLLISIONS"
  type = "mixed"
  width = 32
  description = "Excessive Collisions"
  default = "0x00000000"
  offset = "0x00000140"
  [[register.field]]
    name = "RESERVED"
    bits = "31:10"
    type = "ro"
  [[register.field]]
    name = "COUNT"
    bits = "9:0"
    type = "rw"
[[register]]
  name = "LATE_COLLISIONS"
  type = "mixed"
  width = 32
  description = "Late Collisions"
  default = "0x00000000"
  offset = "0x00000144"
  [[register.field]]
    name = "RESERVED"
    bits = "31:10"
    type = "ro"
  [[register.field]]
    name = "COUNT"
    bits = "9:0"
    type = "rw"
    shortdesc = '''Late collisions - a 10 bit register counting the number of late collision occurring after the slot time (512 bits) has expired.'''
    longdesc = '''In 10/100 mode, late collisions are counted twice i.e. both as a collision and a late collision. In gigabit mode, a late collision causes the transmission to be aborted, thus the single and multi collision registers are not updated.'''
[[register]]
  name = "DEFERRED_FRAMES"
  type = "mixed"
  width = 32
  description = "Deferred Transmission Frames"
  default = "0x00000000"
  offset = "0x00000148"
  [[register.field]]
    name = "RESERVED"
    bits = "31:18"
    type = "ro"
  [[register.field]]
    name = "COUNT"
    bits = "17:0"
    type = "rw"
    shortdesc = '''Deferred transmission frames - an 18 bit register counting the number of frames experiencing deferral due to carrier sense being active on their first attempt at transmission.'''
    longdesc = '''Frames involved in any collision are not counted nor are frames that experienced a transmit under run.'''
[[register]]
  name = "CRS_ERRORS"
  type = "mixed"
  width = 32
  description = "Carrier Sense Errors"
  default = "0x00000000"
  offset = "0x0000014C"
  [[register.field]]
    name = "RESERVED"
    bits = "31:10"
    type = "ro"
  [[register.field]]
    name = "COUNT"
    bits = "9:0"
    type = "rw"
    shortdesc = '''Carrier sense errors - a 10 bit register counting the number of frames transmitted where carrier sense was not seen during transmission or where carrier sense was deasserted after being asserted in a transmit frame without collision (no under run).'''
    longdesc = '''Only incremented in half duplex mode. The only effect of a carrier sense error is to increment this register. The behaviour of the other statistics registers is unaffected by the detection of a carrier sense error.'''
[[register]]
  name = "OCTETS_RXED_BOTTOM"
  type = "rw"
  width = 32
  description = "Octets Received 31:0"
  default = "0x00000000"
  offset = "0x00000150"
  [[register.field]]
    name = "COUNT"
    bits = "31:0"
    type = "rw"
    shortdesc = '''Received octets in frame without errors [31:0].'''
    longdesc = '''The number of octets received in valid frames of any type. This counter is 48-bits and is read through two registers. This count does not include octets from pause frames, and is only incremented if the frame is successfully filtered and copied to memory.'''
[[register]]
  name = "OCTETS_RXED_TOP"
  type = "mixed"
  width = 32
  description = "Octets Received 47:32"
  default = "0x00000000"
  offset = "0x00000154"
  [[register.field]]
    name = "RESERVED"
    bits = "31:16"
    type = "ro"
  [[register.field]]
    name = "COUNT"
    bits = "15:0"
    type = "rw"
    shortdesc = '''Received octets in frame without errors [47:32].'''
    longdesc = '''The number of octets received in valid frames of any type. This counter is 48-bits and is read through two registers. This count does not include octets from pause frames, and is only incremented if the frame is successfully filtered and copied to memory.'''
[[register]]
  name = "FRAMES_RXED_OK"
  type = "rw"
  width = 32
  description = "Frames Received"
  default = "0x00000000"
  offset = "0x00000158"
  [[register.field]]
    name = "COUNT"
    bits = "31:0"
    type = "rw"
    shortdesc = '''Frames received without error.'''
    longdesc = '''A 32 bit register counting the number of frames successfully received. Excludes pause frames, and is only incremented if the frame is successfully filtered and copied to memory.'''
[[register]]
  name = "BROADCAST_RXED"
  type = "rw"
  width = 32
  description = "Broadcast Frames Received"
  default = "0x00000000"
  offset = "0x0000015C"
  [[register.field]]
    name = "COUNT"
    bits = "31:0"
    type = "rw"
    shortdesc = '''Broadcast frames received without error.'''
    longdesc = '''A 32 bit register counting the number of broadcast frames successfully received without error. Excludes pause frames, and is only incremented if the frame is successfully filtered and copied to memory.'''
[[register]]
  name = "MULTICAST_RXED"
  type = "rw"
  width = 32
  description = "Multicast Frames Received"
  default = "0x00000000"
  offset = "0x00000160"
  [[register.field]]
    name = "COUNT"
    bits = "31:0"
    type = "rw"
    shortdesc = '''Multicast frames received without error.'''
    longdesc = '''A 32 bit register counting the number of multicast frames successfully received without error. Excludes pause frames, and is only incremented if the frame is successfully filtered and copied to memory.'''
[[register]]
  name = "PAUSE_FRAMES_RXED"
  type = "mixed"
  width = 32
  description = "Pause Frames Received"
  default = "0x00000000"
  offset = "0x00000164"
  [[register.field]]
    name = "RESERVED"
    bits = "31:16"
    type = "ro"
  [[register.field]]
    name = "COUNT"
    bits = "15:0"
    type = "rw"
[[register]]
  name = "FRAMES_RXED_64"
  type = "rw"
  width = 32
  description = "64 Byte Frames Received"
  default = "0x00000000"
  offset = "0x00000168"
  [[register.field]]
    name = "COUNT"
    bits = "31:0"
    type = "rw"
    shortdesc = '''64 byte frames received without error.'''
    longdesc = '''A 32 bit register counting the number of 64 byte frames successfully received without error. Excludes pause frames, and is only incremented if the frame is successfully filtered and copied to memory.'''
[[register]]
  name = "FRAMES_RXED_65"
  type = "rw"
  width = 32
  description = "65 to 127 Byte Frames Received"
  default = "0x00000000"
  offset = "0x0000016C"
  [[register.field]]
    name = "COUNT"
    bits = "31:0"
    type = "rw"
    shortdesc = '''65 to 127 byte frames received without error.'''
    longdesc = '''A 32 bit register counting the number of 65 to 127 byte frames successfully received without error. Excludes pause frames, and is only incremented if the frame is successfully filtered and copied to memory.'''
[[register]]
  name = "FRAMES_RXED_128"
  type = "rw"
  width = 32
  description = "128 to 255 Byte Frames Received"
  default = "0x00000000"
  offset = "0x00000170"
  [[register.field]]
    name = "COUNT"
    bits = "31:0"
    type = "rw"
    shortdesc = '''128 to 255 byte frames received without error.'''
    longdesc = '''A 32 bit register counting the number of 128 to 255 byte frames successfully received without error. Excludes pause frames, and is only incremented if the frame is successfully filtered and copied to memory.'''
[[register]]
  name = "FRAMES_RXED_256"
  type = "rw"
  width = 32
  description = "256 to 511 Byte Frames Received"
  default = "0x00000000"
  offset = "0x00000174"
  [[register.field]]
    name = "COUNT"
    bits = "31:0"
    type = "rw"
    shortdesc = '''256 to 511 byte frames received without error.'''
    longdesc = '''A 32 bit register counting the number of 256 to 511 byte frames successfully transmitted without error. Excludes pause frames, and is only incremented if the frame is successfully filtered and copied to memory.'''
[[register]]
  name = "FRAMES_RXED_512"
  type = "rw"
  width = 32
  description = "512 to 1023 Byte Frames Received"
  default = "0x00000000"
  offset = "0x00000178"
  [[register.field]]
    name = "COUNT"
    bits = "31:0"
    type = "rw"
    shortdesc = '''512 to 1023 byte frames received without error.'''
    longdesc = '''A 32 bit register counting the number of 512 to 1023 byte frames successfully received without error. Excludes pause frames, and is only incremented if the frame is successfully filtered and copied to memory.'''
[[register]]
  name = "FRAMES_RXED_1024"
  type = "rw"
  width = 32
  description = "1024 to 1518 Byte Frames Received"
  default = "0x00000000"
  offset = "0x0000017C"
  [[register.field]]
    name = "COUNT"
    bits = "31:0"
    type = "rw"
    shortdesc = '''1024 to 1518 byte frames received without error.'''
    longdesc = '''A 32 bit register counting the number of 1024 to 1518 byte frames successfully received without error. Excludes pause frames, and is only incremented if the frame is successfully filtered and copied to memory.'''
[[register]]
  name = "FRAMES_RXED_1519"
  type = "rw"
  width = 32
  description = "1519 to maximum Byte Frames Received"
  default = "0x00000000"
  offset = "0x00000180"
  [[register.field]]
    name = "COUNT"
    bits = "31:0"
    type = "rw"
    shortdesc = '''1519 to maximum byte frames received without error.'''
    longdesc = '''A 32 bit register counting the number of 1519 byte or above frames successfully received without error. Maximum frame size is determined by the network configuration register bit 8 (1536 maximum frame size) or bit 3 (jumbo frame size). Excludes pause frames, and is only incremented if the frame is successfully filtered and copied to memory.'''
[[register]]
  name = "UNDERSIZE_FRAMES"
  type = "mixed"
  width = 32
  description = "Undersized Frames Received"
  default = "0x00000000"
  offset = "0x00000184"
  [[register.field]]
    name = "RESERVED"
    bits = "31:10"
    type = "ro"
  [[register.field]]
    name = "COUNT"
    bits = "9:0"
    type = "rw"
    shortdesc = '''Undersize frames received - a 10 bit register counting the number of frames received less than 64 bytes in length (10/100 mode or gigabit mode, full duplex) that do not have either a CRC error or an alignment error.'''
    longdesc = '''In gigabit mode, half duplex, this register counts either frames not conforming to the minimum slot time of 512 bytes or frames not conforming to the minimum frame size once bursting is active.'''
[[register]]
  name = "EXCESSIVE_RX_LENGTH"
  type = "mixed"
  width = 32
  description = "Oversize Frames Received"
  default = "0x00000000"
  offset = "0x00000188"
  [[register.field]]
    name = "RESERVED"
    bits = "31:10"
    type = "ro"
  [[register.field]]
    name = "COUNT"
    bits = "9:0"
    type = "rw"
[[register]]
  name = "RX_JABBERS"
  type = "mixed"
  width = 32
  description = "Jabbers Received"
  default = "0x00000000"
  offset = "0x0000018C"
  [[register.field]]
    name = "RESERVED"
    bits = "31:10"
    type = "ro"
  [[register.field]]
    name = "COUNT"
    bits = "9:0"
    type = "rw"
[[register]]
  name = "FCS_ERRORS"
  type = "mixed"
  width = 32
  description = "Frame Check Sequence Errors"
  default = "0x00000000"
  offset = "0x00000190"
  [[register.field]]
    name = "RESERVED"
    bits = "31:10"
    type = "ro"
  [[register.field]]
    name = "COUNT"
    bits = "9:0"
    type = "rw"
    shortdesc = '''Frame check sequence errors - a 10 bit register counting frames that are an integral number of bytes, have bad CRC and are between 64 and 1518 bytes in length (1536 if bit 8 set in network configuration register, 10,240 bytes if bit 3 is set in the network configuration register).'''
    longdesc = '''This register is also incremented if a symbol error is detected and the frame is of valid length and has an integral number of bytes. This register is incremented for a frame with bad FCS, regardless of whether it is copied to memory due to ignore FCS mode being enabled in bit 26 of the network configuration register.'''
[[register]]
  name = "RX_LENGTH_ERRORS"
  type = "mixed"
  width = 32
  description = "Length Field Frame Errors"
  default = "0x00000000"
  offset = "0x00000194"
  [[register.field]]
    name = "RESERVED"
    bits = "31:10"
    type = "ro"
  [[register.field]]
    name = "COUNT"
    bits = "9:0"
    type = "rw"
    shortdesc = '''Length field frame errors - this 10-bit register counts the number of frames received that have a measured length shorter than that extracted from the length field (bytes 13 and 14).'''
    longdesc = '''This condition is only counted if the value of the length field is less than 0x0600, the frame is not of excessive length and checking is enabled through bit 16 of the network configuration register.'''
[[register]]
  name = "RX_SYMBOL_ERRORS"
  type = "mixed"
  width = 32
  description = "Receive Symbol Errors"
  default = "0x00000000"
  offset = "0x00000198"
  [[register.field]]
    name = "RESERVED"
    bits = "31:10"
    type = "ro"
  [[register.field]]
    name = "COUNT"
    bits = "9:0"
    type = "rw"
    shortdesc = '''Receive symbol errors - a 10-bit register counting the number of frames that had rx_er asserted during reception.'''
    longdesc = '''For 10/100 mode symbol errors are counted regardless of frame length checks. For gigabit mode the frame must satisfy slot time requirements in order to count a symbol error. Additionally, in gigabit half duplex mode, carrier extension errors are also recorded. Receive symbol errors will also be counted as an FCS or alignment error if the frame is between 64 and 1518 bytes (1536 bytes if bit 8 is set in the network configuration register, 10240 bytes if bit 3 is set in the network configuration register). If the frame is larger it will be recorded as a jabber error.'''
[[register]]
  name = "ALIGNMENT_ERRORS"
  type = "mixed"
  width = 32
  description = "Alignment Errors"
  default = "0x00000000"
  offset = "0x0000019C"
  [[register.field]]
    name = "RESERVED"
    bits = "31:10"
    type = "ro"
  [[register.field]]
    name = "COUNT"
    bits = "9:0"
    type = "rw"
    shortdesc = '''Alignment errors - a 10 bit register counting frames that are not an integral number of bytes long and have bad CRC when their length is truncated to an integral number of bytes and are between 64 and 1518 bytes in length (1536 if bit 8 set in network configuration register, 10,240 bytes if bit 3 is set in the network configuration register).'''
    longdesc = '''This register is also incremented if a symbol error is detected and the frame is of valid length and does not have an integral number of bytes.'''
[[register]]
  name = "RX_RESOURCE_ERRORS"
  type = "mixed"
  width = 32
  description = "Receive Resource Errors"
  default = "0x00000000"
  offset = "0x000001A0"
  [[register.field]]
    name = "RESERVED"
    bits = "31:18"
    type = "ro"
  [[register.field]]
    name = "COUNT"
    bits = "17:0"
    type = "rw"
    shortdesc = '''Receive resource errors - an 18 bit register counting the number of frames that were successfully received by the MAC (correct address matched frame and adequate slot time) but could not be copied to memory because no receive buffer was available.'''
    longdesc = '''This occurs when the GEM reads a buffer descriptor with its ownership (or used) bit set.'''
[[register]]
  name = "RX_OVERRUNS"
  type = "mixed"
  width = 32
  description = "Receive Overruns"
  default = "0x00000000"
  offset = "0x000001A4"
  [[register.field]]
    name = "RESERVED"
    bits = "31:10"
    type = "ro"
  [[register.field]]
    name = "COUNT"
    bits = "9:0"
    type = "rw"
[[register]]
  name = "RX_IP_CK_ERRORS"
  type = "mixed"
  width = 32
  description = "IP Header Checksum Errors"
  default = "0x00000000"
  offset = "0x000001A8"
  [[register.field]]
    name = "RESERVED"
    bits = "31:8"
    type = "ro"
  [[register.field]]
    name = "COUNT"
    bits = "7:0"
    type = "rw"
[[register]]
  name = "RX_TCP_CK_ERRORS"
  type = "mixed"
  width = 32
  description = "TCP Checksum Errors"
  default = "0x00000000"
  offset = "0x000001AC"
  [[register.field]]
    name = "RESERVED"
    bits = "31:8"
    type = "ro"
  [[register.field]]
    name = "COUNT"
    bits = "7:0"
    type = "rw"
[[register]]
  name = "RX_UDP_CK_ERRORS"
  type = "mixed"
  width = 32
  description = "UDP Checksum Errors"
  default = "0x00000000"
  offset = "0x000001B0"
  [[register.field]]
    name = "RESERVED"
    bits = "31:8"
    type = "ro"
  [[register.field]]
    name = "COUNT"
    bits = "7:0"
    type = "rw"
[[register]]
  name = "AUTO_FLUSHED_PKTS"
  type = "mixed"
  width = 32
  description = "Receive DMA Flushed Packets"
  default = "0x00000000"
  offset = "0x000001B4"
  [[register.field]]
    name = "RESERVED"
    bits = "31:16"
    type = "ro"
  [[register.field]]
    name = "COUNT"
    bits = "15:0"
    type = "rw"
    shortdesc = '''Flushed RX pkts counter.'''
    longdesc = '''A 16 bit register counting the number of frames that have been flushed from the receive SRAM based packet buffer due to one of the following reasons..1.When partial store and forward mode is enabled or bit 24 of the DMA configuration register is enabled, a packet is received while there is no AMBA (AHB/AXI) resource. 2.When partial store and forward mode is enabled and an AMBA (AHB/AXI) error is encountered while writing the packet data to external memory. When bit 18 of the network control register(software action to flush a packet from the head of the PBUF queue) is pulsed and the GEM DMA is not currently busy.'''
[[register]]
  name = "TSU_TIMER_INCR_SUB_NSEC"
  type = "mixed"
  width = 32
  description = "1588 Timer Increment Register sub nsec"
  default = "0x00000000"
  offset = "0x000001BC"
  [[register.field]]
    name = "SUB_NS_INCR_LSB"
    bits = "31:24"
    type = "rw"
  [[register.field]]
    name = "RESERVED"
    bits = "23:16"
    type = "ro"
  [[register.field]]
    name = "SUB_NS_INCR"
    bits = "15:0"
    type = "rw"
    shortdesc = '''These are the most significant bits [23:8] of the sub-ns value by which the 1588 timer will be incremented each clock cycle.'''
    longdesc = '''24 bits of sub nanosecond precision gives resolution of approximately 5.86E-17 seconds (16 bits gives 15.2 femtoseconds).'''
[[register]]
  name = "TSU_TIMER_MSB_SEC"
  type = "mixed"
  width = 32
  description = "1588 Timer Seconds Register 47:32"
  default = "0x00000000"
  offset = "0x000001C0"
  [[register.field]]
    name = "RESERVED"
    bits = "31:16"
    type = "ro"
  [[register.field]]
    name = "TIMER"
    bits = "15:0"
    type = "rw"
    shortdesc = '''TSU timer value (s).'''
    longdesc = '''Most significant 16 bits of seconds timer count. The register is writeable. The 48-bit counter increments by one when the 1588 nanoseconds counter counts to one second. It may also be incremented or decremented when the timer adjust register is written (if decremented from zero the 48-bit combined count would roll back to 0xFFFFFFFFFFFF). Note: The value of this register is used only when the lower 32 bit register is written to. This s to ensure a single update of the 48 bit seconds value'''
[[register]]
  name = "TSU_STROBE_MSB_SEC"
  type = "ro"
  width = 32
  description = "1588 Timer Sync Strobe Seconds Register 47:32"
  default = "0x00000000"
  offset = "0x000001C4"
  [[register.field]]
    name = "RESERVED"
    bits = "31:16"
    type = "ro"
  [[register.field]]
    name = "STROBE"
    bits = "15:0"
    type = "ro"
    shortdesc = '''1588 Timer Sync Strobe Seconds.'''
    longdesc = '''The most significant 16-bit value of the Timer Seconds register captured when gem_tsu_ms and gem_tsu_inc_ctrl are zero.'''
[[register]]
  name = "TSU_STROBE_SEC"
  type = "ro"
  width = 32
  description = "1588 Timer Sync Strobe Seconds Register 31:0"
  default = "0x00000000"
  offset = "0x000001C8"
  [[register.field]]
    name = "STROBE"
    bits = "31:0"
    type = "ro"
    shortdesc = '''1588 Timer Sync Strobe Seconds.'''
    longdesc = '''The lowest significant 32-bit value of the Timer Seconds register captured when gem_tsu_ms and gem_tsu_inc_ctrl are zero.'''
[[register]]
  name = "TSU_STROBE_NSEC"
  type = "ro"
  width = 32
  description = "1588 Timer Sync Strobe Nanoseconds Register"
  default = "0x00000000"
  offset = "0x000001CC"
  [[register.field]]
    name = "RESERVED"
    bits = "31:30"
    type = "ro"
  [[register.field]]
    name = "STROBE"
    bits = "29:0"
    type = "ro"
    shortdesc = '''1588 Timer Sync Strobe Nanoseconds.'''
    longdesc = '''The value of the Timer Nanoseconds register captured when gem_tsu_ms and gem_tsu_inc_ctrl are zero.'''
[[register]]
  name = "TSU_TIMER_SEC"
  type = "rw"
  width = 32
  description = "1588 Timer Seconds Register 31:0"
  default = "0x00000000"
  offset = "0x000001D0"
  [[register.field]]
    name = "TIMER"
    bits = "31:0"
    type = "rw"
    shortdesc = '''1588 Timer Seconds Register.'''
    longdesc = '''TSU timer value (s). Least significant 32 bits of seconds timer count. This register is writeable. The 48-bit counter increments by one when the 1588 nanoseconds counter counts to one second. It may also be incremented or decremented when the timer adjust register is written (if decremented from zero the 48-bit combined count would roll back to 0xFFFFFFFFFFFF).'''
[[register]]
  name = "TSU_TIMER_NSEC"
  type = "mixed"
  width = 32
  description = "1588 Timer Nanoseconds Register"
  default = "0x00000000"
  offset = "0x000001D4"
  [[register.field]]
    name = "RESERVED"
    bits = "31:30"
    type = "ro"
  [[register.field]]
    name = "TIMER"
    bits = "29:0"
    type = "rw"
    shortdesc = '''Timer count in nanoseconds.'''
    longdesc = '''This register is writeable. It can also be adjusted by writes to the 1588 timer adjust register. It increments by the value of the 1588 timer increment register each clock cycle (if this register is close to zero and a write to the timer adjust register causes a decrement the seconds register will be decremented if necessary and the nanoseconds register will roll back to 9999999xx(dec)).'''
[[register]]
  name = "TSU_TIMER_ADJUST"
  type = "mixed"
  width = 32
  description = "This register returns all zeroes when read."
  default = "0x00000000"
  offset = "0x000001D8"
  [[register.field]]
    name = "ADD_SUBTRACT"
    bits = "31"
    type = "wo"
    shortdesc = '''Write as one to subtract from the 1588 timer.'''
    longdesc = '''Write as zero to add to it.'''
  [[register.field]]
    name = "RESERVED"
    bits = "30"
    type = "ro"
  [[register.field]]
    name = "INCREMENT_VALUE"
    bits = "29:0"
    type = "wo"
    shortdesc = '''Timer increment value.'''
    longdesc = '''The number of nanoseconds to increment or decrement the 1588 timer nanoseconds register. If necessary the 1588 seconds register will be incremented or decremented.'''
[[register]]
  name = "TSU_TIMER_INCR"
  type = "mixed"
  width = 32
  description = "1588 Timer Increment Register"
  default = "0x00000000"
  offset = "0x000001DC"
  [[register.field]]
    name = "RESERVED"
    bits = "31:24"
    type = "ro"
  [[register.field]]
    name = "NUM_INCS"
    bits = "23:16"
    type = "rw"
    shortdesc = '''Number of incs before alt inc.'''
    longdesc = '''The number of increments after which the alternative increment is used.'''
  [[register.field]]
    name = "ALT_NS_INCR"
    bits = "15:8"
    type = "rw"
    shortdesc = '''Alternative nanoseconds count.'''
    longdesc = '''Alternative count of nanoseconds by which the 1588 timer nanoseconds register will be incremented each clock cycle.'''
  [[register.field]]
    name = "NS_INCREMENT"
    bits = "7:0"
    type = "rw"
    shortdesc = '''A count of nanoseconds by which the 1588 timer nanoseconds register will be incremented each clock cycle.'''
    longdesc = '''These are the most significant 8 bits of the 32 bit timer_increment counter. The tsu_timer_incr_sub_nsec register holds the least significant 24 bits of the increment.'''
[[register]]
  name = "TSU_PTP_TX_SEC"
  type = "ro"
  width = 32
  description = "PTP Event Frame Transmitted Seconds Register 31:0"
  default = "0x00000000"
  offset = "0x000001E0"
  [[register.field]]
    name = "TIMER"
    bits = "31:0"
    type = "ro"
    shortdesc = '''PTP Event Frame Transmitted Seconds.'''
    longdesc = '''The register is updated with the value that the 1588 timer seconds register held when the SFD of a PTP transmit primary event crosses the MII interface. The actual update occurs when the GEM recognizes the frame as a PTP sync or delay_req frame. An interrupt is issued when the register is updated.'''
[[register]]
  name = "TSU_PTP_TX_NSEC"
  type = "ro"
  width = 32
  description = "PTP Event Frame Transmitted Nanoseconds Register"
  default = "0x00000000"
  offset = "0x000001E4"
  [[register.field]]
    name = "RESERVED"
    bits = "31:30"
    type = "ro"
  [[register.field]]
    name = "TIMER"
    bits = "29:0"
    type = "ro"
    shortdesc = '''PTP Event Frame Transmitted Nanoseconds.'''
    longdesc = '''The register is updated with the value that the 1588 timer nanoseconds register held when the SFD of a PTP transmit primary event crosses the MII interface. The actual update occurs when the GEM recognizes the frame as a PTP sync or delay_req frame. An interrupt is issued when the register is updated.'''
[[register]]
  name = "TSU_PTP_RX_SEC"
  type = "ro"
  width = 32
  description = "PTP Event Frame Received Seconds Register 31:0"
  default = "0x00000000"
  offset = "0x000001E8"
  [[register.field]]
    name = "TIMER"
    bits = "31:0"
    type = "ro"
    shortdesc = '''PTP Event Frame Received Seconds.'''
    longdesc = '''The register is updated with the value that the 1588 timer seconds register held when the SFD of a PTP receive primary event crosses the MII interface. The actual update occurs when the GEM recognizes the frame as a PTP sync or delay_req frame. An interrupt is issued when the register is updated.'''
[[register]]
  name = "TSU_PTP_RX_NSEC"
  type = "ro"
  width = 32
  description = "PTP Event Frame Received Nanoseconds Register"
  default = "0x00000000"
  offset = "0x000001EC"
  [[register.field]]
    name = "RESERVED"
    bits = "31:30"
    type = "ro"
  [[register.field]]
    name = "TIMER"
    bits = "29:0"
    type = "ro"
    shortdesc = '''PTP Event Frame Received Nanoseconds.'''
    longdesc = '''The register is updated with the value that the 1588 timer nanoseconds register held when the SFD of a PTP receive primary event crosses the MII interface. The actual update occurs when the GEM recognizes the frame as a PTP sync or delay_req frame. An interrupt is issued when the register is updated.'''
[[register]]
  name = "TSU_PEER_TX_SEC"
  type = "ro"
  width = 32
  description = "PTP Peer Event Frame Transmitted Seconds Register 31:0"
  default = "0x00000000"
  offset = "0x000001F0"
  [[register.field]]
    name = "TIMER"
    bits = "31:0"
    type = "ro"
    shortdesc = '''PTP Peer Event Frame Received Seconds.'''
    longdesc = '''The register is updated with the value that the 1588 timer seconds register held when the SFD of a PTP transmit peer event crosses the MII interface. The actual update occurs when the GEM recognizes the frame as a PTP pdealy_req or pdelay_resp frame. An interrupt is issued when the register is updated.'''
[[register]]
  name = "TSU_PEER_TX_NSEC"
  type = "ro"
  width = 32
  description = "PTP Peer Event Frame Transmitted Nanoseconds Register"
  default = "0x00000000"
  offset = "0x000001F4"
  [[register.field]]
    name = "RESERVED"
    bits = "31:30"
    type = "ro"
  [[register.field]]
    name = "TIMER"
    bits = "29:0"
    type = "ro"
    shortdesc = '''PTP Peer Event Frame Transmitted Nanoseconds.'''
    longdesc = '''The register is updated with the value that the 1588 timer nanoseconds register held when the SFD of a PTP transmit peer event crosses the MII interface. The actual update occurs when the GEM recognizes the frame as a PTP pdelay_req or pdelay_resp frame. An interrupt is issued when the register is updated.'''
[[register]]
  name = "TSU_PEER_RX_SEC"
  type = "ro"
  width = 32
  description = "PTP Peer Event Frame Received Seconds Register 31:0"
  default = "0x00000000"
  offset = "0x000001F8"
  [[register.field]]
    name = "TIMER"
    bits = "31:0"
    type = "ro"
    shortdesc = '''PTP Peer Event Frame Received Seconds.'''
    longdesc = '''The register is updated with the value that the 1588 timer seconds register held when the SFD of a PTP receive peer event crosses the MII interface. The actual update occurs when the GEM recognizes the frame as a PTP pdelay_req or pdelay_resp frame. An interrupt is issued when the register is updated.'''
[[register]]
  name = "TSU_PEER_RX_NSEC"
  type = "ro"
  width = 32
  description = "PTP Peer Event Frame Received Nanoseconds Register"
  default = "0x00000000"
  offset = "0x000001FC"
  [[register.field]]
    name = "RESERVED"
    bits = "31:30"
    type = "ro"
  [[register.field]]
    name = "TIMER"
    bits = "29:0"
    type = "ro"
    shortdesc = '''PTP Peer Event Frame Received Nanoseconds.'''
    longdesc = '''The register is updated with the value that the 1588 timer nanoseconds register held when the SFD of a PTP receive peer event crosses the MII interface. The actual update occurs when the GEM recognizes the frame as a PTP pdelay_req or pdelay_resp frame. An interrupt is issued when the register is updated.'''
[[register]]
  name = "PCS_CONTROL"
  type = "mixed"
  width = 32
  description = "Note:All PCS registers are defined in the IEEE 802.3 Standard. PCS Control RegisterThis register provides the main control functions with respect to the PCS."
  default = "0x00001040"
  offset = "0x00000200"
  [[register.field]]
    name = "RESERVED"
    bits = "31:16"
    type = "ro"
    shortdesc = '''Reserved.'''
    longdesc = '''Set to zero.'''
  [[register.field]]
    name = "PCS_SOFTWARE_RESET"
    bits = "15"
    type = "rw"
    shortdesc = '''PCS software reset - written by software to force the hardware logic into a reset state.'''
    longdesc = '''This bit is self clearing. When reading this bit, logic 1 is returned until both the soft reset has completed and the PCS is enabled through the PCS select bit of the network configuration register. Writing logic 0 has no affect.'''
  [[register.field]]
    name = "LOOPBACK_MODE"
    bits = "14"
    type = "rw"
    shortdesc = '''Loopback mode - the ewrap output pin of the GEM reflects this control bit, and can be used to select loopback mode in the PHY transceiver.'''
    longdesc = '''0: Loopback mode disabled. 1: Loopback mode enabled.'''
  [[register.field]]
    name = "SPEED_SELECT_BIT_1"
    bits = "13"
    type = "ro"
    shortdesc = '''Speed select bit 1 - combined with speed select [0] to indicate the speed of operation of the PCS.'''
    longdesc = '''As the GEM PCS is only intended to operate at 1000 Mbps, this bit is hardwired to logic 0.'''
  [[register.field]]
    name = "ENABLE_AUTO_NEG"
    bits = "12"
    type = "rw"
  [[register.field]]
    name = "RESERVED"
    bits = "11:10"
    type = "ro"
    shortdesc = '''Reserved.'''
    longdesc = '''Set to zero.'''
  [[register.field]]
    name = "RESTART_AUTO_NEG"
    bits = "9"
    type = "rw"
    shortdesc = '''Restart auto-negotiation - when set active high, the hardware restarts auto-negotiation.'''
    longdesc = '''This bit is self clearing, but once set shall remain in this state until auto-negotiation has restarted. Writing logic 0 has no affect.'''
  [[register.field]]
    name = "MAC_DUPLEX_STATE"
    bits = "8"
    type = "ro"
    shortdesc = '''MAC Duplex state.'''
    longdesc = '''This returns the value of the MAC's duplex state as indicated in bit 1 of the MAC's network configuration register.'''
  [[register.field]]
    name = "COLLISION_TEST"
    bits = "7"
    type = "rw"
    shortdesc = '''Collision test - when set active high, the PCS generates collisions on transmit.'''
    longdesc = '''This bit should only be set for test purposes.'''
  [[register.field]]
    name = "SPEED_SELECT_BIT_0"
    bits = "6"
    type = "ro"
    shortdesc = '''Speed select bit 0 - combined with speed select [1] to indicate the speed of operation of the PCS.'''
    longdesc = '''As the GEM PCS is only intended to operate at 1000 Mbps, this bit is hardwired to logic 1.'''
  [[register.field]]
    name = "RESERVED"
    bits = "5:0"
    type = "ro"
    shortdesc = '''Reserved.'''
    longdesc = '''Set to zero.'''
[[register]]
  name = "PCS_STATUS"
  type = "ro"
  width = 32
  description = "This register indicates general status information concerning the PCS."
  default = "0x00000109"
  offset = "0x00000204"
  [[register.field]]
    name = "RESERVED"
    bits = "31:16"
    type = "ro"
    shortdesc = '''Reserved.'''
    longdesc = '''Set to zero.'''
  [[register.field]]
    name = "BASE_100_T4"
    bits = "15"
    type = "ro"
    shortdesc = '''100 BASE-T4 - the GEM PCS does not support 100 BASE-T4.'''
    longdesc = '''This bit is hardwired to logic 0.'''
  [[register.field]]
    name = "BASE_100_X_FULL_DUPLEX"
    bits = "14"
    type = "ro"
    shortdesc = '''100 BASE-X full duplex - the GEM PCS does not support 100 BASE-X.'''
    longdesc = '''This bit is hardwired to logic 0.'''
  [[register.field]]
    name = "BASE_100_X_HALF_DUPLEX"
    bits = "13"
    type = "ro"
    shortdesc = '''100 BASE-X half duplex - the GEM PCS does not support 100 BASE-X.'''
    longdesc = '''This bit is hardwired to logic 0.'''
  [[register.field]]
    name = "MBPS_10_FULL_DUPLEX"
    bits = "12"
    type = "ro"
    shortdesc = '''10 Mbps full duplex - the GEM PCS does not support this mode.'''
    longdesc = '''This bit is hardwired to logic 0.'''
  [[register.field]]
    name = "MBPS_10_HALF_DUPLEX"
    bits = "11"
    type = "ro"
    shortdesc = '''10 Mbps half duplex - the GEM PCS does not support this mode.'''
    longdesc = '''This bit is hardwired to logic 0.'''
  [[register.field]]
    name = "BASE_100_T2_FULL_DUPLEX"
    bits = "10"
    type = "ro"
    shortdesc = '''100 BASE-T2 full duplex - the GEM PCS does not support 100 BASE-T2.'''
    longdesc = '''This bit is hardwired to logic 0.'''
  [[register.field]]
    name = "BASE_100_T2_HALF_DUPLEX"
    bits = "9"
    type = "ro"
    shortdesc = '''100 BASE-T2 half duplex - the GEM PCS does not support 100 BASE-T2.'''
    longdesc = '''This bit is hardwired to logic 0.'''
  [[register.field]]
    name = "EXTENDED_STATUS"
    bits = "8"
    type = "ro"
    shortdesc = '''Extended status - when set active high, indicates extended status information is present in the PCS auto-negotiation extended status register.'''
    longdesc = '''This bit is hardwired to logic 1.'''
  [[register.field]]
    name = "RESERVED"
    bits = "7:6"
    type = "ro"
    shortdesc = '''Reserved.'''
    longdesc = '''Set to zero.'''
  [[register.field]]
    name = "AUTO_NEG_COMPLETE"
    bits = "5"
    type = "ro"
  [[register.field]]
    name = "REMOTE_FAULT"
    bits = "4"
    type = "ro"
    shortdesc = '''Remote fault - set active high if the link partner remote fault bits in the PCS auto-negotiation link partner ability register, indicates an error.'''
    longdesc = '''Resets low when read.'''
  [[register.field]]
    name = "AUTO_NEG_ABILITY"
    bits = "3"
    type = "ro"
    shortdesc = '''Auto-negotiation ability - this bit indicates whether the PCS has auto-negotiation ability and reflects the value of the auto-negotiation enable bit in the PCS control register.'''
    longdesc = '''0: PCS is not able to perform auto-negotiation. 1: PCS is able to perform auto-negotiation.'''
  [[register.field]]
    name = "LINK_STATUS"
    bits = "2"
    type = "ro"
    shortdesc = '''Link status - indicates the status of the physical connection to the link partner.'''
    longdesc = '''When set to logic 1 the link is up, and when set to logic 0, the link is down. If auto-negotiation is disabled this returns the synchronisation status. Held at logic 0 if the link goes down until this bit is read.'''
  [[register.field]]
    name = "RESERVED"
    bits = "1"
    type = "ro"
    shortdesc = '''Reserved.'''
    longdesc = '''Set to zero.'''
  [[register.field]]
    name = "EXTENDED_CAPABILITIES"
    bits = "0"
    type = "ro"
    shortdesc = '''Extended register capabilities - when set active high, indicates the PCS supports extended register capabilities.'''
    longdesc = '''This bit is hardwired to logic 1.'''
[[register]]
  name = "PCS_PHY_TOP_ID"
  type = "ro"
  width = 32
  description = "The value of this register indicates the upper 16-bits of the PHY's identification code. This is a read-only register with a value defined by `gem_phy_id_top"
  default = "0x00004007"
  offset = "0x00000208"
  [[register.field]]
    name = "RESERVED"
    bits = "31:16"
    type = "ro"
    shortdesc = '''Reserved.'''
    longdesc = '''Set to zero.'''
  [[register.field]]
    name = "ID_CODE"
    bits = "15:0"
    type = "ro"
[[register]]
  name = "PCS_PHY_BOT_ID"
  type = "ro"
  width = 32
  description = "The value of this register indicates the lower 16-bits of the PHY's identification code. This is a read-only register with a value defined by `gem_phy_id_bot"
  default = "0x00000106"
  offset = "0x0000020C"
  [[register.field]]
    name = "RESERVED"
    bits = "31:16"
    type = "ro"
    shortdesc = '''Reserved.'''
    longdesc = '''Set to zero.'''
  [[register.field]]
    name = "ID_CODE"
    bits = "15:0"
    type = "ro"
[[register]]
  name = "PCS_AN_ADV"
  type = "mixed"
  width = 32
  description = "The value of this register is used to transmit the base page of the GEM PCS capabilities. Note this is only valid for the default configuration where SGMII is not included in the GEM. In this case the registers is reserved. When SGMII is included, this register returns fixed 0x00000001 when read. SGMII specifies that the transmit configuration information sent from the MAC to the PHY is fixed with bit 14 set to 1 to indicate acknowledge, bit 0 set to 1 to indicate SGMII and all other bits set to 0."
  default = "0x00000020"
  offset = "0x00000210"
  [[register.field]]
    name = "RESERVED"
    bits = "31:16"
    type = "ro"
    shortdesc = '''Reserved.'''
    longdesc = '''Set to zero.'''
  [[register.field]]
    name = "NEXT_PAGE"
    bits = "15"
    type = "rw"
    shortdesc = '''Next page.'''
    longdesc = '''When set active high, this bit is used during auto-negotiation to indicate to the link partner that the PCS requires exchanging next pages.'''
  [[register.field]]
    name = "RESERVED"
    bits = "14"
    type = "ro"
    shortdesc = '''Reserved.'''
    longdesc = '''Set to zero.'''
  [[register.field]]
    name = "REMOTE_FAULT"
    bits = "13:12"
    type = "rw"
    shortdesc = '''Remote fault [1:0] - indicates and classifies a remote fault condition to the link partner:00: No error, Link O.'''
    longdesc = '''K.01: Link Failure. 10: Off line. 11: Auto-negotiation error.'''
  [[register.field]]
    name = "RESERVED"
    bits = "11:9"
    type = "ro"
    shortdesc = '''Reserved.'''
    longdesc = '''Set to zero.'''
  [[register.field]]
    name = "PAUSE"
    bits = "8:7"
    type = "rw"
    shortdesc = '''Pause[1:0] - used to provide a pause capability mechanism as follows:00: No pause.'''
    longdesc = '''01: Symmetric pause. 10: Asymmetric pause toward link partner. 11: Both symmetric pause and asymmetric pause toward link device.'''
  [[register.field]]
    name = "HALF_DUPLEX"
    bits = "6"
    type = "rw"
    shortdesc = '''Half duplex - this bit defines to the link partner whether the GEM is capable of supporting half duplex operation.'''
    longdesc = '''0: The GEM cannot support half duplex. 1: The GEM can support half duplex.'''
  [[register.field]]
    name = "FULL_DUPLEX"
    bits = "5"
    type = "rw"
    shortdesc = '''Full duplex - this bit defines to the link partner whether the GEM is capable of supporting full duplex operation.'''
    longdesc = '''0: The GEM cannot support full duplex. 1: The GEM can support full duplex.'''
  [[register.field]]
    name = "RESERVED"
    bits = "4:0"
    type = "ro"
    shortdesc = '''Reserved.'''
    longdesc = '''Set to zero.'''
[[register]]
  name = "PCS_AN_LP_BASE"
  type = "ro"
  width = 32
  description = "For non SGMII (default) mode, the value of this register contains the link partner's base page received information. This register is updated in the ABILITY_DETECT state of the PCS auto-negotiation state machine so bit 14 will only be set if the link partner is sending acknowledge while the PCS in this state. The register is not updated in the ACK_DETECT state. For SGMII mode, the contents of this register change to the one defined in the SGMII standard. The value of this register contains the link partner's base page received information. In this case the link partner is the PHY connected by the SGMII."
  default = "0x00000000"
  offset = "0x00000214"
  [[register.field]]
    name = "RESERVED"
    bits = "31:16"
    type = "ro"
    shortdesc = '''Reserved.'''
    longdesc = '''Set to zero.'''
  [[register.field]]
    name = "LINK_PARTNER_NEXT_PAGE_STATUS"
    bits = "15"
    type = "ro"
    shortdesc = '''The contents of this register change depending on SGMII or non SGMII (default) mode.'''
    longdesc = '''Default Mode:Link partner next page - when set active high, this bit indicates the link partner's intention to exchange next pages.SGMII Mode: Link Status.0: Link Down.1: Link Up.'''
  [[register.field]]
    name = "LINK_PARTNER_ACKNOWLEDGE"
    bits = "14"
    type = "ro"
  [[register.field]]
    name = "LINK_PARTNER_REMOTE_FAULT_DUPLEX_MODE"
    bits = "13:12"
    type = "ro"
    shortdesc = '''The contents of this register change depending on SGMII or non SGMII (default) mode.'''
    longdesc = '''Default Mode:Link partner remote fault [1:0] - indicates and classifies a remote fault condition has been detected by the link partner as follows:00: No error, Link O.K.01: Link Failure.10: Off line. 11: Auto-negotiation error.SGMII Mode: Bit 13: Reserved. Read as Zero.Bit 12: 0: Half Duplex. 1: Full Duplex.'''
  [[register.field]]
    name = "SPEED_RESERVED"
    bits = "11:9"
    type = "ro"
    shortdesc = '''The contents of this register change depending on SGMII or non SGMII (default) mode.'''
    longdesc = '''Default Mode: Reserved. Set to zero.SGMII Mode: Bits 11:10: Speed: 11: Reserved10: 1000 Mbps01: 100Mbps00: 10 Mbps Bit 9: Reserved. Read as Zero.'''
  [[register.field]]
    name = "PAUSE"
    bits = "8:7"
    type = "ro"
    shortdesc = '''The contents of this register change depending on SGMII or non SGMII (default) mode.'''
    longdesc = '''Default Mode: Pause[1:0] - provides the link partner's pause frame capability as follows:00: No pause. 01: Symmetric pause. 10: Asymmetric pause toward link partner. 11: Both symmetric pause and asymmetric pause toward link device.SGMII Mode: Reserved. Read as Zero.'''
  [[register.field]]
    name = "LINK_PARTNER_HALF_DUPLEX"
    bits = "6"
    type = "ro"
    shortdesc = '''The contents of this register change depending on SGMII or non SGMII (default) mode.'''
    longdesc = '''Default Mode: Link partner half duplex - this bit indicates whether the link partner is capable of supporting half duplex operation. 0: The link partner cannot support half duplex. 1: The link partner can support half duplex.SGMII Mode: Reserved. Read as Zero.'''
  [[register.field]]
    name = "LINK_PARTNER_FULL_DUPLEX"
    bits = "5"
    type = "ro"
    shortdesc = '''The contents of this register change depending on SGMII or non SGMII (default) mode.'''
    longdesc = '''Default Mode: Link partner full duplex - this bit indicates whether the link partner is capable of supporting full duplex operation. 0: The link partner cannot support full duplex. 1: The link partner can support full duplex.SGMII Mode: Reserved. Read as Zero.'''
  [[register.field]]
    name = "RESERVED"
    bits = "4:0"
    type = "ro"
    shortdesc = '''Reserved.'''
    longdesc = '''Set to zero.'''
[[register]]
  name = "PCS_AN_EXP"
  type = "ro"
  width = 32
  description = "This register contains auto-negotiation next page ability and page received information."
  default = "0x00000004"
  offset = "0x00000218"
  [[register.field]]
    name = "RESERVED"
    bits = "31:3"
    type = "ro"
    shortdesc = '''Reserved.'''
    longdesc = '''Set to zero.'''
  [[register.field]]
    name = "NEXT_PAGE_CAPABILITY"
    bits = "2"
    type = "ro"
  [[register.field]]
    name = "PAGE_RECEIVED"
    bits = "1"
    type = "ro"
    shortdesc = '''Page received - this bit is set active high when a new page has been received from the link partner.'''
    longdesc = '''It is cleared when the link partner next page register has been read.'''
  [[register.field]]
    name = "RESERVED"
    bits = "0"
    type = "ro"
    shortdesc = '''Reserved.'''
    longdesc = '''Set to zero.'''
[[register]]
  name = "PCS_AN_NP_TX"
  type = "mixed"
  width = 32
  description = "The value of this register is used to transmit the next page information for the GEM PCS. For next page exchange to work this register must be written within 10 ms of receiving a new page from the link partner. If the link partner is requesting next pages and the GEM has none or no more to send then this register should be written with the null message (0x2001). The value 0x0000 must not be written to this register."
  default = "0x00000000"
  offset = "0x0000021C"
  [[register.field]]
    name = "RESERVED"
    bits = "31:16"
    type = "ro"
    shortdesc = '''Reserved.'''
    longdesc = '''Set to zero.'''
  [[register.field]]
    name = "NEXT_PAGE_TO_TRANSMIT"
    bits = "15"
    type = "rw"
    shortdesc = '''Next page to transmit - this bit indicates whether this is the last next page to be transmitted:0: Last page.'''
    longdesc = '''1: Additional page(s) to follow.'''
  [[register.field]]
    name = "RESERVED"
    bits = "14"
    type = "ro"
    shortdesc = '''Reserved.'''
    longdesc = '''Set to zero.'''
  [[register.field]]
    name = "MESSAGE_PAGE_INDICATOR"
    bits = "13"
    type = "rw"
    shortdesc = '''Message page indicator - this bit identifies the message.'''
    longdesc = '''0: Unformatted page. 1: Message page.'''
  [[register.field]]
    name = "ACKNOWLEDGE_2"
    bits = "12"
    type = "rw"
  [[register.field]]
    name = "RESERVED"
    bits = "11"
    type = "ro"
    shortdesc = '''Reserved.'''
    longdesc = '''Set to zero.'''
  [[register.field]]
    name = "MESSAGE"
    bits = "10:0"
    type = "rw"
[[register]]
  name = "PCS_AN_LP_NP"
  type = "ro"
  width = 32
  description = "This value of this register contains the next page received information from the link partner."
  default = "0x00000000"
  offset = "0x00000220"
  [[register.field]]
    name = "RESERVED"
    bits = "31:16"
    type = "ro"
    shortdesc = '''Reserved.'''
    longdesc = '''Set to zero.'''
  [[register.field]]
    name = "NEXT_PAGE_TO_RECEIVE"
    bits = "15"
    type = "ro"
    shortdesc = '''Next page to receive - this bit indicates whether this is the last page to be received in the sequence by the GEM PCS:0: Last page.'''
    longdesc = '''1: Additional page(s) to follow.'''
  [[register.field]]
    name = "ACKNOWLEDGE"
    bits = "14"
    type = "ro"
  [[register.field]]
    name = "MESSAGE_PAGE_INDICATOR"
    bits = "13"
    type = "ro"
    shortdesc = '''Message page indicator - this bit identifies the message.'''
    longdesc = '''0: Unformatted page. 1: Message page.'''
  [[register.field]]
    name = "ACKNOWLEDGE_2"
    bits = "12"
    type = "ro"
  [[register.field]]
    name = "TOGGLE"
    bits = "11"
    type = "ro"
  [[register.field]]
    name = "MESSAGE"
    bits = "10:0"
    type = "ro"
[[register]]
  name = "PCS_AN_EXT_STATUS"
  type = "ro"
  width = 32
  description = "This register contains PCS auto-negotiation extended status information."
  default = "0x00008000"
  offset = "0x0000023C"
  [[register.field]]
    name = "RESERVED"
    bits = "31:16"
    type = "ro"
    shortdesc = '''Reserved.'''
    longdesc = '''Set to zero.'''
  [[register.field]]
    name = "FULL_DUPLEX_1000BASE_X"
    bits = "15"
    type = "ro"
  [[register.field]]
    name = "HALF_DUPLEX_1000BASE_X"
    bits = "14"
    type = "ro"
  [[register.field]]
    name = "FULL_DUPLEX_1000BASE_T"
    bits = "13"
    type = "ro"
  [[register.field]]
    name = "HALF_DUPLEX_1000BASE_T"
    bits = "12"
    type = "ro"
  [[register.field]]
    name = "RESERVED"
    bits = "11:0"
    type = "ro"
    shortdesc = '''Reserved.'''
    longdesc = '''Set to zero.'''
[[register]]
  name = "RX_LPI"
  type = "mixed"
  width = 32
  description = "Received LPI transitions"
  default = "0x00000000"
  offset = "0x00000270"
  [[register.field]]
    name = "RESERVED"
    bits = "31:16"
    type = "ro"
  [[register.field]]
    name = "COUNT"
    bits = "15:0"
    type = "rw"
    shortdesc = '''Count of RX LPI transitions.'''
    longdesc = '''A count of the number of times there is a transition from receiving normal idle to receiving low power idle. Cleared on read.'''
[[register]]
  name = "RX_LPI_TIME"
  type = "rw"
  width = 32
  description = "Received LPI time"
  default = "0x00000000"
  offset = "0x00000274"
  [[register.field]]
    name = "RESERVED"
    bits = "31:24"
    type = "rw"
  [[register.field]]
    name = "LPI_TIME"
    bits = "23:0"
    type = "rw"
    shortdesc = '''Time in LPI.'''
    longdesc = '''This register increments once every 16 pclk cycles when the LPI indication bit 20 is set in the receive configuration register. Cleared on read.'''
[[register]]
  name = "TX_LPI"
  type = "mixed"
  width = 32
  description = "Transmit LPI transitions"
  default = "0x00000000"
  offset = "0x00000278"
  [[register.field]]
    name = "RESERVED"
    bits = "31:16"
    type = "ro"
  [[register.field]]
    name = "COUNT"
    bits = "15:0"
    type = "rw"
    shortdesc = '''Count of LPI transmitions.'''
    longdesc = '''A count of the number of times the enable LPI transmission bit 20 goes from low to high in the transmit control register.'''
[[register]]
  name = "TX_LPI_TIME"
  type = "mixed"
  width = 32
  description = "Transmit LPI time"
  default = "0x00000000"
  offset = "0x0000027C"
  [[register.field]]
    name = "RESERVED"
    bits = "31:24"
    type = "ro"
  [[register.field]]
    name = "LPI_TIME"
    bits = "23:0"
    type = "rw"
    shortdesc = '''Time in LPI.'''
    longdesc = '''This register increments once every 16 pclk cycles when the enable LPI transmission bit 20 is set in the transmit control register. Cleared on read.'''
[[register]]
  name = "DESIGNCFG_DEBUG1"
  type = "ro"
  width = 32
  description = "The GEM has many parameterisation options to configure the IP during compilation stage. This is achieved using Verilog define compiler directives in an include file called gem_defs.v. Refer to Section 3 for further details on how to configure the GEM in this way. This configuration is readable through APB addressable registers as follows: Design Configuration Register 1"
  default = "0x0450011C"
  offset = "0x00000280"
  [[register.field]]
    name = "AXI_CACHE_VALUE"
    bits = "31:28"
    type = "ro"
  [[register.field]]
    name = "DMA_BUS_WIDTH"
    bits = "27:25"
    type = "ro"
  [[register.field]]
    name = "RESERVED"
    bits = "24"
    type = "ro"
  [[register.field]]
    name = "IRQ_READ_CLEAR"
    bits = "23"
    type = "ro"
  [[register.field]]
    name = "NO_SNAPSHOT"
    bits = "22"
    type = "ro"
  [[register.field]]
    name = "NO_STATS"
    bits = "21"
    type = "ro"
  [[register.field]]
    name = "NO_SCAN_PINS"
    bits = "20"
    type = "ro"
  [[register.field]]
    name = "USER_IN_WIDTH"
    bits = "19:15"
    type = "ro"
  [[register.field]]
    name = "USER_OUT_WIDTH"
    bits = "14:10"
    type = "ro"
  [[register.field]]
    name = "USER_IO"
    bits = "9"
    type = "ro"
  [[register.field]]
    name = "APB_REV2"
    bits = "8"
    type = "ro"
  [[register.field]]
    name = "APB_REV1"
    bits = "7"
    type = "ro"
  [[register.field]]
    name = "EXT_FIFO_INTERFACE"
    bits = "6"
    type = "ro"
  [[register.field]]
    name = "NO_INT_LOOPBACK"
    bits = "5"
    type = "ro"
  [[register.field]]
    name = "INT_LOOPBACK"
    bits = "4"
    type = "ro"
  [[register.field]]
    name = "TDC_50"
    bits = "3"
    type = "ro"
  [[register.field]]
    name = "RDC_50"
    bits = "2"
    type = "ro"
  [[register.field]]
    name = "SERDES"
    bits = "1"
    type = "ro"
  [[register.field]]
    name = "NO_PCS"
    bits = "0"
    type = "ro"
[[register]]
  name = "DESIGNCFG_DEBUG2"
  type = "ro"
  width = 32
  description = "Design Configuration Register 2"
  default = "0x73313FFF"
  offset = "0x00000284"
  [[register.field]]
    name = "SPRAM"
    bits = "31"
    type = "ro"
  [[register.field]]
    name = "AXI"
    bits = "30"
    type = "ro"
  [[register.field]]
    name = "TX_PBUF_ADDR"
    bits = "29:26"
    type = "ro"
  [[register.field]]
    name = "RX_PBUF_ADDR"
    bits = "25:22"
    type = "ro"
  [[register.field]]
    name = "TX_PKT_BUFFER"
    bits = "21"
    type = "ro"
  [[register.field]]
    name = "RX_PKT_BUFFER"
    bits = "20"
    type = "ro"
  [[register.field]]
    name = "HPROT_VALUE"
    bits = "19:16"
    type = "ro"
  [[register.field]]
    name = "JUMBO_MAX_LENGTH"
    bits = "15:0"
    type = "ro"
[[register]]
  name = "DESIGNCFG_DEBUG3"
  type = "ro"
  width = 32
  description = "Design Configuration Register 3"
  default = "0x04000000"
  offset = "0x00000288"
  [[register.field]]
    name = "RESERVED"
    bits = "31:30"
    type = "ro"
  [[register.field]]
    name = "NUM_SPEC_ADD_FILTERS"
    bits = "29:24"
    type = "ro"
  [[register.field]]
    name = "RESERVED"
    bits = "23:0"
    type = "ro"
[[register]]
  name = "DESIGNCFG_DEBUG4"
  type = "ro"
  width = 32
  description = "Design Configuration Register 4"
  default = "0x00000000"
  offset = "0x0000028C"
  [[register.field]]
    name = "RESERVED"
    bits = "31:0"
    type = "ro"
[[register]]
  name = "DESIGNCFG_DEBUG5"
  type = "ro"
  width = 32
  description = "Design Configuration Register 5"
  default = "0x502F2744"
  offset = "0x00000290"
  [[register.field]]
    name = "AXI_PROT_VALUE"
    bits = "31:29"
    type = "ro"
  [[register.field]]
    name = "TSU_CLK"
    bits = "28"
    type = "ro"
  [[register.field]]
    name = "RX_BUFFER_LENGTH_DEF"
    bits = "27:20"
    type = "ro"
  [[register.field]]
    name = "TX_PBUF_SIZE_DEF"
    bits = "19"
    type = "ro"
  [[register.field]]
    name = "RX_PBUF_SIZE_DEF"
    bits = "18:17"
    type = "ro"
  [[register.field]]
    name = "ENDIAN_SWAP_DEF"
    bits = "16:15"
    type = "ro"
  [[register.field]]
    name = "MDC_CLOCK_DIV"
    bits = "14:12"
    type = "ro"
  [[register.field]]
    name = "DMA_BUS_WIDTH_DEF"
    bits = "11:10"
    type = "ro"
  [[register.field]]
    name = "PHY_IDENT"
    bits = "9"
    type = "ro"
  [[register.field]]
    name = "TSU"
    bits = "8"
    type = "ro"
  [[register.field]]
    name = "TX_FIFO_CNT_WIDTH"
    bits = "7:4"
    type = "ro"
  [[register.field]]
    name = "RX_FIFO_CNT_WIDTH"
    bits = "3:0"
    type = "ro"
[[register]]
  name = "DESIGNCFG_DEBUG6"
  type = "ro"
  width = 32
  description = "Design Configuration Register 6"
  default = "0x02510002"
  offset = "0x00000294"
  [[register.field]]
    name = "RESERVED"
    bits = "31:26"
    type = "ro"
    shortdesc = '''Reserved.'''
    longdesc = '''Set to zero.'''
  [[register.field]]
    name = "PBUF_CUTTHRU"
    bits = "25"
    type = "ro"
  [[register.field]]
    name = "PFC_MULTI_QUANTUM"
    bits = "24"
    type = "ro"
  [[register.field]]
    name = "DMA_ADDR_WIDTH_IS_64B"
    bits = "23"
    type = "ro"
  [[register.field]]
    name = "HOST_IF_SOFT_SELECT"
    bits = "22"
    type = "ro"
  [[register.field]]
    name = "TX_ADD_FIFO_IF"
    bits = "21"
    type = "ro"
  [[register.field]]
    name = "EXT_TSU_TIMER"
    bits = "20"
    type = "ro"
  [[register.field]]
    name = "TX_PBUF_QUEUE_SEGMENT_SIZE"
    bits = "19:16"
    type = "ro"
  [[register.field]]
    name = "DMA_PRIORITY_QUEUE15"
    bits = "15"
    type = "ro"
  [[register.field]]
    name = "DMA_PRIORITY_QUEUE14"
    bits = "14"
    type = "ro"
  [[register.field]]
    name = "DMA_PRIORITY_QUEUE13"
    bits = "13"
    type = "ro"
  [[register.field]]
    name = "DMA_PRIORITY_QUEUE12"
    bits = "12"
    type = "ro"
  [[register.field]]
    name = "DMA_PRIORITY_QUEUE11"
    bits = "11"
    type = "ro"
  [[register.field]]
    name = "DMA_PRIORITY_QUEUE10"
    bits = "10"
    type = "ro"
  [[register.field]]
    name = "DMA_PRIORITY_QUEUE9"
    bits = "9"
    type = "ro"
  [[register.field]]
    name = "DMA_PRIORITY_QUEUE8"
    bits = "8"
    type = "ro"
  [[register.field]]
    name = "DMA_PRIORITY_QUEUE7"
    bits = "7"
    type = "ro"
  [[register.field]]
    name = "DMA_PRIORITY_QUEUE6"
    bits = "6"
    type = "ro"
  [[register.field]]
    name = "DMA_PRIORITY_QUEUE5"
    bits = "5"
    type = "ro"
  [[register.field]]
    name = "DMA_PRIORITY_QUEUE4"
    bits = "4"
    type = "ro"
  [[register.field]]
    name = "DMA_PRIORITY_QUEUE3"
    bits = "3"
    type = "ro"
  [[register.field]]
    name = "DMA_PRIORITY_QUEUE2"
    bits = "2"
    type = "ro"
  [[register.field]]
    name = "DMA_PRIORITY_QUEUE1"
    bits = "1"
    type = "ro"
  [[register.field]]
    name = "RESERVED"
    bits = "0"
    type = "ro"
    shortdesc = '''Reserved.'''
    longdesc = '''Set to zero.'''
[[register]]
  name = "DESIGNCFG_DEBUG7"
  type = "ro"
  width = 32
  description = "Design Configuration Register 7"
  default = "0x00000000"
  offset = "0x00000298"
  [[register.field]]
    name = "TX_PBUF_NUM_SEGMENTS_Q7"
    bits = "31:28"
    type = "ro"
  [[register.field]]
    name = "TX_PBUF_NUM_SEGMENTS_Q6"
    bits = "27:24"
    type = "ro"
  [[register.field]]
    name = "TX_PBUF_NUM_SEGMENTS_Q5"
    bits = "23:20"
    type = "ro"
  [[register.field]]
    name = "TX_PBUF_NUM_SEGMENTS_Q4"
    bits = "19:16"
    type = "ro"
  [[register.field]]
    name = "TX_PBUF_NUM_SEGMENTS_Q3"
    bits = "15:12"
    type = "ro"
  [[register.field]]
    name = "TX_PBUF_NUM_SEGMENTS_Q2"
    bits = "11:8"
    type = "ro"
  [[register.field]]
    name = "TX_PBUF_NUM_SEGMENTS_Q1"
    bits = "7:4"
    type = "ro"
  [[register.field]]
    name = "TX_PBUF_NUM_SEGMENTS_Q0"
    bits = "3:0"
    type = "ro"
[[register]]
  name = "DESIGNCFG_DEBUG8"
  type = "ro"
  width = 32
  description = "Design Configuration Register 8"
  default = "0x04040404"
  offset = "0x0000029C"
  [[register.field]]
    name = "NUM_TYPE1_SCREENERS"
    bits = "31:24"
    type = "ro"
  [[register.field]]
    name = "NUM_TYPE2_SCREENERS"
    bits = "23:16"
    type = "ro"
  [[register.field]]
    name = "NUM_SCR2_ETHTYPE_REGS"
    bits = "15:8"
    type = "ro"
  [[register.field]]
    name = "NUM_SCR2_COMPARE_REGS"
    bits = "7:0"
    type = "ro"
[[register]]
  name = "DESIGNCFG_DEBUG9"
  type = "ro"
  width = 32
  description = "Design Configuration Register 9"
  default = "0x00000000"
  offset = "0x000002A0"
  [[register.field]]
    name = "TX_PBUF_NUM_SEGMENTS_Q15"
    bits = "31:28"
    type = "ro"
  [[register.field]]
    name = "TX_PBUF_NUM_SEGMENTS_Q14"
    bits = "27:24"
    type = "ro"
  [[register.field]]
    name = "TX_PBUF_NUM_SEGMENTS_Q13"
    bits = "23:20"
    type = "ro"
  [[register.field]]
    name = "TX_PBUF_NUM_SEGMENTS_Q12"
    bits = "19:16"
    type = "ro"
  [[register.field]]
    name = "TX_PBUF_NUM_SEGMENTS_Q11"
    bits = "15:12"
    type = "ro"
  [[register.field]]
    name = "TX_PBUF_NUM_SEGMENTS_Q10"
    bits = "11:8"
    type = "ro"
  [[register.field]]
    name = "TX_PBUF_NUM_SEGMENTS_Q9"
    bits = "7:4"
    type = "ro"
  [[register.field]]
    name = "TX_PBUF_NUM_SEGMENTS_Q8"
    bits = "3:0"
    type = "ro"
[[register]]
  name = "DESIGNCFG_DEBUG10"
  type = "ro"
  width = 32
  description = "Design Configuration Register 10"
  default = "0x22242222"
  offset = "0x000002A4"
  [[register.field]]
    name = "EMAC_BUS_WIDTH"
    bits = "31:28"
    type = "ro"
    shortdesc = '''Takes the value of the `gem_emac_bus_width DEFINE.'''
    longdesc = '''1 - The MAC has a datawidth of 32bits. 2 - The MAC has a datawidth of 64bits. 4 - The MAC has a datawidth of 128bits'''
  [[register.field]]
    name = "TX_PBUF_DATA"
    bits = "27:24"
    type = "ro"
    shortdesc = '''Takes the value of the `gem_tx_pbuf_data DEFINE.'''
    longdesc = '''1 - The TX DPRAM has a datawidth of 32bits. 2 - The TX DPRAM has a datawidth of 64bits. 4 - The TX DPRAM has a datawidth of 128bits'''
  [[register.field]]
    name = "RX_PBUF_DATA"
    bits = "23:20"
    type = "ro"
    shortdesc = '''Takes the value of the `gem_rx_pbuf_data DEFINE.'''
    longdesc = '''1 - The RX DPRAM has a datawidth of 32bits. 2 - The RX DPRAM has a datawidth of 64bits. 4 - RX The DPRAM has a datawidth of 128bits'''
  [[register.field]]
    name = "AXI_ACCESS_PIPELINE_BITS"
    bits = "19:16"
    type = "ro"
  [[register.field]]
    name = "AXI_TX_DESCR_RD_BUFF_BITS"
    bits = "15:12"
    type = "ro"
  [[register.field]]
    name = "AXI_RX_DESCR_RD_BUFF_BITS"
    bits = "11:8"
    type = "ro"
  [[register.field]]
    name = "AXI_TX_DESCR_WR_BUFF_BITS"
    bits = "7:4"
    type = "ro"
  [[register.field]]
    name = "AXI_RX_DESCR_WR_BUFF_BITS"
    bits = "3:0"
    type = "ro"
[[register]]
  name = "INT_Q1_STATUS"
  type = "mixed"
  width = 32
  description = "Priority Queue Interrupt Status Register"
  default = "0x00000000"
  offset = "0x00000400"
  [[register.field]]
    name = "RESERVED"
    bits = "31:12"
    type = "ro"
  [[register.field]]
    name = "RESP_NOT_OK"
    bits = "11"
    type = "rw"
  [[register.field]]
    name = "RECEIVE_OVERRUN"
    bits = "10"
    type = "rw"
  [[register.field]]
    name = "RESERVED"
    bits = "9:8"
    type = "ro"
  [[register.field]]
    name = "TRANSMIT_COMPLETE"
    bits = "7"
    type = "rw"
  [[register.field]]
    name = "AMBA_ERROR"
    bits = "6"
    type = "rw"
  [[register.field]]
    name = "RETRY_LIMIT_EXCEEDED_OR_LATE_COLLISION"
    bits = "5"
    type = "rw"
  [[register.field]]
    name = "RESERVED"
    bits = "4:3"
    type = "ro"
  [[register.field]]
    name = "RX_USED_BIT_READ"
    bits = "2"
    type = "rw"
  [[register.field]]
    name = "RECEIVE_COMPLETE"
    bits = "1"
    type = "rw"
  [[register.field]]
    name = "RESERVED"
    bits = "0"
    type = "ro"
[[register]]
  name = "TRANSMIT_Q1_PTR"
  type = "mixed"
  width = 32
  description = "This register holds the start address of the transmit buffer queue (transmit buffers descriptor list). The transmit buffer queue base address register must be initialized before transmit is started through bit 9 of the network control register. Once transmission has started, any write to the transmit buffer queue base address register is illegal and therefore ignored. Note that due to clock boundary synchronization, it takes a maximum of four pclk cycles from the writing of the transmit start bit before the transmitter is active. Writing to the transmit buffer queue base address register during this time may produce unpredictable results. Reading this register returns the location of the descriptor currently being accessed. Since the DMA handles two frames at once, this may not necessarily be pointing to the current frame being transmitted. In terms of AMBA (AHB/AXI) AHB/AXI operation, the transmit descriptors are written to memory using a single 32bit AHB access. When the datapath is configured at 64bit, the transmit descriptors should be aligned at 64-bit boundaries and each pair of 32-bit descriptors is read from memory using a single AHB access. For 32bit datapaths, the descriptors should be aligned at 32-bit boundaries and the descriptors are read from memory using two individual 32-bit non sequential accesses."
  default = "0x00000000"
  offset = "0x00000440"
  [[register.field]]
    name = "DMA_TX_Q_PTR"
    bits = "31:2"
    type = "rw"
  [[register.field]]
    name = "RESERVED"
    bits = "1:0"
    type = "ro"
[[register]]
  name = "RECEIVE_Q1_PTR"
  type = "mixed"
  width = 32
  description = "This register holds the start address of the receive buffer queue (receive buffers descriptor list). The receive buffer queue base address must be initialized before receive is enabled through bit 2 of the network control register. Once reception is enabled, any write to the receive buffer queue base address register is ignored. Reading this register returns the location of the descriptor currently being accessed. This value increments as buffers are used. Software should not use this register for determining where to remove received frames from the queue as it constantly changes as new frames are received. Software should instead work its way through the buffer descriptor queue checking the used bits. In terms of AMBA (AHB/AXI) operation, the receive descriptors are read from memory using a single 32bit AHB/AXI access. When the datapath is configured at 64bit, the receive descriptors should be aligned at 64-bit boundaries and each pair of 32-bit descriptors is written to using a single 64bit AHB/AXI access. For 32bit datapaths, the receive descriptors should be aligned at 32-bit boundaries and are written to using two individual non sequential 32-bit accesses."
  default = "0x00000000"
  offset = "0x00000480"
  [[register.field]]
    name = "DMA_RX_Q_PTR"
    bits = "31:2"
    type = "rw"
  [[register.field]]
    name = "RESERVED"
    bits = "1:0"
    type = "ro"
[[register]]
  name = "DMA_RXBUF_SIZE_Q1"
  type = "mixed"
  width = 32
  description = "Receive Buffer Queue Size"
  default = "0x00000002"
  offset = "0x000004A0"
  [[register.field]]
    name = "RESERVED"
    bits = "31:8"
    type = "ro"
  [[register.field]]
    name = "DMA_RX_Q_BUF_SIZE"
    bits = "7:0"
    type = "rw"
    shortdesc = '''DMA receive buffer size in system memory.'''
    longdesc = '''The value defined by these bits determines the size of buffer to use in main system memory when writing received data. The value is defined in multiples of 64 bytes.0x01 corresponds to buffers of 64 bytes.0x02 corresponds to 128 bytes etc.For example:0x02: 128 byte0x18: 1536 byte (1*max length frame/buffer)0xA0: 10240 byte (1*10K jumbo frame/buffer)Note that this value should never be written as zero.Note. The reset value of this field is equal to the gem_rx_buffer_length_def define, which is user configurable.'''
[[register]]
  name = "CBS_CONTROL"
  type = "mixed"
  width = 32
  description = "The IdleSlope value is defined as the rate of change of credit when a packet is waiting to be sent. This must not exceed the portTransmitRate which is dependent on the speed of operation, eg, portTranmsitRate: 1Gb/sec= 32'h07735940,100Mb/sec = 32'h017D7840, 10Mb/sec = 32'h002625A0. If 50% of bandwidth was to be allocated to a particular queue in 1Gb/sec mode then the IdleSlope value for that queue would be calculated as 32'h07735940/2. Note: Credit-Based Shaping should be disabled prior to updating the IdleSlope values."
  default = "0x00000000"
  offset = "0x000004BC"
  [[register.field]]
    name = "RESERVED"
    bits = "31:2"
    type = "ro"
  [[register.field]]
    name = "CBS_ENABLE_QUEUE_B"
    bits = "1"
    type = "rw"
    shortdesc = '''Enable Credit-Based shaping on the 2nd highest priority queue (queue B).'''
    longdesc = '''Write 1 to enable'''
  [[register.field]]
    name = "CBS_ENABLE_QUEUE_A"
    bits = "0"
    type = "rw"
    shortdesc = '''Enable Credit-Based Shaping on the highest priority queue (queue A).'''
    longdesc = '''Write 1 to enable'''
[[register]]
  name = "CBS_IDLESLOPE_Q_A"
  type = "rw"
  width = 32
  description = "Queue A is the highest priority queue. This would be queue 8 in an 8 queue configuration."
  default = "0x00000000"
  offset = "0x000004C0"
  [[register.field]]
    name = "IDLESLOPE_A"
    bits = "31:0"
    type = "rw"
[[register]]
  name = "CBS_IDLESLOPE_Q_B"
  type = "rw"
  width = 32
  description = "Queue B is the 2nd highest priority queue. This would be queue 7 in an 8 queue configuration."
  default = "0x00000000"
  offset = "0x000004C4"
  [[register.field]]
    name = "IDLESLOPE_B"
    bits = "31:0"
    type = "rw"
[[register]]
  name = "UPPER_TX_Q_BASE_ADDR"
  type = "rw"
  width = 32
  description = "Upper 32 bits of transmit buffer descriptor queue base address."
  default = "0x00000000"
  offset = "0x000004C8"
  [[register.field]]
    name = "UPPER_TX_Q_BASE_ADDR"
    bits = "31:0"
    type = "rw"
    shortdesc = '''Upper 32 bits of transmit buffer descriptor queue base address.'''
    longdesc = '''Used when 64 bit addressing is enabled. (In releases earlier to 1p06f2 this register also affected the receive descriptor queue.)'''
[[register]]
  name = "TX_BD_CONTROL"
  type = "mixed"
  width = 32
  description = "TX BD control register"
  default = "0x00000000"
  offset = "0x000004CC"
  [[register.field]]
    name = "RESERVED"
    bits = "31:6"
    type = "ro"
  [[register.field]]
    name = "TX_BD_TS_MODE"
    bits = "5:4"
    type = "rw"
  [[register.field]]
    name = "RESERVED"
    bits = "3:0"
    type = "ro"
[[register]]
  name = "RX_BD_CONTROL"
  type = "mixed"
  width = 32
  description = "RX BD control register"
  default = "0x00000000"
  offset = "0x000004D0"
  [[register.field]]
    name = "RESERVED"
    bits = "31:6"
    type = "ro"
  [[register.field]]
    name = "RX_BD_TS_MODE"
    bits = "5:4"
    type = "rw"
  [[register.field]]
    name = "RESERVED"
    bits = "3:0"
    type = "ro"
[[register]]
  name = "UPPER_RX_Q_BASE_ADDR"
  type = "rw"
  width = 32
  description = "Upper 32 bits of receive buffer descriptor queue base address."
  default = "0x00000000"
  offset = "0x000004D4"
  [[register.field]]
    name = "UPPER_RX_Q_BASE_ADDR"
    bits = "31:0"
    type = "rw"
    shortdesc = '''Upper 32 bits of receive buffer descriptor queue base address.'''
    longdesc = '''Used when 64 bit addressing is enabled.'''
[[register]]
  name = "SCREENING_TYPE_1_REGISTER_0"
  type = "mixed"
  width = 32
  description = "Screening type 1 registers are used to allocate up to 16 priority queues to received frames based on certain IP or UDP fields of incoming frames. Firstly, when DS/TC match enable is set (bit 28), the DS (Differentiated Services) field of the received IPv4 header or TCfield (traffic class) of IPv6 headers are matched against bits 11:4. Secondly, when UDP port match enable is set (bit 29), the UDP Destination Port of the received UDP frame is matched against bits 27:12. Both UDP and DS/TC matching can be enabled simultaneously or individually. If a match is successful, then the queue value programmed in bits 2:0 is allocated to the frame. The required number of Type 1 screening registers is configured in the gem defines file. Up to 16 type 1 screening registers have been allocated APB address space between 0x500 and 0x53C. The bit mappings for these registers will be as follows:"
  default = "0x00000000"
  offset = "0x00000500"
  [[register.field]]
    name = "RESERVED"
    bits = "31:30"
    type = "ro"
  [[register.field]]
    name = "UDP_PORT_MATCH_ENABLE"
    bits = "29"
    type = "rw"
  [[register.field]]
    name = "DSTC_ENABLE"
    bits = "28"
    type = "rw"
  [[register.field]]
    name = "UDP_PORT_MATCH"
    bits = "27:12"
    type = "rw"
  [[register.field]]
    name = "DSTC_MATCH"
    bits = "11:4"
    type = "rw"
  [[register.field]]
    name = "QUEUE_NUMBER"
    bits = "3:0"
    type = "rw"
[[register]]
  name = "SCREENING_TYPE_1_REGISTER_1"
  type = "mixed"
  width = 32
  description = "Screening type 1 registers are used to allocate up to 16 priority queues to received frames based on certain IP or UDP fields of incoming frames. Firstly, when DS/TC match enable is set (bit 28), the DS (Differentiated Services) field of the received IPv4 header or TCfield (traffic class) of IPv6 headers are matched against bits 11:4. Secondly, when UDP port match enable is set (bit 29), the UDP Destination Port of the received UDP frame is matched against bits 27:12. Both UDP and DS/TC matching can be enabled simultaneously or individually. If a match is successful, then the queue value programmed in bits 2:0 is allocated to the frame. The required number of Type 1 screening registers is configured in the gem defines file. Up to 16 type 1 screening registers have been allocated APB address space between 0x500 and 0x53C. The bit mappings for these registers will be as follows:"
  default = "0x00000000"
  offset = "0x00000504"
  [[register.field]]
    name = "RESERVED"
    bits = "31:30"
    type = "ro"
  [[register.field]]
    name = "UDP_PORT_MATCH_ENABLE"
    bits = "29"
    type = "rw"
  [[register.field]]
    name = "DSTC_ENABLE"
    bits = "28"
    type = "rw"
  [[register.field]]
    name = "UDP_PORT_MATCH"
    bits = "27:12"
    type = "rw"
  [[register.field]]
    name = "DSTC_MATCH"
    bits = "11:4"
    type = "rw"
  [[register.field]]
    name = "QUEUE_NUMBER"
    bits = "3:0"
    type = "rw"
[[register]]
  name = "SCREENING_TYPE_1_REGISTER_2"
  type = "mixed"
  width = 32
  description = "Screening type 1 registers are used to allocate up to 16 priority queues to received frames based on certain IP or UDP fields of incoming frames. Firstly, when DS/TC match enable is set (bit 28), the DS (Differentiated Services) field of the received IPv4 header or TCfield (traffic class) of IPv6 headers are matched against bits 11:4. Secondly, when UDP port match enable is set (bit 29), the UDP Destination Port of the received UDP frame is matched against bits 27:12. Both UDP and DS/TC matching can be enabled simultaneously or individually. If a match is successful, then the queue value programmed in bits 2:0 is allocated to the frame. The required number of Type 1 screening registers is configured in the gem defines file. Up to 16 type 1 screening registers have been allocated APB address space between 0x500 and 0x53C. The bit mappings for these registers will be as follows:"
  default = "0x00000000"
  offset = "0x00000508"
  [[register.field]]
    name = "RESERVED"
    bits = "31:30"
    type = "ro"
  [[register.field]]
    name = "UDP_PORT_MATCH_ENABLE"
    bits = "29"
    type = "rw"
  [[register.field]]
    name = "DSTC_ENABLE"
    bits = "28"
    type = "rw"
  [[register.field]]
    name = "UDP_PORT_MATCH"
    bits = "27:12"
    type = "rw"
  [[register.field]]
    name = "DSTC_MATCH"
    bits = "11:4"
    type = "rw"
  [[register.field]]
    name = "QUEUE_NUMBER"
    bits = "3:0"
    type = "rw"
[[register]]
  name = "SCREENING_TYPE_1_REGISTER_3"
  type = "mixed"
  width = 32
  description = "Screening type 1 registers are used to allocate up to 16 priority queues to received frames based on certain IP or UDP fields of incoming frames. Firstly, when DS/TC match enable is set (bit 28), the DS (Differentiated Services) field of the received IPv4 header or TCfield (traffic class) of IPv6 headers are matched against bits 11:4. Secondly, when UDP port match enable is set (bit 29), the UDP Destination Port of the received UDP frame is matched against bits 27:12. Both UDP and DS/TC matching can be enabled simultaneously or individually. If a match is successful, then the queue value programmed in bits 2:0 is allocated to the frame. The required number of Type 1 screening registers is configured in the gem defines file. Up to 16 type 1 screening registers have been allocated APB address space between 0x500 and 0x53C. The bit mappings for these registers will be as follows:"
  default = "0x00000000"
  offset = "0x0000050C"
  [[register.field]]
    name = "RESERVED"
    bits = "31:30"
    type = "ro"
  [[register.field]]
    name = "UDP_PORT_MATCH_ENABLE"
    bits = "29"
    type = "rw"
  [[register.field]]
    name = "DSTC_ENABLE"
    bits = "28"
    type = "rw"
  [[register.field]]
    name = "UDP_PORT_MATCH"
    bits = "27:12"
    type = "rw"
  [[register.field]]
    name = "DSTC_MATCH"
    bits = "11:4"
    type = "rw"
  [[register.field]]
    name = "QUEUE_NUMBER"
    bits = "3:0"
    type = "rw"
[[register]]
  name = "SCREENING_TYPE_2_REGISTER_0"
  type = "mixed"
  width = 32
  description = "Screener Type 2 match registers allow a screen to be configured that is the combination of all or any of the following comparisons1)An enabled VLAN Priority. A VLAN Priority match will be performed if the VLAN priority enable is set. The extracted priority field in the VLAN header is compared against 3 bits within the screener type 2 register itself. 2)An enabled EtherType. 3)An enabled Field Compare A. 4)An enabled Field Compare B. 5)An enabled Field Compare C. The required number of Type 2 screening registers is configured in the gem defines file. Up to 16 type 2 screening registers have been allocated APB address space between 0x540 and 0x57C. The bit mappings for these registers is as follows:"
  default = "0x00000000"
  offset = "0x00000540"
  [[register.field]]
    name = "RESERVED"
    bits = "31"
    type = "ro"
  [[register.field]]
    name = "COMPARE_C_ENABLE"
    bits = "30"
    type = "rw"
  [[register.field]]
    name = "COMPARE_C"
    bits = "29:25"
    type = "rw"
  [[register.field]]
    name = "COMPARE_B_ENABLE"
    bits = "24"
    type = "rw"
  [[register.field]]
    name = "COMPARE_B"
    bits = "23:19"
    type = "rw"
  [[register.field]]
    name = "COMPARE_A_ENABLE"
    bits = "18"
    type = "rw"
  [[register.field]]
    name = "COMPARE_A"
    bits = "17:13"
    type = "rw"
  [[register.field]]
    name = "ETHERTYPE_ENABLE"
    bits = "12"
    type = "rw"
  [[register.field]]
    name = "INDEX"
    bits = "11:9"
    type = "rw"
  [[register.field]]
    name = "VLAN_ENABLE"
    bits = "8"
    type = "rw"
  [[register.field]]
    name = "RESERVED"
    bits = "7"
    type = "ro"
  [[register.field]]
    name = "VLAN_PRIORITY"
    bits = "6:4"
    type = "rw"
  [[register.field]]
    name = "QUEUE_NUMBER"
    bits = "3:0"
    type = "rw"
[[register]]
  name = "SCREENING_TYPE_2_REGISTER_1"
  type = "mixed"
  width = 32
  description = "Screener Type 2 match registers allow a screen to be configured that is the combination of all or any of the following comparisons1)An enabled VLAN Priority. A VLAN Priority match will be performed if the VLAN priority enable is set. The extracted priority field in the VLAN header is compared against 3 bits within the screener type 2 register itself. 2)An enabled EtherType. 3)An enabled Field Compare A. 4)An enabled Field Compare B. 5)An enabled Field Compare C. The required number of Type 2 screening registers is configured in the gem defines file. Up to 16 type 2 screening registers have been allocated APB address space between 0x540 and 0x57C. The bit mappings for these registers is as follows:"
  default = "0x00000000"
  offset = "0x00000544"
  [[register.field]]
    name = "RESERVED"
    bits = "31"
    type = "ro"
  [[register.field]]
    name = "COMPARE_C_ENABLE"
    bits = "30"
    type = "rw"
  [[register.field]]
    name = "COMPARE_C"
    bits = "29:25"
    type = "rw"
  [[register.field]]
    name = "COMPARE_B_ENABLE"
    bits = "24"
    type = "rw"
  [[register.field]]
    name = "COMPARE_B"
    bits = "23:19"
    type = "rw"
  [[register.field]]
    name = "COMPARE_A_ENABLE"
    bits = "18"
    type = "rw"
  [[register.field]]
    name = "COMPARE_A"
    bits = "17:13"
    type = "rw"
  [[register.field]]
    name = "ETHERTYPE_ENABLE"
    bits = "12"
    type = "rw"
  [[register.field]]
    name = "INDEX"
    bits = "11:9"
    type = "rw"
  [[register.field]]
    name = "VLAN_ENABLE"
    bits = "8"
    type = "rw"
  [[register.field]]
    name = "RESERVED"
    bits = "7"
    type = "ro"
  [[register.field]]
    name = "VLAN_PRIORITY"
    bits = "6:4"
    type = "rw"
  [[register.field]]
    name = "QUEUE_NUMBER"
    bits = "3:0"
    type = "rw"
[[register]]
  name = "SCREENING_TYPE_2_REGISTER_2"
  type = "mixed"
  width = 32
  description = "Screener Type 2 match registers allow a screen to be configured that is the combination of all or any of the following comparisons1)An enabled VLAN Priority. A VLAN Priority match will be performed if the VLAN priority enable is set. The extracted priority field in the VLAN header is compared against 3 bits within the screener type 2 register itself. 2)An enabled EtherType. 3)An enabled Field Compare A. 4)An enabled Field Compare B. 5)An enabled Field Compare C. The required number of Type 2 screening registers is configured in the gem defines file. Up to 16 type 2 screening registers have been allocated APB address space between 0x540 and 0x57C. The bit mappings for these registers is as follows:"
  default = "0x00000000"
  offset = "0x00000548"
  [[register.field]]
    name = "RESERVED"
    bits = "31"
    type = "ro"
  [[register.field]]
    name = "COMPARE_C_ENABLE"
    bits = "30"
    type = "rw"
  [[register.field]]
    name = "COMPARE_C"
    bits = "29:25"
    type = "rw"
  [[register.field]]
    name = "COMPARE_B_ENABLE"
    bits = "24"
    type = "rw"
  [[register.field]]
    name = "COMPARE_B"
    bits = "23:19"
    type = "rw"
  [[register.field]]
    name = "COMPARE_A_ENABLE"
    bits = "18"
    type = "rw"
  [[register.field]]
    name = "COMPARE_A"
    bits = "17:13"
    type = "rw"
  [[register.field]]
    name = "ETHERTYPE_ENABLE"
    bits = "12"
    type = "rw"
  [[register.field]]
    name = "INDEX"
    bits = "11:9"
    type = "rw"
  [[register.field]]
    name = "VLAN_ENABLE"
    bits = "8"
    type = "rw"
  [[register.field]]
    name = "RESERVED"
    bits = "7"
    type = "ro"
  [[register.field]]
    name = "VLAN_PRIORITY"
    bits = "6:4"
    type = "rw"
  [[register.field]]
    name = "QUEUE_NUMBER"
    bits = "3:0"
    type = "rw"
[[register]]
  name = "SCREENING_TYPE_2_REGISTER_3"
  type = "mixed"
  width = 32
  description = "Screener Type 2 match registers allow a screen to be configured that is the combination of all or any of the following comparisons1)An enabled VLAN Priority. A VLAN Priority match will be performed if the VLAN priority enable is set. The extracted priority field in the VLAN header is compared against 3 bits within the screener type 2 register itself. 2)An enabled EtherType. 3)An enabled Field Compare A. 4)An enabled Field Compare B. 5)An enabled Field Compare C. The required number of Type 2 screening registers is configured in the gem defines file. Up to 16 type 2 screening registers have been allocated APB address space between 0x540 and 0x57C. The bit mappings for these registers is as follows:"
  default = "0x00000000"
  offset = "0x0000054C"
  [[register.field]]
    name = "RESERVED"
    bits = "31"
    type = "ro"
  [[register.field]]
    name = "COMPARE_C_ENABLE"
    bits = "30"
    type = "rw"
  [[register.field]]
    name = "COMPARE_C"
    bits = "29:25"
    type = "rw"
  [[register.field]]
    name = "COMPARE_B_ENABLE"
    bits = "24"
    type = "rw"
  [[register.field]]
    name = "COMPARE_B"
    bits = "23:19"
    type = "rw"
  [[register.field]]
    name = "COMPARE_A_ENABLE"
    bits = "18"
    type = "rw"
  [[register.field]]
    name = "COMPARE_A"
    bits = "17:13"
    type = "rw"
  [[register.field]]
    name = "ETHERTYPE_ENABLE"
    bits = "12"
    type = "rw"
  [[register.field]]
    name = "INDEX"
    bits = "11:9"
    type = "rw"
  [[register.field]]
    name = "VLAN_ENABLE"
    bits = "8"
    type = "rw"
  [[register.field]]
    name = "RESERVED"
    bits = "7"
    type = "ro"
  [[register.field]]
    name = "VLAN_PRIORITY"
    bits = "6:4"
    type = "rw"
  [[register.field]]
    name = "QUEUE_NUMBER"
    bits = "3:0"
    type = "rw"
[[register]]
  name = "INT_Q1_ENABLE"
  type = "mixed"
  width = 32
  description = "At reset all interrupts are disabled. Writing a one to the relevant bit location enables the required interrupt. This register is write only and when read will return zero."
  default = "0x00000000"
  offset = "0x00000600"
  [[register.field]]
    name = "RESERVED"
    bits = "31:12"
    type = "ro"
  [[register.field]]
    name = "ENABLE_RESP_NOT_OK_INTERRUPT"
    bits = "11"
    type = "wo"
  [[register.field]]
    name = "ENABLE_RECEIVE_OVERRUN_INTERRUPT"
    bits = "10"
    type = "wo"
  [[register.field]]
    name = "RESERVED"
    bits = "9:8"
    type = "ro"
  [[register.field]]
    name = "ENABLE_TRANSMIT_COMPLETE_INTERRUPT"
    bits = "7"
    type = "wo"
  [[register.field]]
    name = "ENABLE_TRANSMIT_FRAME_CORRUPTION_DUE_TO_AMBA_ERROR_INTERRUPT"
    bits = "6"
    type = "wo"
  [[register.field]]
    name = "ENABLE_RETRY_LIMIT_EXCEEDED_OR_LATE_COLLISION_INTERRUPT"
    bits = "5"
    type = "wo"
  [[register.field]]
    name = "RESERVED"
    bits = "4:3"
    type = "ro"
  [[register.field]]
    name = "ENABLE_RX_USED_BIT_READ_INTERRUPT"
    bits = "2"
    type = "wo"
  [[register.field]]
    name = "ENABLE_RECEIVE_COMPLETE_INTERRUPT"
    bits = "1"
    type = "wo"
  [[register.field]]
    name = "RESERVED"
    bits = "0"
    type = "ro"
[[register]]
  name = "INT_Q1_DISABLE"
  type = "mixed"
  width = 32
  description = "Writing a 1 to the relevant bit location disables that particular interrupt. This register is write only and when read will return zero."
  default = "0x00000000"
  offset = "0x00000620"
  [[register.field]]
    name = "RESERVED"
    bits = "31:12"
    type = "ro"
  [[register.field]]
    name = "DISABLE_RESP_NOT_OK_INTERRUPT"
    bits = "11"
    type = "wo"
  [[register.field]]
    name = "DISABLE_RECEIVE_OVERRUN_INTERRUPT"
    bits = "10"
    type = "wo"
  [[register.field]]
    name = "RESERVED"
    bits = "9:8"
    type = "ro"
  [[register.field]]
    name = "DISABLE_TRANSMIT_COMPLETE_INTERRUPT"
    bits = "7"
    type = "wo"
  [[register.field]]
    name = "DISABLE_TRANSMIT_FRAME_CORRUPTION_DUE_TO_AMBA_ERROR_INTERRUPT"
    bits = "6"
    type = "wo"
  [[register.field]]
    name = "DISABLE_RETRY_LIMIT_EXCEEDED_OR_LATE_COLLISION_INTERRUPT"
    bits = "5"
    type = "wo"
  [[register.field]]
    name = "RESERVED"
    bits = "4:3"
    type = "ro"
  [[register.field]]
    name = "DISABLE_RX_USED_BIT_READ_INTERRUPT"
    bits = "2"
    type = "wo"
  [[register.field]]
    name = "DISABLE_RECEIVE_COMPLETE_INTERRUPT"
    bits = "1"
    type = "wo"
  [[register.field]]
    name = "RESERVED"
    bits = "0"
    type = "ro"
[[register]]
  name = "INT_Q1_MASK"
  type = "ro"
  width = 32
  description = "The interrupt mask register is a read only register indicating which interrupts are masked. All bits are set at reset and can be reset individually by writing to the interrupt enable register or set individually by writing to the interrupt disable register. Having separate address locations for enable and disable saves the need for performing a read modify write when updating the interrupt mask register. For test purposes there is a write-only function to this register that allows the bits in the interrupt status register to be set or cleared, regardless of the state of the mask register."
  default = "0x00000CE6"
  offset = "0x00000640"
  [[register.field]]
    name = "RESERVED"
    bits = "31:12"
    type = "ro"
  [[register.field]]
    name = "RESP_NOT_OK_INTERRUPT_MASK"
    bits = "11"
    type = "ro"
    shortdesc = '''bresp/hresp not OK interrupt mask.'''
    longdesc = '''0: Interrupt is enabled.1: Interrupt is disabled.A write to this register directly affects the state of the corresponding bit in the interrupt status register, causing an interrupt to be generated if a 1 is written.'''
  [[register.field]]
    name = "RECEIVE_OVERRUN_INTERRUPT_MASK"
    bits = "10"
    type = "ro"
    shortdesc = '''receive overrun interrupt mask.'''
    longdesc = '''0: Interrupt is enabled.1: Interrupt is disabled.A write to this register directly affects the state of the corresponding bit in the interrupt status register, causing an interrupt to be generated if a 1 is written.'''
  [[register.field]]
    name = "RESERVED"
    bits = "9:8"
    type = "ro"
  [[register.field]]
    name = "TRANSMIT_COMPLETE_INTERRUPT_MASK"
    bits = "7"
    type = "ro"
    shortdesc = '''transmit complete interrupt mask.'''
    longdesc = '''0: Interrupt is enabled.1: Interrupt is disabled.A write to this register directly affects the state of the corresponding bit in the interrupt status register, causing an interrupt to be generated if a 1 is written.'''
  [[register.field]]
    name = "AMBA_ERROR_INTERRUPT_MASK"
    bits = "6"
    type = "ro"
    shortdesc = '''A read of this register returns the value of the AMBA (AHB/AXI) error interrupt mask.'''
    longdesc = '''0: Interrupt is enabled.1: Interrupt is disabled.A write to this register directly affects the state of the corresponding bit in the interrupt status register, causing an interrupt to be generated if a 1 is written.'''
  [[register.field]]
    name = "RETRY_LIMIT_EXCEEDED_OR_LATE_COLLISION_INTERRUPT_MASK"
    bits = "5"
    type = "ro"
    shortdesc = '''retry limit exceeded or late collision interrupt mask.'''
    longdesc = '''0: Interrupt is enabled.1: Interrupt is disabled.A write to this register directly affects the state of the corresponding bit in the interrupt status register, causing an interrupt to be generated if a 1 is written.'''
  [[register.field]]
    name = "RESERVED"
    bits = "4:3"
    type = "ro"
  [[register.field]]
    name = "RX_USED_INTERRUPT_MASK"
    bits = "2"
    type = "ro"
    shortdesc = '''A read of this register returns the value of the RX Used interrupt mask.'''
    longdesc = '''0: Interrupt is enabled.1: Interrupt is disabled.A write to this register directly affects the state of the corresponding bit in the interrupt status register, causing an interrupt to be generated if a 1 is written.'''
  [[register.field]]
    name = "RECEIVE_COMPLETE_INTERRUPT_MASK"
    bits = "1"
    type = "ro"
    shortdesc = '''receive complete interrupt mask.'''
    longdesc = '''0: Interrupt is enabled.1: Interrupt is disabled.A write to this register directly affects the state of the corresponding bit in the interrupt status register, causing an interrupt to be generated if a 1 is written.'''
  [[register.field]]
    name = "RESERVED"
    bits = "0"
    type = "ro"
[[register]]
  name = "SCREENING_TYPE_2_ETHERTYPE_REG_0"
  type = "mixed"
  width = 32
  description = "Ethertype Register"
  default = "0x00000000"
  offset = "0x000006E0"
  [[register.field]]
    name = "RESERVED"
    bits = "31:16"
    type = "ro"
  [[register.field]]
    name = "COMPARE_VALUE"
    bits = "15:0"
    type = "rw"
[[register]]
  name = "SCREENING_TYPE_2_ETHERTYPE_REG_1"
  type = "mixed"
  width = 32
  description = "Ethertype Register"
  default = "0x00000000"
  offset = "0x000006E4"
  [[register.field]]
    name = "RESERVED"
    bits = "31:16"
    type = "ro"
  [[register.field]]
    name = "COMPARE_VALUE"
    bits = "15:0"
    type = "rw"
[[register]]
  name = "SCREENING_TYPE_2_ETHERTYPE_REG_2"
  type = "mixed"
  width = 32
  description = "Ethertype Register"
  default = "0x00000000"
  offset = "0x000006E8"
  [[register.field]]
    name = "RESERVED"
    bits = "31:16"
    type = "ro"
  [[register.field]]
    name = "COMPARE_VALUE"
    bits = "15:0"
    type = "rw"
[[register]]
  name = "SCREENING_TYPE_2_ETHERTYPE_REG_3"
  type = "mixed"
  width = 32
  description = "Ethertype Register"
  default = "0x00000000"
  offset = "0x000006EC"
  [[register.field]]
    name = "RESERVED"
    bits = "31:16"
    type = "ro"
  [[register.field]]
    name = "COMPARE_VALUE"
    bits = "15:0"
    type = "rw"
[[register]]
  name = "TYPE2_COMPARE_0_WORD_0"
  type = "rw"
  width = 32
  description = "Compare A,B and C fields of the screener type 2 match register are pointers to a pool of up to 32 compare registers. If enabled the compare is true if the data at the OFFSET into the frame, ANDed with the MASK Value, is equal to the COMPARE Value. A 16 bit word comparison is done. The byte at the OFFSET number of bytes from the index start is compared thru bits 7:0 of the configured VALUE and MASK. The byte at the OFFSET number of bytes + 1 from the index start is compared thru bits 15:8 of the configured VALUE and MASK. The OFFSET can be configured to be from 0 to 127 bytes from either the start of the frame, the byte following the etherType field (last EtherType in the header if the frame is VLAN tagged), the byte following the IP header (IPv4 or IPv6) or from the byte following the start of the TCP/UDP header. The required number of Type 2 screening registers up to a maximum of 32 is configurable in the gem defines file and have been allocated APB address space between 0x700 and 0x7fc. Note. when using RX Partial Store and Forward mode and priority queues, the frame offset must be less than the Partial Store and Forward watermark. If the offset is higher than the watermark value it's not possible to identify the priority queue before the frame is sent to the AMBA interface, and an incorrect priority queue may be used. The bit mapping for these registers is as follows:"
  default = "0x00000000"
  offset = "0x00000700"
  [[register.field]]
    name = "COMPARE_VALUE"
    bits = "31:16"
    type = "rw"
    shortdesc = '''2 byte Compare Value.'''
    longdesc = '''The byte stored in bits [23:16] is compared against the 1st byte of the 2 bytes extracted from the frame. The byte stored in bits [31:24] is compared against the 2nd byte of the 2 bytes extracted from the frame'''
  [[register.field]]
    name = "MASK_VALUE"
    bits = "15:0"
    type = "rw"
[[register]]
  name = "TYPE2_COMPARE_0_WORD_1"
  type = "mixed"
  width = 32
  description = "Type2 Compare Word 1"
  default = "0x00000000"
  offset = "0x00000704"
  [[register.field]]
    name = "RESERVED"
    bits = "31:9"
    type = "ro"
  [[register.field]]
    name = "COMPARE_OFFSET"
    bits = "8:7"
    type = "rw"
    shortdesc = '''compare byte offset.'''
    longdesc = '''00: Offset from beginning of the frame.01: Offset from byte after Ether Type.10: Offset from byte following end of IP header.11: Offset from byte following end of TCP/UDP header'''
  [[register.field]]
    name = "OFFSET_VALUE"
    bits = "6:0"
    type = "rw"
[[register]]
  name = "TYPE2_COMPARE_1_WORD_0"
  type = "rw"
  width = 32
  description = "Compare A,B and C fields of the screener type 2 match register are pointers to a pool of up to 32 compare registers. If enabled the compare is true if the data at the OFFSET into the frame, ANDed with the MASK Value, is equal to the COMPARE Value. A 16 bit word comparison is done. The byte at the OFFSET number of bytes from the index start is compared thru bits 7:0 of the configured VALUE and MASK. The byte at the OFFSET number of bytes + 1 from the index start is compared thru bits 15:8 of the configured VALUE and MASK. The OFFSET can be configured to be from 0 to 127 bytes from either the start of the frame, the byte following the etherType field (last EtherType in the header if the frame is VLAN tagged), the byte following the IP header (IPv4 or IPv6) or from the byte following the start of the TCP/UDP header. The required number of Type 2 screening registers up to a maximum of 32 is configurable in the gem defines file and have been allocated APB address space between 0x700 and 0x7fc. Note. when using RX Partial Store and Forward mode and priority queues, the frame offset must be less than the Partial Store and Forward watermark. If the offset is higher than the watermark value it's not possible to identify the priority queue before the frame is sent to the AMBA interface, and an incorrect priority queue may be used. The bit mapping for these registers is as follows:"
  default = "0x00000000"
  offset = "0x00000708"
  [[register.field]]
    name = "COMPARE_VALUE"
    bits = "31:16"
    type = "rw"
    shortdesc = '''2 byte Compare Value.'''
    longdesc = '''The byte stored in bits [23:16] is compared against the 1st byte of the 2 bytes extracted from the frame. The byte stored in bits [31:24] is compared against the 2nd byte of the 2 bytes extracted from the frame'''
  [[register.field]]
    name = "MASK_VALUE"
    bits = "15:0"
    type = "rw"
[[register]]
  name = "TYPE2_COMPARE_1_WORD_1"
  type = "mixed"
  width = 32
  description = "Type2 Compare Word 1"
  default = "0x00000000"
  offset = "0x0000070C"
  [[register.field]]
    name = "RESERVED"
    bits = "31:9"
    type = "ro"
  [[register.field]]
    name = "COMPARE_OFFSET"
    bits = "8:7"
    type = "rw"
    shortdesc = '''compare byte offset.'''
    longdesc = '''00: Offset from beginning of the frame.01: Offset from byte after Ether Type.10: Offset from byte following end of IP header.11: Offset from byte following end of TCP/UDP header'''
  [[register.field]]
    name = "OFFSET_VALUE"
    bits = "6:0"
    type = "rw"
[[register]]
  name = "TYPE2_COMPARE_2_WORD_0"
  type = "rw"
  width = 32
  description = "Compare A,B and C fields of the screener type 2 match register are pointers to a pool of up to 32 compare registers. If enabled the compare is true if the data at the OFFSET into the frame, ANDed with the MASK Value, is equal to the COMPARE Value. A 16 bit word comparison is done. The byte at the OFFSET number of bytes from the index start is compared thru bits 7:0 of the configured VALUE and MASK. The byte at the OFFSET number of bytes + 1 from the index start is compared thru bits 15:8 of the configured VALUE and MASK. The OFFSET can be configured to be from 0 to 127 bytes from either the start of the frame, the byte following the etherType field (last EtherType in the header if the frame is VLAN tagged), the byte following the IP header (IPv4 or IPv6) or from the byte following the start of the TCP/UDP header. The required number of Type 2 screening registers up to a maximum of 32 is configurable in the gem defines file and have been allocated APB address space between 0x700 and 0x7fc. Note. when using RX Partial Store and Forward mode and priority queues, the frame offset must be less than the Partial Store and Forward watermark. If the offset is higher than the watermark value it's not possible to identify the priority queue before the frame is sent to the AMBA interface, and an incorrect priority queue may be used. The bit mapping for these registers is as follows:"
  default = "0x00000000"
  offset = "0x00000710"
  [[register.field]]
    name = "COMPARE_VALUE"
    bits = "31:16"
    type = "rw"
    shortdesc = '''2 byte Compare Value.'''
    longdesc = '''The byte stored in bits [23:16] is compared against the 1st byte of the 2 bytes extracted from the frame. The byte stored in bits [31:24] is compared against the 2nd byte of the 2 bytes extracted from the frame'''
  [[register.field]]
    name = "MASK_VALUE"
    bits = "15:0"
    type = "rw"
[[register]]
  name = "TYPE2_COMPARE_2_WORD_1"
  type = "mixed"
  width = 32
  description = "Type2 Compare Word 1"
  default = "0x00000000"
  offset = "0x00000714"
  [[register.field]]
    name = "RESERVED"
    bits = "31:9"
    type = "ro"
  [[register.field]]
    name = "COMPARE_OFFSET"
    bits = "8:7"
    type = "rw"
    shortdesc = '''compare byte offset.'''
    longdesc = '''00: Offset from beginning of the frame.01: Offset from byte after Ether Type.10: Offset from byte following end of IP header.11: Offset from byte following end of TCP/UDP header'''
  [[register.field]]
    name = "OFFSET_VALUE"
    bits = "6:0"
    type = "rw"
[[register]]
  name = "TYPE2_COMPARE_3_WORD_0"
  type = "rw"
  width = 32
  description = "Compare A,B and C fields of the screener type 2 match register are pointers to a pool of up to 32 compare registers. If enabled the compare is true if the data at the OFFSET into the frame, ANDed with the MASK Value, is equal to the COMPARE Value. A 16 bit word comparison is done. The byte at the OFFSET number of bytes from the index start is compared thru bits 7:0 of the configured VALUE and MASK. The byte at the OFFSET number of bytes + 1 from the index start is compared thru bits 15:8 of the configured VALUE and MASK. The OFFSET can be configured to be from 0 to 127 bytes from either the start of the frame, the byte following the etherType field (last EtherType in the header if the frame is VLAN tagged), the byte following the IP header (IPv4 or IPv6) or from the byte following the start of the TCP/UDP header. The required number of Type 2 screening registers up to a maximum of 32 is configurable in the gem defines file and have been allocated APB address space between 0x700 and 0x7fc. Note. when using RX Partial Store and Forward mode and priority queues, the frame offset must be less than the Partial Store and Forward watermark. If the offset is higher than the watermark value it's not possible to identify the priority queue before the frame is sent to the AMBA interface, and an incorrect priority queue may be used. The bit mapping for these registers is as follows:"
  default = "0x00000000"
  offset = "0x00000718"
  [[register.field]]
    name = "COMPARE_VALUE"
    bits = "31:16"
    type = "rw"
    shortdesc = '''2 byte Compare Value.'''
    longdesc = '''The byte stored in bits [23:16] is compared against the 1st byte of the 2 bytes extracted from the frame. The byte stored in bits [31:24] is compared against the 2nd byte of the 2 bytes extracted from the frame'''
  [[register.field]]
    name = "MASK_VALUE"
    bits = "15:0"
    type = "rw"
[[register]]
  name = "TYPE2_COMPARE_3_WORD_1"
  type = "mixed"
  width = 32
  description = "Type2 Compare Word 1"
  default = "0x00000000"
  offset = "0x0000071C"
  [[register.field]]
    name = "RESERVED"
    bits = "31:9"
    type = "ro"
  [[register.field]]
    name = "COMPARE_OFFSET"
    bits = "8:7"
    type = "rw"
    shortdesc = '''compare byte offset.'''
    longdesc = '''00: Offset from beginning of the frame.01: Offset from byte after Ether Type.10: Offset from byte following end of IP header.11: Offset from byte following end of TCP/UDP header'''
  [[register.field]]
    name = "OFFSET_VALUE"
    bits = "6:0"
    type = "rw"
