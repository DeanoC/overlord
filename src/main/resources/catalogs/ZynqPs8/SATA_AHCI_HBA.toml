description = "SATA AHCI HBA Spec"
[[bank]]
  name = "SATA_AHCI_HBA"
  address = "0xfd0c0000"
[[register]]
  name = "CAP"
  type = "ro"
  width = 32
  description = "HBA Capabilities (CAP): This register indicates basic capabilities of the HBA to driver software."
  default = "0xE537FF81"
  offset = "0x00000000"
  [[register.field]]
    name = "S64A"
    bits = "31"
    type = "ro"
    shortdesc = '''Supports 64-bit Addressing (S64A): Indicates whether the HBA can access 64-bit data structures.'''
    longdesc = '''When set to '1', the HBA shall make the 32-bit upper bits of the port DMA Descriptor, the PRD Base, and each PRD entry read/write. When cleared to '0', these are read-only and treated as '0' by the HBA.'''
  [[register.field]]
    name = "SNCQ"
    bits = "30"
    type = "ro"
    shortdesc = '''Supports Native Command Queuing (SNCQ): Indicates whether the HBA supports Serial ATA native command queuing.'''
    longdesc = '''If set to '1', an HBA shall handle DMA Setup FISes natively, and shall handle the auto-activate optimization through that FIS. If cleared to '0', native command queuing is not supported and software should not issue any native command queuing commands.'''
  [[register.field]]
    name = "SSNTF"
    bits = "29"
    type = "ro"
    shortdesc = '''Supports SNotification Register (SSNTF): When set to '1', the HBA supports the PxSNTF (SNotification) register and its associated functionality.'''
    longdesc = '''When cleared to '0', the HBA does not support the PxSNTF (SNotification) register and its associated functionality. Refer to section 10.11.1. Asynchronous notification with a directly attached device is always supported.'''
  [[register.field]]
    name = "SMPS"
    bits = "28"
    type = "ro"
    shortdesc = '''Supports Mechanical Presence Switch (SMPS): When set to '1', the HBA supports mechanical presence switches on its ports for use in hot plug operations.'''
    longdesc = '''When cleared to '0', this function is not supported. This value is loaded by the BIOS prior to OS initialization.'''
  [[register.field]]
    name = "SSS"
    bits = "27"
    type = "ro"
    shortdesc = '''Supports Staggered Spin-up (SSS): When set to '1', the HBA supports staggered spin-up on its ports, for use in balancing power spikes.'''
    longdesc = '''When cleared to '0', this function is not supported. This value is loaded by the BIOS prior to OS initiallization.'''
  [[register.field]]
    name = "SALP"
    bits = "26"
    type = "ro"
    shortdesc = '''Supports Aggressive Link Power Management (SALP): When set to '1', the HBA can support auto-generating link requests to the Partial or Slumber states when there are no commands to process.'''
    longdesc = '''When cleared to '0', this function is not supported and software shall treat the PxCMD.ALPE and PxCMD.ASP bits as reserved. Refer to section 8.3.1.3.'''
  [[register.field]]
    name = "SAL"
    bits = "25"
    type = "ro"
    shortdesc = '''Supports Activity LED (SAL): When set to '1', the HBA supports a single activity indication output pin.'''
    longdesc = '''This pin can be connected to an LED on the platform to indicate device activity on any drive. When cleared to '0', this function is not supported. See section 10.11 for more information.'''
  [[register.field]]
    name = "SCLO"
    bits = "24"
    type = "ro"
    shortdesc = '''Supports Command List Override (SCLO): When set to '1', the HBA supports the PxCMD.'''
    longdesc = '''CLO bit and its associated function. When cleared to '0', the HBA is not capable of clearing the BSY and DRQ bits in the Status register in order to issue a software reset if these bits are still set from a previous operation.'''
  [[register.field]]
    name = "ISS"
    bits = "23:20"
    type = "ro"
    shortdesc = '''Interface Speed Support (ISS): Indicates the maximum speed the HBA can support on its ports.'''
    longdesc = '''These encodings match the system software programmable PxSCTL.DET.SPD field. Values are: Bits Definition 0000 Reserved 0001 Gen 1 (1.5 Gbps) 0010 Gen 2 (3 Gbps) 0011 Gen 3 (6 Gbps) 0100 - 1111 Reserved'''
  [[register.field]]
    name = "RESERVED"
    bits = "19"
    type = "ro"
  [[register.field]]
    name = "SAM"
    bits = "18"
    type = "ro"
    shortdesc = '''Supports AHCI mode only (SAM): The SATA controller may optionally support AHCI access mechanisms only.'''
    longdesc = '''A value of '0' indicates that in addition to the native AHCI mechanism (via ABAR), the SATA controller implements a legacy, task-file based register interface such as SFF-8038i. A value of '1' indicates that the SATA controller does not implement a legacy, task-file based register interface.'''
  [[register.field]]
    name = "SPM"
    bits = "17"
    type = "ro"
    shortdesc = '''Supports Port Multiplier (SPM): Indicates whether the HBA can support a Port Multiplier.'''
    longdesc = '''When set, a Port Multiplier using command-based switching is supported and FIS-based switching may be supported. When cleared to '0', a Port Multiplier is not supported, and a Port Multiplier may not be attached to this HBA.'''
  [[register.field]]
    name = "FBSS"
    bits = "16"
    type = "ro"
    shortdesc = '''FIS-based Switching Supported (FBSS): When set to '1', indicates that the HBA supports Port Multiplier FIS-based switching.'''
    longdesc = '''When cleared to '0', indicates that the HBA does not support FIS-based switching. This bit shall only be set to '1' if the SPM bit is set to '1'.'''
  [[register.field]]
    name = "PMD"
    bits = "15"
    type = "ro"
    shortdesc = '''PIO Multiple DRQ Block (PMD): If set to '1', the HBA supports multiple DRQ block data transfers for the PIO command protocol.'''
    longdesc = '''If cleared to '0' the HBA only supports single DRQ block data transfers for the PIO command protocol. AHCI 1.2 HBAs shall have this bit set to '1'.'''
  [[register.field]]
    name = "SSC"
    bits = "14"
    type = "ro"
    shortdesc = '''Slumber State Capable (SSC): Indicates whether the HBA can support transitions to the Slumber state.'''
    longdesc = '''When cleared to '0', software must not allow the HBA to initiate transitions to the Slumber state via agressive link power management nor the PxCMD.ICC field in each port, and the PxSCTL.IPM field in each port must be programmed to disallow device initiated Slumber requests. When set to '1', HBA and device initiated Slumber requests can be supported.'''
  [[register.field]]
    name = "PSC"
    bits = "13"
    type = "ro"
    shortdesc = '''Partial State Capable (PSC): Indicates whether the HBA can support transitions to the Partial state.'''
    longdesc = '''When cleared to '0', software must not allow the HBA to initiate transitions to the Partial state via agressive link power management nor the PxCMD.ICC field in each port, and the PxSCTL.IPM field in each port must be programmed to disallow device initiated Partial requests. When set to '1', HBA and device initiated Partial requests can be supported.'''
  [[register.field]]
    name = "NCS"
    bits = "12:8"
    type = "ro"
    shortdesc = '''Number of Command Slots (NCS): 0's based value indicating the number of command slots per port supported by this HBA.'''
    longdesc = '''A minimum of 1 and maximum of 32 slots per port can be supported. The same number of command slots is available on each implemented port.'''
  [[register.field]]
    name = "CCCS"
    bits = "7"
    type = "ro"
    shortdesc = '''Command Completion Coalescing Supported (CCCS): When set to '1', indicates that the HBA supports command completion coalescing as defined in section 11.'''
    longdesc = '''When command completion coalescing is supported, the HBA has implemented the CCC_CTL and the CCC_PORTS global HBA registers. When cleared to '0', indicates that the HBA does not support command completion coalescing and the CCC_CTL and CCC_PORTS global HBA registers are not implemented.'''
  [[register.field]]
    name = "EMS"
    bits = "6"
    type = "ro"
    shortdesc = '''Enclosure Management Supported (EMS): When set to '1', indicates that the HBA supports enclosure management as defined in section 12.'''
    longdesc = '''When enclosure management is supported, the HBA has implemented the EM_LOC and EM_CTL global HBA registers. When cleared to '0', indicates that the HBA does not support enclosure management and the EM_LOC and EM_CTL global HBA registers are not implemented.'''
  [[register.field]]
    name = "SXS"
    bits = "5"
    type = "ro"
    shortdesc = '''Supports External SATA (SXS): When set to '1', indicates that the HBA has one or more Serial ATA ports that has a signal only connector that is externally accessible (e.'''
    longdesc = '''g. eSATA connector). If this bit is set to '1', software may refer to the PxCMD.ESP bit to determine whether a specific port has its signal connector externally accessible as a signal only connector (i.e. power is not part of that connector). When the bit is cleared to '0', indicates that the HBA has no Serial ATA ports that have a signal only connector externally accessible.'''
  [[register.field]]
    name = "NP"
    bits = "4:0"
    type = "ro"
    shortdesc = '''Number of Ports (NP): 0's based value indicating the maximum number of ports supported by the HBA silicon.'''
    longdesc = '''A maximum of 32 ports can be supported. A value of '0h', indicating one port, is the minimum requirement. Note that the number of ports indicated in this field may be more than the number of ports indicated in the PI register.'''
[[register]]
  name = "GHC"
  type = "mixed"
  width = 32
  description = "Global HBA Control (GHC): This register controls various global actions of the HBA."
  default = "0x80000000"
  offset = "0x00000004"
  [[register.field]]
    name = "AE"
    bits = "31"
    type = "rw"
    shortdesc = '''AHCI Enable (AE): When set, indicates that communication to the HBA shall be via AHCI mechanisms.'''
    longdesc = '''This can be used by an HBA that supports both legacy mechanisms (such as SFF-8038i) and AHCI to know when the HBA is running under an AHCI driver. When set, software shall only communicate with the HBA using AHCI. When cleared, software shall only communicate with the HBA using legacy mechanisms. When cleared FISes are not posted to memory and no commands are sent via AHCI mechanisms. Software shall set this bit to '1' before accessing other AHCI registers. The implementation of this bit is dependent upon the value of the CAP.SAM bit. If CAP.SAM is '0', then GHC.AE shall be read-write and shall have a reset value of '0'. If CAP.SAM is '1', then AE shall be read-only and shall have a reset value of '1'.'''
  [[register.field]]
    name = "RESERVED"
    bits = "30:3"
    type = "ro"
  [[register.field]]
    name = "MRSM"
    bits = "2"
    type = "ro"
    shortdesc = '''MSI Revert to Single Message (MRSM): When set to '1' by hardware, indicates that the HBA requested more than one MSI vector but has reverted to using the first vector only.'''
    longdesc = '''When this bit is cleared to '0', the HBA has not reverted to single MSI mode (i.e. hardware is already in single MSI mode, software has allocated the number of messages requested, or hardware is sharing interrupt vectors if MC.MME < MC.MMC). The HBA may revert to single MSI mode when the number of vectors allocated by the host is less than the number requested. This bit shall only be set to '1' when the following conditions hold: * MC.MSIE = '1' (MSI is enabled) * MC.MMC > 0 (multiple messages requested) * MC.MME > 0 (more than one message allocated) * MC.MME != MC.MMC (messages allocated not equal to number requested) When this bit is set to '1', single MSI mode operation is in use and software is responsible for clearing bits in the IS register to clear interrupts. This bit shall be cleared to '0' by hardware when any of the four conditions stated is false. This bit is also cleared to '0' when MC.MSIE = '1' and MC.MME = 0h. In this case, the hardware has been programmed to use single MSI mode, and is not 'reverting' to that mode.'''
  [[register.field]]
    name = "IE"
    bits = "1"
    type = "rw"
    shortdesc = '''Interrupt Enable (IE): This global bit enables interrupts from the HBA.'''
    longdesc = '''When cleared (reset default), all interrupt sources from all ports are disabled. When set, interrupts are enabled.'''
  [[register.field]]
    name = "HR"
    bits = "0"
    type = "rw"
    shortdesc = '''HBA Reset (HR): When set by SW, this bit causes an internal reset of the HBA.'''
    longdesc = '''All state machines that relate to data transfers and queuing shall return to an idle condition, and all ports shall be re-initialized via COMRESET (if staggered spin-up is not supported). If staggered spin-up is supported, then it is the responsibility of software to spin-up each port after the reset has completed. When the HBA has performed the reset action, it shall reset this bit to '0'. A software write of '0' shall have no effect. For a description on which bits are reset when this bit is set, see section 10.4.3.'''
[[register]]
  name = "IS"
  type = "wtc"
  width = 32
  description = "Interrupt Status Register (IS): This register indicates which of the ports within the controller have an interrupt pending and require service."
  default = "0x00000000"
  offset = "0x00000008"
  [[register.field]]
    name = "IPS"
    bits = "31:0"
    type = "wtc"
    shortdesc = '''Interrupt Pending Status (IPS): If set, indicates that the corresponding port has an interrupt pending.'''
    longdesc = '''Software can use this information to determine which ports require service after an interrupt. The IPS[x] bit is only defined for ports that are implemented or for the command completion coalescing interrupt defined by CCC_CTL.INT. All other bits are reserved.'''
[[register]]
  name = "PI"
  type = "ro"
  width = 32
  description = "Ports Implemented (PI): This register indicates which ports are exposed by the HBA. It is loaded by the BIOS. It indicates which ports that the HBA supports are available for software to use. For example, on an HBA that supports 6 ports as indicated in CAP.NP, only ports 1 and 3 could be available, with ports 0, 2, 4, and 5 being unavailable. Software must not read or write to registers within unavailable ports. The intent of this register is to allow system vendors to build platforms that support less than the full number of ports implemented on the HBA silicon."
  default = "0x00000003"
  offset = "0x0000000C"
  [[register.field]]
    name = "PI"
    bits = "31:0"
    type = "ro"
    shortdesc = '''Port Implemented (PI): This register is bit significant.'''
    longdesc = '''If a bit is set to '1', the corresponding port is available for software to use. If a bit is cleared to '0', the port is not available for software to use. The maximum number of bits set to '1' shall not exceed CAP.NP + 1, although the number of bits set in this register may be fewer than CAP.NP + 1. At least one bit shall be set to '1'.'''
[[register]]
  name = "VS"
  type = "ro"
  width = 32
  description = "AHCI Version (VS): This register indicates the major and minor version of the AHCI specification that the HBA implementation supports. The upper two bytes represent the major version number, and the lower two bytes represent the minor version number. Example: Version 3.12 would be represented as 00030102h. Three versions of the specification are valid: 0.95, 1.0, 1.1, and 1.2, and 1.3."
  default = "0x00010301"
  offset = "0x00000010"
  [[register.field]]
    name = "MJR"
    bits = "31:16"
    type = "ro"
  [[register.field]]
    name = "MNR"
    bits = "15:0"
    type = "ro"
[[register]]
  name = "CCC_CTL"
  type = "mixed"
  width = 32
  description = "Command Completion Coalescing Control (CCC_CTL): The command completion coalescing control register is used to configure the command completion coalescing feature for the entire HBA. Implementation Note: HBA state variables (examples include hCccComplete and hCccTimer) are used to describe the required externally visible behavior. Implementations are not required to have internal state values that directly correspond to these variables."
  default = "0x00010110"
  offset = "0x00000014"
  [[register.field]]
    name = "TV"
    bits = "31:16"
    type = "rw"
    shortdesc = '''Timeout Value (TV): The timeout value is specified in 1 millisecond intervals.'''
    longdesc = '''The timer accuracy shall be within 5%. hCccTimer is loaded with this timeout value. hCccTimer is only decremented when commands are outstanding on selected ports, as defined in section 11.2. The HBA will signal a CCC interrupt when hCccTimer has decremented to '0'. hCccTimer is reset to the timeout value on the assertion of each CCC interrupt. A timeout value of '0' is reserved.'''
  [[register.field]]
    name = "CC"
    bits = "15:8"
    type = "rw"
    shortdesc = '''Command Completions (CC): Specifies the number of command completions that are necessary to cause a CCC interrupt.'''
    longdesc = '''The HBA has an internal command completion counter, hCccComplete. hCccComplete is incremented by one each time a selected port has a command completion. When hCccComplete is equal to the command completions value, a CCC interrupt is signaled. The internal command completion counter is reset to '0' on the assertion of each CCC interrupt. A value of '0' for this field shall disable CCC interrupts being generated based on the number of commands completed, i.e. CCC interrupts are only generated based on the timer in this case.'''
  [[register.field]]
    name = "INT"
    bits = "7:3"
    type = "ro"
    shortdesc = '''Interrupt (INT): Specifies the interrupt used by the CCC feature.'''
    longdesc = '''This interrupt must be marked as unused in the Ports Implemented (PI) register by the corresponding bit being set to '0'. Thus, the CCC interrupt corresponds to the interrupt for an unimplemented port on the controller. When a CCC interrupt occurs, the IS.IPS[INT] bit shall be asserted to '1'. This field also specifies the interrupt vector used for MSI.'''
  [[register.field]]
    name = "RESERVED"
    bits = "2:1"
    type = "ro"
  [[register.field]]
    name = "EN"
    bits = "0"
    type = "rw"
    shortdesc = '''Enable (EN): When cleared to '0', the command completion coalescing feature is disabled and no CCC interrupts are generated.'''
    longdesc = '''When set to '1', the command completion coalescing feature is enabled and CCC interrupts may be generated based on timeout or command completion conditions. Software shall only change the contents of the TV and CC fields when EN is cleared to '0'. On transition of this bit from '0' to '1', any updated values for the TV and CC fields shall take effect.'''
[[register]]
  name = "CCC_PORTS"
  type = "rw"
  width = 32
  description = "Command Completion Coalescing Ports (CCC_PORTS): The command completion coalescing ports register is used to specify the ports that are coalesced as part of the CCC feature when CCC_CTL.EN = '1'."
  default = "0x00000000"
  offset = "0x00000018"
  [[register.field]]
    name = "PRT"
    bits = "31:0"
    type = "rw"
    shortdesc = '''Ports (PRT): This register is bit significant.'''
    longdesc = '''Each bit corresponds to a particular port, where bit 0 corresponds to port 0. If a bit is set to '1', the corresponding port is part of the command completion coalescing feature. If a bit is cleared to '0', the port is not part of the command completion coalescing feature. Bits set to '1' in this register must also have the corresponding bit set to '1' in the Ports Implemented register. An updated value for this field shall take effect within one timer increment (1 millisecond).'''
[[register]]
  name = "EM_LOC"
  type = "ro"
  width = 32
  description = "Enclosure Management Location (EM_LOC): The enclosure management location register identifies the location and size of the enclosure management message buffer."
  default = "0x00000000"
  offset = "0x0000001C"
  [[register.field]]
    name = "OFST"
    bits = "31:16"
    type = "ro"
  [[register.field]]
    name = "SZ"
    bits = "15:0"
    type = "ro"
    shortdesc = '''Buffer Size (SZ): Specifies the size of the transmit message buffer area in Dwords.'''
    longdesc = '''If both transmit and receive buffers are supported, then the transmit buffer begins at ABAR[EM_LOC.OFST*4] and the receive buffer directly follows it. If both transmit and receive buffers are supported, both buffers are of the size indicated in the Buffer Size field. A value of '0' is invalid.'''
[[register]]
  name = "EM_CTL"
  type = "mixed"
  width = 32
  description = "Enclosure Management Control (EM_CTL): This register is used to control and obtain status for the enclosure management interface. The register includes information on the attributes of the implementation, enclosure management messages supported, the status of the interface, whether any messages are pending, and is used to initiate sending messages."
  default = "0x00000000"
  offset = "0x00000020"
  [[register.field]]
    name = "RESERVED"
    bits = "31:28"
    type = "ro"
  [[register.field]]
    name = "ATTR_PM"
    bits = "27"
    type = "ro"
    shortdesc = '''Port Multiplier Support (ATTR.'''
    longdesc = '''PM): If set to '1', the HBA supports enclosure management messages for devices attached via a Port Multiplier. If cleared to '0', the HBA does not support enclosure management messages for devices attached via a Port Multiplier. When cleared to '0', software should use the Serial ATA enclosure management bridge that is built into many Port Multipliers for enclosure services with these devices. For more information on Serial ATA enclosure management bridges, refer to the Serial ATA Revision 2.5 specification.'''
  [[register.field]]
    name = "ATTR_ALHD"
    bits = "26"
    type = "ro"
    shortdesc = '''Activity LED Hardware Driven (ATTR.'''
    longdesc = '''ALHD): If set to '1', the HBA drives the activity LED for the LED message type in hardware and does not utilize software settings for this LED. The HBA does not begin transmitting the hardware based activity signal until after software has written CTL.TM=1 after a reset condition.'''
  [[register.field]]
    name = "ATTR_XMT"
    bits = "25"
    type = "ro"
    shortdesc = '''Transmit Only (ATTR.'''
    longdesc = '''XMT): If set to '1', the HBA only supports transmitting messages and does not support receiving messages. If cleared to '0', the HBA supports transmitting and receiving messages.'''
  [[register.field]]
    name = "ATTR_SMB"
    bits = "24"
    type = "ro"
    shortdesc = '''Single Message Buffer (ATTR.'''
    longdesc = '''SMB): If set to '1', the HBA has one message buffer that is shared for messages to transmit and messages received. In this case, unsolicited receive messages are not supported and it is software's responsibility to manage access to this buffer. If cleared to '0', there are separate receive and transmit buffers such that unsolicited messages could be supported.'''
  [[register.field]]
    name = "RESERVED"
    bits = "23:20"
    type = "ro"
  [[register.field]]
    name = "SUPP_SGPIO"
    bits = "19"
    type = "ro"
    shortdesc = '''SGPIO Enclosure Management Messages (SUPP.'''
    longdesc = '''SGPIO): If set to '1', the HBA supports the SGPIO register interface message type.'''
  [[register.field]]
    name = "SUPP_SES2"
    bits = "18"
    type = "ro"
    shortdesc = '''SES-2 Enclosure Management Messages (SUPP.'''
    longdesc = '''SES2): If set to '1', the HBA supports the SES-2 message type.'''
  [[register.field]]
    name = "SUPP_SAFTE"
    bits = "17"
    type = "ro"
    shortdesc = '''SAF-TE Enclosure Management Messages (SUPP.'''
    longdesc = '''SAFTE): If set to '1', the HBA supports the SAF-TE message type.'''
  [[register.field]]
    name = "SUPP_LED"
    bits = "16"
    type = "ro"
    shortdesc = '''LED Message Types (SUPP.'''
    longdesc = '''LED): If set to '1', the HBA supports the LED message type defined in section 12.2.1.'''
  [[register.field]]
    name = "RESERVED"
    bits = "15:10"
    type = "ro"
  [[register.field]]
    name = "CTL_RST"
    bits = "9"
    type = "rw"
    shortdesc = '''Reset (CTL.'''
    longdesc = '''RST): When set to '1' by software, the HBA shall reset all enclosure management message logic and the attached enclosure processor (if applicable) and take all appropriate reset actions to ensure messages can be transmitted/received after the reset. After the HBA completes the reset operation, the HBA shall set the value to '0'. A write of '0' by software to this field shall have no effect.'''
  [[register.field]]
    name = "CTL_TM"
    bits = "8"
    type = "rw"
    shortdesc = '''Transmit Message (CTL.'''
    longdesc = '''TM): When set to '1' by software, the HBA shall transmit the message contained in the message buffer. When the message is completely sent, the HBA shall clear this bit to '0'. A write of '0' to this bit by software shall have no effect. Software shall not change the contents of the message buffer while CTL.TM is set to '1'.'''
  [[register.field]]
    name = "RESERVED"
    bits = "7:1"
    type = "ro"
  [[register.field]]
    name = "STS_MR"
    bits = "0"
    type = "wtc"
    shortdesc = '''Message Received (STS.'''
    longdesc = '''MR): The HBA sets this bit to a '1' when a message is completely received into the message buffer. When software detects this bit is a '1', software should read the message and perform any actions necessary. When software is finished reading the message in the buffer, software writes a '1' to this bit in order to clear it. A write of '0' to this bit by software shall have no effect.'''
[[register]]
  name = "CAP2"
  type = "ro"
  width = 32
  description = "HBA Capabilities Extended (CAP2): This register indicates capabilities of the HBA to driver software."
  default = "0x0000000C"
  offset = "0x00000024"
  [[register.field]]
    name = "RESERVED"
    bits = "31:6"
    type = "ro"
  [[register.field]]
    name = "DESO"
    bits = "5"
    type = "ro"
    shortdesc = '''DevSleep Entrance from Slumber Only (DESO): This field specifies that the HBA shall only assert the DEVSLP signal if the interface is in Slumber.'''
    longdesc = '''When this bit is set to '1', the HBA shall ignore software directed entrance to DevSleep via PxCMD.ICC unless PxSSTS.IPM = 6h. When this bit is cleared to '0', the HBA may enter DevSleep from any link state (active, Partial, or Slumber).'''
  [[register.field]]
    name = "SADM"
    bits = "4"
    type = "ro"
    shortdesc = '''Supports Aggressive Device Sleep Management (SADM): When set to '1', the HBA supports hardware assertion of the DEVSLP signal after the idle timeout expires.'''
    longdesc = '''When cleared to '0', this function is not supported and software shall treat the PxDEVSLP.ADSE field as reserved.'''
  [[register.field]]
    name = "SDS"
    bits = "3"
    type = "ro"
    shortdesc = '''Supports Device Sleep (SDS): When set to '1', the HBA supports the Device Sleep feature.'''
    longdesc = '''When cleared to '0', DEVSLP is not supported and software shall not set PxCMD.ICC to '8h'.'''
  [[register.field]]
    name = "APST"
    bits = "2"
    type = "ro"
    shortdesc = '''Automatic Partial to Slumber Transitions (APST): When set to '1', the HBA supports Automatic Partial to Slumber Transitions.'''
    longdesc = '''When cleared to '0', Automatic Partial to Slumber Transitions are not supported. Please refer to section 10.16 for more information regarding Automatic Partial to Slumber transitions.'''
  [[register.field]]
    name = "NVMP"
    bits = "1"
    type = "ro"
    shortdesc = '''NVMHCI Present (NVMP): When set to '1', the HBA includes support for NVMHCI and the registers at offset 60h-9Fh are valid.'''
    longdesc = '''When cleared to '0', the HBA does not support NVMHCI.'''
  [[register.field]]
    name = "BOH"
    bits = "0"
    type = "ro"
    shortdesc = '''BIOS/OS Handoff (BOH): When set to '1', the HBA supports the BIOS/OS handoff mechanism defined in section 10.'''
    longdesc = '''6. When cleared to '0', the HBA does not support the BIOS/OS handoff mechanism. When BIOS/OS handoff is supported, the HBA has implemented the BOHC global HBA register. When cleared to '0', it indicates that the HBA does not support BIOS/OS handoff and the BOHC global HBA register is not implemented.'''
[[register]]
  name = "BOHC"
  type = "mixed"
  width = 32
  description = "BIOS/OS Handoff Control and Status (BOHC): This register controls various global actions of the HBA."
  default = "0x00000000"
  offset = "0x00000028"
  [[register.field]]
    name = "RESERVED"
    bits = "31:5"
    type = "ro"
  [[register.field]]
    name = "BB"
    bits = "4"
    type = "rw"
  [[register.field]]
    name = "OOC"
    bits = "3"
    type = "wtc"
    shortdesc = '''OS Ownership Change (OOC): This bit is set to '1' when the OOS bit transitions from '0' to '1'.'''
    longdesc = '''This bit is cleared by writing a '1' to it. Writing '0' has no effect on it.'''
  [[register.field]]
    name = "SOOE"
    bits = "2"
    type = "rw"
  [[register.field]]
    name = "OOS"
    bits = "1"
    type = "rw"
    shortdesc = '''OS Owned Semaphore (OOS): The system software sets this bit to request ownership of the HBA controller.'''
    longdesc = '''Ownership is obtained when this bit reads '1' and the BOS bit reads '0'. This bit is not affected by an HBA reset.'''
  [[register.field]]
    name = "BOS"
    bits = "0"
    type = "rw"
    shortdesc = '''BIOS Owned Semaphore (BOS): The BIOS sets this bit to establish ownership of the HBA controller.'''
    longdesc = '''BIOS will clear this bit in response to a request for ownership of the HBA by system software via OOS. This bit is not affected by an HBA reset.'''
