description = "A53 Cross Trigger Interface with to/from broadcast"
[[register]]
  name = "CTICONTROL"
  type = "rw"
  width = 32
  description = "The CTI Control Register enables the CTI."
  default = "0x00000000"
  offset = "0x00000000"
  [[register.field]]
    name = "GLBEN"
    bits = "0"
    type = "rw"
[[register]]
  name = "CTIINTACK"
  type = "wo"
  width = 32
  description = "The CTI Interrupt Acknowledge Register is write-only. Any bits written as a 1 cause the ctitrigout output signal to be acknowledged. The acknowledgement is cleared when MAPTRIGOUT is deactivated. This register is used when the ctitrigout is used as a sticky output, that is, no hardware acknowledge is supplied, and a software acknowledge is required."
  default = "0x00000000"
  offset = "0x00000010"
  [[register.field]]
    name = "INTACK"
    bits = "7:0"
    type = "wo"
    shortdesc = '''Acknowledges the corresponding ctitrigout output.'''
    longdesc = '''There is one bit of the register for each ctitrigout output.When a 1 is written to a bit in this register, the corresponding ctitrigout is acknowledged and is cleared when MAPTRIGOUT is LOW. Writing a 0 to any of the bits in this register has no effect.'''
[[register]]
  name = "CTIAPPSET"
  type = "wo"
  width = 32
  description = "The CTI Application Trigger Set Register is read/write. A write to this register causes a channel event to be raised, corresponding to the bit written to."
  default = "0x00000000"
  offset = "0x00000014"
  [[register.field]]
    name = "APPSET"
    bits = "3:0"
    type = "wo"
    shortdesc = '''Setting a bit HIGH generates a channel event for the selected channel.'''
    longdesc = '''There is one bit of the register for each channel.Read: 0 = application trigger inactive (reset). 1 = application trigger active.Write: 0 = no effect. 1 = generate channel event.'''
[[register]]
  name = "CTIAPPCLEAR"
  type = "wo"
  width = 32
  description = "The CTI Interrupt Acknowledge Register is write-only. A write to this register causes a channel event to be cleared, corresponding to the bit written to."
  default = "0x00000000"
  offset = "0x00000018"
  [[register.field]]
    name = "APPCLEAR"
    bits = "3:0"
    type = "wo"
    shortdesc = '''Clears corresponding bits in the CTIAPPSET register.'''
    longdesc = '''There is one bit of the register for each channel.When a 1 is written to a bit in this register, the corresponding application trigger is disabled in the CTIAPPSET register. Writing a 0 to any of the bits in this register has no effect.'''
[[register]]
  name = "CTIAPPPULSE"
  type = "wo"
  width = 32
  description = "The CTI Application Pulse Register is write-only. A write to this register causes a channel event pulse, one cticlk period, to be generated, corresponding to the bit written to. The pulse external to the ECT can be extended to multi-cycle by the handshaking interface circuits. This register clears itself immediately, so it can be repeatedly written to without software having to clear it."
  default = "0x00000000"
  offset = "0x0000001C"
  [[register.field]]
    name = "APPULSE"
    bits = "3:0"
    type = "wo"
    shortdesc = '''Setting a bit HIGH generates a channel event pulse for the selected channel.'''
    longdesc = '''There is one bit of the register for each channel.When a 1 is written to a bit in this register, a corresponding channel event pulse is generated for one cticlk period. Writing a 0 to any of the bits in this register has no effect.'''
[[register]]
  name = "CTIINEN0"
  type = "rw"
  width = 32
  description = "The CTI Trigger 0 to Channel Enable Register enables the signalling of an event on CTM channels when the core issues a trigger, ctitrigin, to the CTI. Within this register there is one bit for each of the four channels implemented. This register does not affect the application trigger operations."
  default = "0x00000000"
  offset = "0x00000020"
  [[register.field]]
    name = "TRIGINEN"
    bits = "3:0"
    type = "rw"
    shortdesc = '''Enables a cross trigger event to the corresponding channel when an ctitrigin is activated.'''
    longdesc = '''There is one bit of the field for each of the four channels.When a 1 is written to a bit in this register, it enables the ctitrigin signal to generate an event on the respective channel of the CTM. For example, TRIGINEN[0] set to 1 enables ctitrigin onto channel 0. Writing a 0 to any of the bits in this register disables the ctitrigin signal from generating an event on the respective channel of the CTM.Reading this register returns the programmed value.'''
[[register]]
  name = "CTIINEN1"
  type = "rw"
  width = 32
  description = "The CTI Trigger 1 to Channel Enable Register enables the signalling of an event on CTM channels when the core issues a trigger, ctitrigin, to the CTI. Within this register there is one bit for each of the four channels implemented. This register does not affect the application trigger operations."
  default = "0x00000000"
  offset = "0x00000024"
  [[register.field]]
    name = "TRIGINEN"
    bits = "3:0"
    type = "rw"
    shortdesc = '''Enables a cross trigger event to the corresponding channel when an ctitrigin is activated.'''
    longdesc = '''There is one bit of the field for each of the four channels.When a 1 is written to a bit in this register, it enables the ctitrigin signal to generate an event on the respective channel of the CTM. For example, TRIGINEN[0] set to 1 enables ctitrigin onto channel 0. Writing a 0 to any of the bits in this register disables the ctitrigin signal from generating an event on the respective channel of the CTM.Reading this register returns the programmed value.'''
[[register]]
  name = "CTIINEN2"
  type = "rw"
  width = 32
  description = "The CTI Trigger to Channel Enable Register 0 enables the signalling of an event on CTM channels when the core issues a trigger, ctitrigin, to the CTI. Within this register there is one bit for each of the four channels implemented. This register does not affect the application trigger operations."
  default = "0x00000000"
  offset = "0x00000028"
  [[register.field]]
    name = "TRIGINEN"
    bits = "3:0"
    type = "rw"
    shortdesc = '''Enables a cross trigger event to the corresponding channel when an ctitrigin is activated.'''
    longdesc = '''There is one bit of the field for each of the four channels.When a 1 is written to a bit in this register, it enables the ctitrigin signal to generate an event on the respective channel of the CTM. For example, TRIGINEN[0] set to 1 enables ctitrigin onto channel 0. Writing a 0 to any of the bits in this register disables the ctitrigin signal from generating an event on the respective channel of the CTM.Reading this register returns the programmed value.'''
[[register]]
  name = "CTIINEN3"
  type = "rw"
  width = 32
  description = "The CTI Trigger to Channel Enable Register 0 enables the signalling of an event on CTM channels when the core issues a trigger, ctitrigin, to the CTI. Within this register there is one bit for each of the four channels implemented. This register does not affect the application trigger operations."
  default = "0x00000000"
  offset = "0x0000002C"
  [[register.field]]
    name = "TRIGINEN"
    bits = "3:0"
    type = "rw"
    shortdesc = '''Enables a cross trigger event to the corresponding channel when an ctitrigin is activated.'''
    longdesc = '''There is one bit of the field for each of the four channels.When a 1 is written to a bit in this register, it enables the ctitrigin signal to generate an event on the respective channel of the CTM. For example, TRIGINEN[0] set to 1 enables ctitrigin onto channel 0. Writing a 0 to any of the bits in this register disables the ctitrigin signal from generating an event on the respective channel of the CTM.Reading this register returns the programmed value.'''
[[register]]
  name = "CTIINEN4"
  type = "rw"
  width = 32
  description = "The CTI Trigger to Channel Enable Register 0 enables the signalling of an event on CTM channels when the core issues a trigger, ctitrigin, to the CTI. Within this register there is one bit for each of the four channels implemented. This register does not affect the application trigger operations."
  default = "0x00000000"
  offset = "0x00000030"
  [[register.field]]
    name = "TRIGINEN"
    bits = "3:0"
    type = "rw"
    shortdesc = '''Enables a cross trigger event to the corresponding channel when an ctitrigin is activated.'''
    longdesc = '''There is one bit of the field for each of the four channels.When a 1 is written to a bit in this register, it enables the ctitrigin signal to generate an event on the respective channel of the CTM. For example, TRIGINEN[0] set to 1 enables ctitrigin onto channel 0. Writing a 0 to any of the bits in this register disables the ctitrigin signal from generating an event on the respective channel of the CTM.Reading this register returns the programmed value.'''
[[register]]
  name = "CTIINEN5"
  type = "rw"
  width = 32
  description = "The CTI Trigger to Channel Enable Register 0 enables the signalling of an event on CTM channels when the core issues a trigger, ctitrigin, to the CTI. Within this register there is one bit for each of the four channels implemented. This register does not affect the application trigger operations."
  default = "0x00000000"
  offset = "0x00000034"
  [[register.field]]
    name = "TRIGINEN"
    bits = "3:0"
    type = "rw"
    shortdesc = '''Enables a cross trigger event to the corresponding channel when an ctitrigin is activated.'''
    longdesc = '''There is one bit of the field for each of the four channels.When a 1 is written to a bit in this register, it enables the ctitrigin signal to generate an event on the respective channel of the CTM. For example, TRIGINEN[0] set to 1 enables ctitrigin onto channel 0. Writing a 0 to any of the bits in this register disables the ctitrigin signal from generating an event on the respective channel of the CTM.Reading this register returns the programmed value.'''
[[register]]
  name = "CTIINEN6"
  type = "rw"
  width = 32
  description = "The CTI Trigger to Channel Enable Register 0 enables the signalling of an event on CTM channels when the core issues a trigger, ctitrigin, to the CTI. Within this register there is one bit for each of the four channels implemented. This register does not affect the application trigger operations."
  default = "0x00000000"
  offset = "0x00000038"
  [[register.field]]
    name = "TRIGINEN"
    bits = "3:0"
    type = "rw"
    shortdesc = '''Enables a cross trigger event to the corresponding channel when an ctitrigin is activated.'''
    longdesc = '''There is one bit of the field for each of the four channels.When a 1 is written to a bit in this register, it enables the ctitrigin signal to generate an event on the respective channel of the CTM. For example, TRIGINEN[0] set to 1 enables ctitrigin onto channel 0. Writing a 0 to any of the bits in this register disables the ctitrigin signal from generating an event on the respective channel of the CTM.Reading this register returns the programmed value.'''
[[register]]
  name = "CTIINEN7"
  type = "rw"
  width = 32
  description = "The CTI Trigger to Channel Enable Register 0 enables the signalling of an event on CTM channels when the core issues a trigger, ctitrigin, to the CTI. Within this register there is one bit for each of the four channels implemented. This register does not affect the application trigger operations."
  default = "0x00000000"
  offset = "0x0000003C"
  [[register.field]]
    name = "TRIGINEN"
    bits = "3:0"
    type = "rw"
    shortdesc = '''Enables a cross trigger event to the corresponding channel when an ctitrigin is activated.'''
    longdesc = '''There is one bit of the field for each of the four channels.When a 1 is written to a bit in this register, it enables the ctitrigin signal to generate an event on the respective channel of the CTM. For example, TRIGINEN[0] set to 1 enables ctitrigin onto channel 0. Writing a 0 to any of the bits in this register disables the ctitrigin signal from generating an event on the respective channel of the CTM.Reading this register returns the programmed value.'''
[[register]]
  name = "CTIOUTEN0"
  type = "rw"
  width = 32
  description = "The CTI Channel to Trigger 0 Enable Registers define which channels can generate a ctitrigout[0] output. Within this register there is one bit for each of the four channels implemented. This register affects the mapping from application trigger to trigger outputs."
  default = "0x00000000"
  offset = "0x000000A0"
  [[register.field]]
    name = "TRIGOUTEN"
    bits = "3:0"
    type = "rw"
    shortdesc = '''Changing the value of this bit from a 0 to a 1 enables a channel event for the corresponding channel to generate a ctitrigout[1] output.'''
    longdesc = '''There is one bit of the field for each of the four channels.When a 1 is written to a bit in this register, the channel input (ctichin) from the CTM is routed to the ctitrigout output. For example, enabling bit 0 enables ctichin[0] to cause a trigger event on the ctitrigout[0] output. When a 0 is written to any of the bits in this register, the channel input (ctichin) from the CTM is not routed to the ctitrigout output.Reading this register returns the programmed value.'''
[[register]]
  name = "CTIOUTEN1"
  type = "rw"
  width = 32
  description = "The CTI Channel to Trigger 1 Enable Registers define which channels can generate a ctitrigout[1] output. Within this register there is one bit for each of the four channels implemented. This register affects the mapping from application trigger to trigger outputs."
  default = "0x00000000"
  offset = "0x000000A4"
  [[register.field]]
    name = "TRIGOUTEN"
    bits = "3:0"
    type = "rw"
    shortdesc = '''Changing the value of this bit from a 0 to a 1 enables a channel event for the corresponding channel to generate a ctitrigout[1] output.'''
    longdesc = '''There is one bit of the field for each of the four channels.When a 1 is written to a bit in this register, the channel input (ctichin) from the CTM is routed to the ctitrigout output. For example, enabling bit 0 enables ctichin[0] to cause a trigger event on the ctitrigout[1] output. When a 0 is written to any of the bits in this register, the channel input (ctichin) from the CTM is not routed to the ctitrigout output.Reading this register returns the programmed value.'''
[[register]]
  name = "CTIOUTEN2"
  type = "rw"
  width = 32
  description = "The CTI Channel to Trigger 2 Enable Registers define which channels can generate a ctitrigout[2] output. Within this register there is one bit for each of the four channels implemented. This register affects the mapping from application trigger to trigger outputs."
  default = "0x00000000"
  offset = "0x000000A8"
  [[register.field]]
    name = "TRIGOUTEN"
    bits = "3:0"
    type = "rw"
    shortdesc = '''Changing the value of this bit from a 0 to a 1 enables a channel event for the corresponding channel to generate a ctitrigout[2] output.'''
    longdesc = '''There is one bit of the field for each of the four channels.When a 1 is written to a bit in this register, the channel input (ctichin) from the CTM is routed to the ctitrigout output. For example, enabling bit 0 enables ctichin[0] to cause a trigger event on the ctitrigout[2] output. When a 0 is written to any of the bits in this register, the channel input (ctichin) from the CTM is not routed to the ctitrigout output.Reading this register returns the programmed value.'''
[[register]]
  name = "CTIOUTEN3"
  type = "rw"
  width = 32
  description = "The CTI Channel to Trigger 3 Enable Registers define which channels can generate a ctitrigout[3] output. Within this register there is one bit for each of the four channels implemented. This register affects the mapping from application trigger to trigger outputs."
  default = "0x00000000"
  offset = "0x000000AC"
  [[register.field]]
    name = "TRIGOUTEN"
    bits = "3:0"
    type = "rw"
    shortdesc = '''Changing the value of this bit from a 0 to a 1 enables a channel event for the corresponding channel to generate a ctitrigout[3] output.'''
    longdesc = '''There is one bit of the field for each of the four channels.When a 1 is written to a bit in this register, the channel input (ctichin) from the CTM is routed to the ctitrigout output. For example, enabling bit 0 enables ctichin[0] to cause a trigger event on the ctitrigout[3] output. When a 0 is written to any of the bits in this register, the channel input (ctichin) from the CTM is not routed to the ctitrigout output.Reading this register returns the programmed value.'''
[[register]]
  name = "CTIOUTEN4"
  type = "rw"
  width = 32
  description = "The CTI Channel to Trigger 4 Enable Registers define which channels can generate a ctitrigout[4] output. Within this register there is one bit for each of the four channels implemented. This register affects the mapping from application trigger to trigger outputs."
  default = "0x00000000"
  offset = "0x000000B0"
  [[register.field]]
    name = "TRIGOUTEN"
    bits = "3:0"
    type = "rw"
    shortdesc = '''Changing the value of this bit from a 0 to a 1 enables a channel event for the corresponding channel to generate a ctitrigout[4] output.'''
    longdesc = '''There is one bit of the field for each of the four channels.When a 1 is written to a bit in this register, the channel input (ctichin) from the CTM is routed to the ctitrigout output. For example, enabling bit 0 enables ctichin[0] to cause a trigger event on the ctitrigout[4] output. When a 0 is written to any of the bits in this register, the channel input (ctichin) from the CTM is not routed to the ctitrigout output.Reading this register returns the programmed value.'''
[[register]]
  name = "CTIOUTEN5"
  type = "rw"
  width = 32
  description = "The CTI Channel to Trigger 5 Enable Registers define which channels can generate a ctitrigout[5] output. Within this register there is one bit for each of the four channels implemented. This register affects the mapping from application trigger to trigger outputs."
  default = "0x00000000"
  offset = "0x000000B4"
  [[register.field]]
    name = "TRIGOUTEN"
    bits = "3:0"
    type = "rw"
    shortdesc = '''Changing the value of this bit from a 0 to a 1 enables a channel event for the corresponding channel to generate a ctitrigout[5] output.'''
    longdesc = '''There is one bit of the field for each of the four channels.When a 1 is written to a bit in this register, the channel input (ctichin) from the CTM is routed to the ctitrigout output. For example, enabling bit 0 enables ctichin[0] to cause a trigger event on the ctitrigout[5] output. When a 0 is written to any of the bits in this register, the channel input (ctichin) from the CTM is not routed to the ctitrigout output.Reading this register returns the programmed value.'''
[[register]]
  name = "CTIOUTEN6"
  type = "rw"
  width = 32
  description = "The CTI Channel to Trigger 6 Enable Registers define which channels can generate a ctitrigout[6] output. Within this register there is one bit for each of the four channels implemented. This register affects the mapping from application trigger to trigger outputs."
  default = "0x00000000"
  offset = "0x000000B8"
  [[register.field]]
    name = "TRIGOUTEN"
    bits = "3:0"
    type = "rw"
    shortdesc = '''Changing the value of this bit from a 0 to a 1 enables a channel event for the corresponding channel to generate a ctitrigout[6] output.'''
    longdesc = '''There is one bit of the field for each of the four channels.When a 1 is written to a bit in this register, the channel input (ctichin) from the CTM is routed to the ctitrigout output. For example, enabling bit 0 enables ctichin[0] to cause a trigger event on the ctitrigout[6] output. When a 0 is written to any of the bits in this register, the channel input (ctichin) from the CTM is not routed to the ctitrigout output.Reading this register returns the programmed value.'''
[[register]]
  name = "CTIOUTEN7"
  type = "rw"
  width = 32
  description = "The CTI Channel to Trigger 7 Enable Registers define which channels can generate a ctitrigout[7] output. Within this register there is one bit for each of the four channels implemented. This register affects the mapping from application trigger to trigger outputs."
  default = "0x00000000"
  offset = "0x000000BC"
  [[register.field]]
    name = "TRIGOUTEN"
    bits = "3:0"
    type = "rw"
    shortdesc = '''Changing the value of this bit from a 0 to a 1 enables a channel event for the corresponding channel to generate a ctitrigout[7] output.'''
    longdesc = '''There is one bit of the field for each of the four channels.When a 1 is written to a bit in this register, the channel input (ctichin) from the CTM is routed to the ctitrigout output. For example, enabling bit 0 enables ctichin[0] to cause a trigger event on the ctitrigout[7] output. When a 0 is written to any of the bits in this register, the channel input (ctichin) from the CTM is not routed to the ctitrigout output.Reading this register returns the programmed value.'''
[[register]]
  name = "CTITRIGINSTATUS"
  type = "ro"
  width = 32
  description = "The CTI Trigger In Status Register provides the status of the ctitrigin inputs."
  default = "0x00000000"
  offset = "0x00000130"
  [[register.field]]
    name = "TRIGINSTATUS"
    bits = "7:0"
    type = "ro"
    shortdesc = '''Shows the status of the ctitrigin inputs.'''
    longdesc = '''1 = ctitrigin is active. 0 = ctitrigin is inactive.Because the register provides a view of the raw ctitrigin inputs, the reset value is unknown. There is one bit of the field for each trigger input.'''
[[register]]
  name = "CTITRIGOUTSTATUS"
  type = "ro"
  width = 32
  description = "The CTI Trigger Out Status Register provides the status of the ctitrigout outputs."
  default = "0x00000000"
  offset = "0x00000134"
  [[register.field]]
    name = "TRIGOUTSTATUS"
    bits = "7:0"
    type = "ro"
    shortdesc = '''Shows the status of the ctitrigout outputs.'''
    longdesc = '''1 = ctitrigout is active. 0 = ctitrigout is inactive.There is one bit of the field for each trigger output.'''
[[register]]
  name = "CTICHINSTATUS"
  type = "ro"
  width = 32
  description = "The CTI Channel In Status Register provides the status of the ctichin inputs."
  default = "0x00000000"
  offset = "0x00000138"
  [[register.field]]
    name = "CTICHINSTATUS"
    bits = "3:0"
    type = "ro"
    shortdesc = '''Shows the status of the ctichin inputs.'''
    longdesc = '''1 = ctichin is active. 0 = ctichin is inactive.Because the register provides a view of the raw ctichin inputs, the reset value is unknown. There is one bit of the field for each channel input.'''
[[register]]
  name = "CTICHOUTSTATUS"
  type = "ro"
  width = 32
  description = "The CTI Channel Out Status Register provides the status of the CTI ctichout outputs."
  default = "0x00000000"
  offset = "0x0000013C"
  [[register.field]]
    name = "CTICHOUTSTATUS"
    bits = "3:0"
    type = "ro"
    shortdesc = '''Shows the status of the ctichout outputs.'''
    longdesc = '''1 = ctichout is active. 0 = ctichout is inactive.There is one bit of the field for each channel output.'''
[[register]]
  name = "CTIGATE"
  type = "rw"
  width = 32
  description = "The Gate Enable Register prevents the channels from propagating through the CTM to other CTIs. This enables local cross-triggering, for example for causing an interrupt when the ETM trigger occurs. It can be used effectively with CTIAPPSET, CTIAPPCLEAR, and CTIAPPPULSE for asserting trigger outputs by asserting channels, without affecting the rest of the system. On reset, this register is 0xF, and channel propagation is enabled."
  default = "0x0000000F"
  offset = "0x00000140"
  [[register.field]]
    name = "CTIGATEEN"
    bits = "3:0"
    type = "rw"
    shortdesc = '''Enable CTICHOUT3-0 respectively.'''
    longdesc = '''Set to 0 to disable channel propagation.'''
[[register]]
  name = "ASICCTL"
  type = "rw"
  width = 32
  description = "Implementation-defined ASIC control, value written to the register is output on asicctl[7:0]."
  default = "0x00000000"
  offset = "0x00000144"
  [[register.field]]
    name = "ASICCTL"
    bits = "7:0"
    type = "rw"
    shortdesc = '''Implementation-defined ASIC control, value written to the register is output on asicctl[7:0].'''
    longdesc = '''If external multiplexing of trigger signals is implemented then the number of multiplexed signals on each trigger must be reflected within the Device ID Register. This is done within a Verilog define EXTMUXNUM.'''
[[register]]
  name = "ITCTRL"
  type = "rw"
  width = 32
  description = "CTI Integration mode Control Register"
  default = "0x00000000"
  offset = "0x00000F00"
  [[register.field]]
    name = "IME"
    bits = "0"
    type = "rw"
    shortdesc = '''Integration mode enable.'''
    longdesc = '''When IME == 1, the device reverts to an integration mode to enable integration testing or topology detection. The integration mode behavior is IMPLEMENTATION DEFINED.'''
[[register]]
  name = "CLAIMSET"
  type = "rw"
  width = 32
  description = "CTI Claim Set"
  default = "0x0000000F"
  offset = "0x00000FA0"
  [[register.field]]
    name = "CLAIM_X"
    bits = "31:0"
    type = "rw"
    shortdesc = '''CLAIM tag set bit.'''
    longdesc = '''If x is greater than or equal to the IMPLEMENTATION DEFINED number of CLAIM tags, this bit is RAZ/SBZ. Software can rely on these bits reading as zero, and must use a should-be-zero policy on writes. Implementations must ignore writes.Otherwise, the bit is RAO and the behavior on writes is:A single write to CTICLAIMSET can set multiple tags to 1.'''
[[register]]
  name = "CLAIMCLR"
  type = "rw"
  width = 32
  description = "CTI Claim Clear"
  default = "0x00000000"
  offset = "0x00000FA4"
  [[register.field]]
    name = "CLAIM_X"
    bits = "31:0"
    type = "rw"
    shortdesc = '''Clear CLAIM tag.'''
    longdesc = '''If x is greater than or equal to the IMPLEMENTATION DEFINED number of CLAIM tags, this bit is RAZ/SBZ. Software can rely on these bits reading as zero, and must use a should-be-zero policy on writes. Implementations must ignore writes.Otherwise, reads return the value of CLAIM[x] and the behavior on writes is:A single write to CTICLAIMCLR can clear multiple tags to 0.'''
[[register]]
  name = "DEVAFF0"
  type = "ro"
  width = 32
  description = "CTI Device Affinity Register 0"
  default = "0x80000000"
  offset = "0x00000FA8"
  [[register.field]]
    name = "CTIDEVAFF0"
    bits = "31:0"
    type = "ro"
    shortdesc = '''MPIDR_EL1 low half.'''
    longdesc = '''Read-only copy of the low half of MPIDR_EL1, as seen from the highest implemented exception level.'''
[[register]]
  name = "DEVAFF1"
  type = "ro"
  width = 32
  description = "CTI Device Affinity Register 1"
  default = "0x00000000"
  offset = "0x00000FAC"
  [[register.field]]
    name = "CTIDEVAFF1"
    bits = "31:0"
    type = "ro"
    shortdesc = '''MPIDR_EL1 high half.'''
    longdesc = '''Read-only copy of the high half of MPIDR_EL1, as seen from the highest implemented exception level.'''
[[register]]
  name = "LAR"
  type = "wo"
  width = 32
  description = "CTI Lock Access Register"
  default = "0x00000000"
  offset = "0x00000FB0"
  [[register.field]]
    name = "KEY"
    bits = "31:0"
    type = "wo"
    shortdesc = '''Lock Access control.'''
    longdesc = '''Writing the key value 0xC5ACCE55 to this field unlocks the lock, enabling write accesses to this component's registers through a memory-mapped interface.Writing any other value to this register locks the lock, disabling write accesses to this component's registers through a memory mapped interface.'''
[[register]]
  name = "LSR"
  type = "ro"
  width = 32
  description = "CTI Lock Status Register"
  default = "0x00000000"
  offset = "0x00000FB4"
  [[register.field]]
    name = "NTT"
    bits = "2"
    type = "ro"
    shortdesc = '''Not thirty-two bit access required.'''
    longdesc = '''RAZ.'''
  [[register.field]]
    name = "SLK"
    bits = "1"
    type = "ro"
    shortdesc = '''Software lock status for this component.'''
    longdesc = '''For an access to LSR that is not a memory-mapped access, or when the software lock is not implemented, this field is RES0.For memory-mapped accesses when the software lock is implemented, possible values of this field are:'''
  [[register.field]]
    name = "SLI"
    bits = "0"
    type = "ro"
    shortdesc = '''Software lock implemented.'''
    longdesc = '''For an access to LSR that is not a memory-mapped access, this field is RAZ. For memory-mapped accesses, the value of this field is IMPLEMENTATION DEFINED. Permitted values are:'''
[[register]]
  name = "AUTHSTATUS"
  type = "ro"
  width = 32
  description = "CTI Authentication Status Register"
  default = "0x0000000A"
  offset = "0x00000FB8"
  [[register.field]]
    name = "NSNID"
    bits = "3:2"
    type = "ro"
    shortdesc = '''If EL3 is not implemented and the processor is Secure, holds the same value as DBGAUTHSTATUS_EL1.'''
    longdesc = '''SNID.Otherwise, holds the same value as DBGAUTHSTATUS_EL1.NSNID.'''
  [[register.field]]
    name = "NSID"
    bits = "1:0"
    type = "ro"
    shortdesc = '''If EL3 is not implemented and the processor is Secure, holds the same value as DBGAUTHSTATUS_EL1.'''
    longdesc = '''SID.Otherwise, holds the same value as DBGAUTHSTATUS_EL1.NSID.'''
[[register]]
  name = "DEVARCH"
  type = "ro"
  width = 32
  description = "CTI Device Architecture Register"
  default = "0x47701A14"
  offset = "0x00000FBC"
  [[register.field]]
    name = "ARCHITECT"
    bits = "31:21"
    type = "ro"
    shortdesc = '''Defines the architecture of the component.'''
    longdesc = '''For CTI, this is ARM Limited.Bits [31:28] are the JEP 106 continuation code, 0x4.Bits [27:21] are the JEP 106 ID code, 0x3B.'''
  [[register.field]]
    name = "PRESENT"
    bits = "20"
    type = "ro"
    shortdesc = '''When set to 1, indicates that the DEVARCH is present.'''
    longdesc = '''This field is 1 in v8-A.'''
  [[register.field]]
    name = "REVISION"
    bits = "19:16"
    type = "ro"
    shortdesc = '''Defines the architecture revision.'''
    longdesc = '''For architectures defined by ARM this is the minor revision.For CTI, the revision defined by v8-A is 0x0.All other values are reserved.'''
  [[register.field]]
    name = "ARCHID"
    bits = "15:0"
    type = "ro"
    shortdesc = '''Defines this part to be a v8-A debug component.'''
    longdesc = '''For architectures defined by ARM this is further subdivided.For CTI:Bits [15:12] are the architecture version, 0x1.Bits [11:0] are the architecture part number, 0xA14.This corresponds to CTI architecture version CTIv2.'''
[[register]]
  name = "DEVID"
  type = "ro"
  width = 32
  description = "CTI Device ID Register 0"
  default = "0x01040800"
  offset = "0x00000FC8"
  [[register.field]]
    name = "INOUT"
    bits = "25:24"
    type = "ro"
    shortdesc = '''Input/output options.'''
    longdesc = '''Indicates presence of the input gate. If the CTM is not implemented, this field is RAZ.All other values are reserved.'''
  [[register.field]]
    name = "NUMCHAN"
    bits = "21:16"
    type = "ro"
    shortdesc = '''Number of ECT channels implemented.'''
    longdesc = '''IMPLEMENTATION DEFINED. For v8-A, valid values are:and so on up to 0b100000, 32 channels (0.31) implemented.All other values are reserved.'''
  [[register.field]]
    name = "NUMTRIG"
    bits = "13:8"
    type = "ro"
    shortdesc = '''Number of triggers implemented.'''
    longdesc = '''IMPLEMENTATION DEFINED. This is one more than the index of the largest trigger, rather than the actual number of triggers.For v8-A, valid values are:and so on up to 0b100000, 32 triggers (0.31) implemented.All other values are reserved. If the Trace Extension is implemented, this field must be at least 001000. There is no guarantee that any of the implemented triggers, including the highest numbered, are connected to any components.'''
  [[register.field]]
    name = "EXTMUXNUM"
    bits = "4:0"
    type = "ro"
    shortdesc = '''Maximum number of external triggers available for multiplexing into the CTI.'''
    longdesc = '''This relates only to additional external triggers outside those defined for v8-A.'''
[[register]]
  name = "DEVTYPE"
  type = "ro"
  width = 32
  description = "CTI Device Type Register"
  default = "0x00000014"
  offset = "0x00000FCC"
  [[register.field]]
    name = "SUB"
    bits = "7:4"
    type = "ro"
    shortdesc = '''Subtype.'''
    longdesc = '''Must read as 0x1 to indicate this is a processor component.'''
  [[register.field]]
    name = "MAJOR"
    bits = "3:0"
    type = "ro"
    shortdesc = '''Major type.'''
    longdesc = '''Must read as 0x4 to indicate this is a cross-trigger component.'''
[[register]]
  name = "PIDR4"
  type = "ro"
  width = 32
  description = "CTI Peripheral Identification Register 4"
  default = "0x00000004"
  offset = "0x00000FD0"
  [[register.field]]
    name = "SIZE"
    bits = "7:4"
    type = "ro"
    shortdesc = '''Size of the component.'''
    longdesc = '''RAZ. Log2 of the number of 4KB pages from the start of the component to the end of the component ID registers.'''
  [[register.field]]
    name = "DES_2"
    bits = "3:0"
    type = "ro"
    shortdesc = '''Designer, JEP106 continuation code, least significant nibble.'''
    longdesc = '''For ARM Limited, this field is 0b0100.'''
[[register]]
  name = "PIDR5"
  type = "ro"
  width = 32
  description = "CTI Peripheral Identification Register 5"
  default = "0x00000000"
  offset = "0x00000FD4"
  [[register.field]]
    name = "RESERVED"
    bits = "31:0"
    type = "ro"
[[register]]
  name = "PIDR6"
  type = "ro"
  width = 32
  description = "CTI Peripheral Identification Register 6"
  default = "0x00000000"
  offset = "0x00000FD8"
  [[register.field]]
    name = "RESERVED"
    bits = "31:0"
    type = "ro"
[[register]]
  name = "PIDR7"
  type = "ro"
  width = 32
  description = "CTI Peripheral Identification Register 7"
  default = "0x00000000"
  offset = "0x00000FDC"
  [[register.field]]
    name = "RESERVED"
    bits = "31:0"
    type = "ro"
[[register]]
  name = "PIDR0"
  type = "ro"
  width = 32
  description = "CTI Peripheral Identification Register 0"
  default = "0x000000A8"
  offset = "0x00000FE0"
  [[register.field]]
    name = "PART_0"
    bits = "7:0"
    type = "ro"
[[register]]
  name = "PIDR1"
  type = "ro"
  width = 32
  description = "CTI Peripheral Identification Register 1"
  default = "0x000000B9"
  offset = "0x00000FE4"
  [[register.field]]
    name = "DES_0"
    bits = "7:4"
    type = "ro"
    shortdesc = '''Designer, least significant nibble of JEP106 ID code.'''
    longdesc = '''For ARM Limited, this field is 0b1011.'''
  [[register.field]]
    name = "PART_1"
    bits = "3:0"
    type = "ro"
[[register]]
  name = "PIDR2"
  type = "ro"
  width = 32
  description = "CTI Peripheral Identification Register 2"
  default = "0x0000004B"
  offset = "0x00000FE8"
  [[register.field]]
    name = "REVISION"
    bits = "7:4"
    type = "ro"
    shortdesc = '''Part major revision.'''
    longdesc = '''Parts can also use this field to extend Part number to 16-bits.'''
  [[register.field]]
    name = "JEDEC"
    bits = "3"
    type = "ro"
    shortdesc = '''RAO.'''
    longdesc = '''Indicates a JEP106 identity code is used.'''
  [[register.field]]
    name = "DES_1"
    bits = "2:0"
    type = "ro"
    shortdesc = '''Designer, most significant bits of JEP106 ID code.'''
    longdesc = '''For ARM Limited, this field is 0b011.'''
[[register]]
  name = "PIDR3"
  type = "ro"
  width = 32
  description = "CTI Peripheral Identification Register 3"
  default = "0x00000000"
  offset = "0x00000FEC"
  [[register.field]]
    name = "REVAND"
    bits = "7:4"
    type = "ro"
    shortdesc = '''Part minor revision.'''
    longdesc = '''Parts using CTIPIDR2.REVISION as an extension to the Part number must use this field as a major revision number.'''
  [[register.field]]
    name = "CMOD"
    bits = "3:0"
    type = "ro"
    shortdesc = '''Customer modified.'''
    longdesc = '''Indicates someone other than the Designer has modified the component.'''
[[register]]
  name = "CIDR0"
  type = "ro"
  width = 32
  description = "CTI Component Identification Register 0"
  default = "0x0000000D"
  offset = "0x00000FF0"
  [[register.field]]
    name = "PRMBL_0"
    bits = "7:0"
    type = "ro"
    shortdesc = '''Preamble.'''
    longdesc = '''Must read as 0x0D.'''
[[register]]
  name = "CIDR1"
  type = "ro"
  width = 32
  description = "CTI Component Identification Register 1"
  default = "0x00000090"
  offset = "0x00000FF4"
  [[register.field]]
    name = "CLASS"
    bits = "7:4"
    type = "ro"
    shortdesc = '''Component class.'''
    longdesc = '''Reads as 0x9, debug component.'''
  [[register.field]]
    name = "PRMBL_1"
    bits = "3:0"
    type = "ro"
    shortdesc = '''Preamble.'''
    longdesc = '''RAZ.'''
[[register]]
  name = "CIDR2"
  type = "ro"
  width = 32
  description = "CTI Component Identification Register 2"
  default = "0x00000005"
  offset = "0x00000FF8"
  [[register.field]]
    name = "PRMBL_2"
    bits = "7:0"
    type = "ro"
    shortdesc = '''Preamble.'''
    longdesc = '''Must read as 0x05.'''
[[register]]
  name = "CIDR3"
  type = "ro"
  width = 32
  description = "CTI Component Identification Register 3"
  default = "0x000000B1"
  offset = "0x00000FFC"
  [[register.field]]
    name = "PRMBL_3"
    bits = "7:0"
    type = "ro"
    shortdesc = '''Preamble.'''
    longdesc = '''Must read as 0xB1.'''
