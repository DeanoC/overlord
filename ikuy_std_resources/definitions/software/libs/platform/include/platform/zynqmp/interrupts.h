#pragma once

typedef enum {
	INT_UNKNOWN_0 = 32,
	INT_UNKNOWN_1 = 32,
	INT_UNKNOWN_2 = 32,
	INT_UNKNOWN_3 = 32,
	INT_UNKNOWN_4 = 32,
	INT_UNKNOWN_5 = 32,
	INT_UNKNOWN_6 = 32,
	INT_UNKNOWN_7 = 32,
	INT_RPU0_PERF_MON 	= 40, // GICP0 bit 0
	INT_RPU1_PERF_MON = 41,
	INT_OCM_ERR = 42,
	INT_LPD_APB,
	INT_RPU0_ECC,
	INT_RPU1_ECC,
	INT_NAND = 46,
	INT_QSPI = 47,
	INT_GPIO = 48,
	INT_I2C0 = 49,
	INT_I2C1 = 50, // 50
	INT_SPI0 = 51,
	INT_SPI1 = 52,
	INT_UART0 = 53,
	INT_UART1 = 54,
	INT_CAN0 = 55,
	INT_CAN1 = 56,
	INT_LPD_APM,
	INT_RTC_ALARM = 58,
	INT_RTC_SECONDS,
	INT_CLKMON, // 60
	INT_IPI_CH7,  // AKA IPI RPU PL2
	INT_IPI_CH8,  // AKA IPI RPU PL1
	INT_IPI_CH9,  // AKA IPI RPU PL0
	INT_IPI_CH10, // AKA IPI RPU PL3 // 64 GICP1 bit 1
	INT_IPI_CH1,	// AKA IPI RPU CPU0
	INT_IPI_CH2,	// AKA IPI RPU CPU1
	INT_IPI_CH0,	// AKA IPI APU CPU
	INT_TTC0_1 = 68,
	INT_TTC0_2 = 69,
	INT_TTC0_3 = 70, // 70
	INT_TTC1_1 = 71,
	INT_TTC1_2 = 72,
	INT_TTC1_3 = 73,
	INT_TTC2_1 = 74,
	INT_TTC2_2 = 75,
	INT_TTC2_3 = 76,
	INT_TTC3_1 = 77,
	INT_TTC3_2 = 78,
	INT_TTC3_3 = 79,
	INT_SDIO0, // 80
	INT_SDIO1,
	INT_SDIO0_WAKEUP,
	INT_SDUI1_WAKEUP,
	INT_LPD_SWDT,
	INT_CSU_SWDT,
	INT_LPD_ATB,
	INT_AIB,
	INT_SYSMON,
	INT_GEM0,
	INT_GEM0_WAKEUP, // 90
	INT_GEM1,
	INT_GEM1_WAKEUP,
	INT_GEM2,
	INT_GEM2_WAKEUP,
	INT_GEM3,
	INT_GEM3_WAKEUP, // 96 GICP2 bit 1
	INT_USB0_ENDPOINT_BULK,
	INT_USB0_ENDPOINT_ISOCHRONOUS,
	INT_USB0_ENDPOINT_CONTROLLER,
	INT_USB0_ENDPOINT_CONTROL, // 100
	INT_USB0_OTG,
	INT_USB1_ENDPOINT_BULK,
	INT_USB1_ENDPOINT_ISOCHRONOUS,
	INT_USB1_ENDPOINT_CONTROLLER,
	INT_USB1_ENDPOINT_CONTROL,
	INT_USB1_OTG,
	INT_USB0_WAKEUP,
	INT_USB1_WAKEUP,
	INT_LPD_DMA_0,
	INT_LPD_DMA_1, // 110
	INT_LPD_DMA_2,
	INT_LPD_DMA_3,
	INT_LPD_DMA_4,
	INT_LPD_DMA_5,
	INT_LPD_DMA_6,
	INT_LPD_DMA_7,
	INT_CSU,
	INT_CSU_DMA,
	INT_EFUSE,
	INT_LPD_XMPU_XPPU, // 120
	INT_PL_PS_0,
	INT_PL_PS_1,
	INT_PL_PS_2,
	INT_PL_PS_3,
	INT_PL_PS_4,
	INT_PL_PS_5,
	INT_PL_PS_6, // 128 GICP3 bit 1
	INT_PL_PS_7,
	INT_RESERVED_0,
	INT_RESERVED_1, // 130
	INT_RESERVED_2,
	INT_RESERVED_3,
	INT_RESERVED_4,
	INT_RESERVED_5,
	INT_RESERVED_6,
	INT_PL_PS_8,
	INT_PL_PS_9,
	INT_PL_PS_10,
	INT_PL_PS_11,
	INT_PL_PS_12, // 140
	INT_PL_PS_13,
	INT_PL_PS_14,
	INT_PL_PS_15,
	INT_DDR,
	INT_FPD_SWDT,
	INT_PCIE_MSI0,
	INT_PCIE_MSI1,
	INT_PCIE_INTX,
	INT_PCIE_DMA,
	INT_PCIE_MSC, // 150
	INT_DISPLAY_PORT,
	INT_FPD_APB,
	INT_FPD_ATB,
	INT_DPDMA,
	INT_FPD_APM,
	INT_FPD_DMA_0,
	INT_FPD_DMA_1,
	INT_FPD_DMA_2,
	INT_FPD_DMA_3,
	INT_FPD_DMA_4, // 160 // 160 GICP4 bit 1
	INT_FPD_DMA_5,
	INT_FPD_DMA_6,
	INT_FPD_DMA_7,
	INT_GPU,
	INT_SATA,
	INT_FPD_XMPU,
	INT_APU0_VCPUMNT,
	INT_APU1_VCPUMNT,
	INT_APU2_VCPUMNT,
	INT_APU3_VCPUMNT, // 170
	INT_APU0_CTI,
	INT_APU1_CTI,
	INT_APU2_CTI,
	INT_APU3_CTI,
	INT_APU0_PERF_MON,
	INT_APU1_PERF_MON,
	INT_APU2_PERF_MON,
	INT_APU3_PERF_MON,
	INT_APU0_COMM,
	INT_APU1_COMM, // 180
	INT_APU2_COMM,
	INT_APU3_COMM,
	INT_L2_CACHE,
	INT_APU_EXT_ERROR,
	INT_APU_REG_ERROR,
	INT_CCI,
	INT_SMMU       // 187 // 187 GICP4 bit 27
} Interrupt_Names;
static_assert(INT_RPU0_PERF_MON == 40);
static_assert(INT_I2C1 == 50);
static_assert(INT_CLKMON == 60);
static_assert(INT_TTC0_3 == 70);
static_assert(INT_SDIO0 == 80);
static_assert(INT_GEM0_WAKEUP == 90);
static_assert(INT_USB0_ENDPOINT_CONTROL == 100);
static_assert(INT_LPD_DMA_1 == 110);
static_assert(INT_LPD_XMPU_XPPU == 120);
static_assert(INT_RESERVED_1 == 130);
static_assert(INT_PL_PS_12 == 140);
static_assert(INT_PCIE_MSC == 150);
static_assert(INT_FPD_DMA_4 == 160);
static_assert(INT_APU3_VCPUMNT == 170);
static_assert(INT_APU1_COMM == 180);
static_assert(INT_SMMU == 187);
static_assert(INT_TTC2_1 == (42U + 32U));